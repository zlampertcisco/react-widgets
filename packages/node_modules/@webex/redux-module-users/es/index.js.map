{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/actions.js","../src/reducer.js"],"sourcesContent":["import {deconstructHydraId} from '@webex/react-component-utils';\n\nexport function constructUserFromParticipant(user) {\n  return {\n    id: user.id,\n    displayName: user.displayName,\n    nickName: user.displayName ? user.displayName.split(' ')[0] : '',\n    email: user.emailAddress,\n    orgId: user.orgId,\n    status: {\n      isFetching: false\n    }\n  };\n}\n\nexport function constructUserFromHydra(user) {\n  if (user) {\n    return {\n      id: deconstructHydraId(user.id).id,\n      displayName: user.displayName,\n      nickName: user.nickName,\n      email: user.emails[0],\n      orgId: deconstructHydraId(user.orgId).id,\n      status: {\n        isFetching: false\n      }\n    };\n  }\n\n  return {};\n}\n\nexport function constructUser(user) {\n  if (user && user.nickName || user.emails) {\n    return constructUserFromHydra(user);\n  }\n\n  return constructUserFromParticipant(user);\n}\n\nexport function constructCurrentUser(user) {\n  return {\n    id: user.id,\n    displayName: user.name,\n    nickName: user.givenName,\n    email: user.email,\n    orgId: user.orgId,\n    status: {\n      isFetching: false\n    }\n  };\n}\n","import {convertToSmallAvatar, addAvatar} from '@webex/redux-module-avatar';\nimport {subscribeToPresenceUpdates} from '@webex/redux-module-presence';\nimport {validateAndDecodeId} from '@webex/react-component-utils';\n\nimport {constructUser, constructCurrentUser} from './helpers';\n\nexport const STORE_USER = 'users/STORE_USER';\nexport const STORE_USERS = 'users/STORE_USERS';\nexport const FETCH_USER_REQUEST = 'users/FETCH_USER_REQUEST';\nexport const STORE_CURRENT_USER_ID = 'users/STORE_CURRENT_USER_ID';\nexport const STORE_CURRENT_USER = 'users/STORE_CURRENT_USER';\nexport const FETCH_CURRENT_USER_REQUEST = 'users/FETCH_CURRENT_USER_REQUEST';\n\nexport const PENDING_STATUS = 'PENDING';\n\nfunction fetchUserRequest({email, id}) {\n  return {\n    type: FETCH_USER_REQUEST,\n    payload: {\n      email,\n      id\n    }\n  };\n}\n\nexport function storeUser(user) {\n  return {\n    type: STORE_USER,\n    payload: {\n      user: constructUser(user)\n    }\n  };\n}\n\nexport function storeUsers(users) {\n  return {\n    type: STORE_USERS,\n    payload: {\n      users: users.map((u) => constructUser(u))\n    }\n  };\n}\n\nfunction fetchCurrentUserRequest(id) {\n  return {\n    type: FETCH_CURRENT_USER_REQUEST,\n    payload: {\n      id\n    }\n  };\n}\n\nfunction storeCurrentUser(user) {\n  return {\n    type: STORE_CURRENT_USER,\n    payload: {\n      user: constructCurrentUser(user)\n    }\n  };\n}\n\nfunction storeCurrentUserId(id) {\n  return {\n    type: STORE_CURRENT_USER_ID,\n    payload: {\n      id\n    }\n  };\n}\n\n/**\n * Retrieves the current user using internal APIs\n * @param {Object} sparkInstance\n * @returns {Function}\n */\nexport function fetchCurrentUser(sparkInstance) {\n  return (dispatch, getState) => {\n    const {users} = getState();\n    // Check for stored current User\n    let userId = users.get('currentUserId');\n\n    if (!sparkInstance) {\n      return Promise.reject(new Error('spark instance is required to fetch current user'));\n    }\n\n    // Get userId from device registration\n    if (!userId) {\n      if (sparkInstance.internal.device && sparkInstance.internal.device.userId) {\n        ({userId} = sparkInstance.internal.device);\n        dispatch(storeCurrentUserId(userId));\n      }\n      else {\n        return Promise.reject(new Error('cannot retrieve current user. spark device is not registered.'));\n      }\n    }\n\n    if (userId) {\n      const currentUser = users.getIn(['byId', userId]);\n\n      if (currentUser) {\n        return Promise.resolve(currentUser);\n      }\n    }\n    dispatch(fetchCurrentUserRequest(userId));\n    dispatch(subscribeToPresenceUpdates([userId], sparkInstance));\n\n    return sparkInstance.internal.user.get()\n      .then((user) => {\n        dispatch(storeCurrentUser(user));\n        if (user.photos && user.photos[0] && user.photos[0].url) {\n          const {id: personId} = validateAndDecodeId(userId);\n\n          dispatch(addAvatar(personId, convertToSmallAvatar(user.photos[0].url)));\n        }\n\n        return Promise.resolve(user);\n      });\n  };\n}\n\n/**\n * Performs an API call to fetch and store user details\n * @param {Object} user\n * @param {String} user.email\n * @param {String} user.id\n * @param {Object} sparkInstance\n * @returns {Function}\n */\nexport function fetchUser({email, id}, sparkInstance) {\n  return (dispatch) => {\n    if (!sparkInstance) {\n      return Promise.reject(new Error('spark instance is required to fetch users'));\n    }\n\n    const handleResponse = (person) => {\n      dispatch(storeUser(person));\n      const {id: personId} = validateAndDecodeId(person.id);\n\n      dispatch(addAvatar(personId, convertToSmallAvatar(person.avatar)));\n\n      return Promise.resolve(person);\n    };\n\n    if (email) {\n      return sparkInstance.people.list({email})\n        .then((res) => res.items[0])\n        .then(handleResponse);\n    }\n\n    if (id) {\n      return sparkInstance.people.get(id)\n        .then(handleResponse);\n    }\n\n    return Promise.reject(new Error('user email or id is required'));\n  };\n}\n\n/**\n * Retrieves user from store or makes an API call if it doesn't exist\n * @param {Object} user\n * @param {String} user.email\n * @param {String} user.id\n * @param {Object} sparkInstance\n * @returns {Function}\n */\nexport function getUser({email, id}, sparkInstance) {\n  return (dispatch, getState) => {\n    // Check if we've fetched or already fetched this user\n    const {users} = getState();\n    const userId = validateAndDecodeId(id).id || users.getIn(['byEmail', email]);\n\n    if (userId) {\n      const user = users.getIn(['byId', userId]);\n\n      // If we've already fetched this user\n      if (user) {\n        // If we haven't finished getting the user\n        if (user.status.isFetching) {\n          return Promise.resolve();\n        }\n\n        return Promise.resolve(user);\n      }\n    }\n\n    // Initiate an API call to get user\n    dispatch(fetchUserRequest({email, id: userId}));\n\n    return dispatch(fetchUser({email, id: userId}, sparkInstance));\n  };\n}\n","import {fromJS, Record} from 'immutable';\n\nimport {\n  STORE_USER,\n  STORE_USERS,\n  FETCH_USER_REQUEST,\n  STORE_CURRENT_USER,\n  FETCH_CURRENT_USER_REQUEST,\n  PENDING_STATUS\n} from './actions';\n\nconst Status = new Record({\n  isFetching: false\n});\nconst User = new Record({\n  id: undefined,\n  displayName: '',\n  nickName: '',\n  email: '',\n  orgId: '',\n  status: new Status()\n});\n\nexport const initialState = fromJS({\n  currentUserId: null,\n  byId: {},\n  byEmail: {}\n});\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case STORE_USER: {\n      const {user} = action.payload;\n\n      return state\n        .setIn(['byId', user.id], new User(user))\n        .setIn(['byEmail', user.email], user.id);\n    }\n    case STORE_USERS: {\n      const users = {};\n      const emails = {};\n\n      action.payload.users.forEach((u) => {\n        users[u.id] = new User(u);\n        emails[u.email] = u.id;\n      });\n\n      return state\n        .mergeIn(['byId'], users)\n        .mergeIn(['byEmail'], emails);\n    }\n    case STORE_CURRENT_USER: {\n      const {user} = action.payload;\n\n      return state.set('currentUserId', user.id)\n        .setIn(['byId', user.id], new User(user))\n        .setIn(['byEmail', user.email], user.id);\n    }\n    case FETCH_USER_REQUEST: {\n      const {email, id} = action.payload;\n      let newState = state;\n\n      if (id) {\n        newState = newState.setIn(['byId', id], new User({status: {isFetching: true}}));\n      }\n      else if (email) {\n        newState = newState.setIn(['byEmail', email], id || PENDING_STATUS);\n      }\n\n      return newState;\n    }\n    case FETCH_CURRENT_USER_REQUEST: {\n      const {id} = action.payload;\n\n      return state.set('currentUserId', id)\n        .setIn(['byId', id], new User({status: {isFetching: true}}));\n    }\n    default:\n      return state;\n  }\n}\n\nexport const records = {\n  Status,\n  User\n};\n"],"names":["constructUserFromParticipant","user","id","displayName","nickName","split","email","emailAddress","orgId","status","isFetching","constructUserFromHydra","deconstructHydraId","emails","constructUser","constructCurrentUser","name","givenName","STORE_USER","STORE_USERS","FETCH_USER_REQUEST","STORE_CURRENT_USER_ID","STORE_CURRENT_USER","FETCH_CURRENT_USER_REQUEST","PENDING_STATUS","fetchUserRequest","type","payload","storeUser","storeUsers","users","map","u","fetchCurrentUserRequest","storeCurrentUser","storeCurrentUserId","fetchCurrentUser","sparkInstance","dispatch","getState","userId","get","Promise","reject","Error","internal","device","currentUser","getIn","resolve","subscribeToPresenceUpdates","then","photos","url","personId","validateAndDecodeId","addAvatar","convertToSmallAvatar","fetchUser","handleResponse","person","avatar","people","list","res","items","getUser","Status","Record","User","undefined","initialState","fromJS","currentUserId","byId","byEmail","reducer","state","action","setIn","forEach","mergeIn","set","newState","records"],"mappings":"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"}