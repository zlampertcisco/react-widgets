{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/* eslint no-underscore-dangle: 0  */\n\nimport React from 'react';\nimport {Input} from '@momentum-ui/react';\nimport * as AdaptiveCard from 'adaptivecards';\nimport classnames from 'classnames';\nimport {renderCardElement} from '@webex/react-component-utils';\n\n/**\n * Replaces Text Input of adaptive Card with MD(Momentum Design) Input Component\n * @returns {HTMLElement}\n */\nclass MDTextInput extends AdaptiveCard.TextInput {\n  constructor(addChildNode) {\n    super();\n    this.addChildNode = addChildNode;\n  }\n\n  /**\n   * returns the assigned value to internalRender() method\n   * @returns {string}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * assigns the value when the data is sent in the JSON request\n   * @param {string} newValue\n   */\n  set value(newValue) {\n    this._value = newValue;\n  }\n\n  /**\n   * renders momentum design `<Input />` Component\n   * @returns {HTMLElement}\n   */\n  internalRender() {\n    this.value = this.defaultValue || '';\n\n    // Input style of Adaptive card supports Text, email, phone and url\n    // Momentum Design only has text and email so rendering phone and url as text\n    const inputStyles = {\n      0: 'Text',\n      1: 'Text',\n      2: 'Text',\n      3: 'Email'\n    };\n\n    this._inputElement = document.createElement('div');\n    const jsx = (\n      <Input\n        label={this.title}\n        value={this.value}\n        maxLength={this.maxLength || null}\n        placeholder={this.placeholder}\n        type={inputStyles[this.style].toLowerCase()}\n        multiline={!!this.isMultiline}\n        className={classnames('ac-input', 'ac-textInput', {'ac-multiline': !!this.isMultiline})}\n        onChange={(event) => {\n          this.value = event.target.value;\n        }}\n        clear\n      />\n    );\n\n    renderCardElement(jsx, this._inputElement, this.addChildNode);\n\n    return this._inputElement;\n  }\n}\n\nexport default MDTextInput;\n"],"names":["MDTextInput","AdaptiveCard","TextInput","constructor","addChildNode","value","_value","newValue","internalRender","defaultValue","inputStyles","_inputElement","document","createElement","jsx","title","maxLength","placeholder","style","toLowerCase","isMultiline","classnames","event","target","renderCardElement"],"mappings":";;;;;;AAAA;AAQA;AACA;AACA;AACA;;AACA,MAAMA,WAAN,SAA0BC,YAAY,CAACC,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,YAAD,EAAe;AACxB;AACA,SAAKA,YAAL,GAAoBA,YAApB;AACD;AAED;AACF;AACA;AACA;;;AACW,MAALC,KAAK,GAAG;AACV,WAAO,KAAKC,MAAZ;AACD;AAED;AACF;AACA;AACA;;;AACW,MAALD,KAAK,CAACE,QAAD,EAAW;AAClB,SAAKD,MAAL,GAAcC,QAAd;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,cAAc,GAAG;AACf,SAAKH,KAAL,GAAa,KAAKI,YAAL,IAAqB,EAAlC,CADe;AAIf;;AACA,UAAMC,WAAW,GAAG;AAClB,SAAG,MADe;AAElB,SAAG,MAFe;AAGlB,SAAG,MAHe;AAIlB,SAAG;AAJe,KAApB;AAOA,SAAKC,aAAL,GAAqBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAArB;AACA,UAAMC,GAAG,gBACP,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKC,KADd;AAEE,MAAA,KAAK,EAAE,KAAKV,KAFd;AAGE,MAAA,SAAS,EAAE,KAAKW,SAAL,IAAkB,IAH/B;AAIE,MAAA,WAAW,EAAE,KAAKC,WAJpB;AAKE,MAAA,IAAI,EAAEP,WAAW,CAAC,KAAKQ,KAAN,CAAX,CAAwBC,WAAxB,EALR;AAME,MAAA,SAAS,EAAE,CAAC,CAAC,KAAKC,WANpB;AAOE,MAAA,SAAS,EAAEC,UAAU,CAAC,UAAD,EAAa,cAAb,EAA6B;AAAC,wBAAgB,CAAC,CAAC,KAAKD;AAAxB,OAA7B,CAPvB;AAQE,MAAA,QAAQ,EAAGE,KAAD,IAAW;AACnB,aAAKjB,KAAL,GAAaiB,KAAK,CAACC,MAAN,CAAalB,KAA1B;AACD,OAVH;AAWE,MAAA,KAAK;AAXP,MADF;AAgBAmB,IAAAA,iBAAiB,CAACV,GAAD,EAAM,KAAKH,aAAX,EAA0B,KAAKP,YAA/B,CAAjB;AAEA,WAAO,KAAKO,aAAZ;AACD;;AA1D8C;;;;"}