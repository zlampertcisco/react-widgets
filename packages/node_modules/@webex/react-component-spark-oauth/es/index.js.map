{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport '@webex/internal-plugin-encryption';\nimport LocalStorageStoreAdapter from '@webex/storage-adapter-local-storage';\nimport Spark from '@webex/webex-core';\n\nconst propTypes = {\n  clientId: PropTypes.string.isRequired,\n  clientSecret: PropTypes.string.isRequired,\n  doAuth: PropTypes.bool,\n  onAuth: PropTypes.func,\n  redirectUri: PropTypes.string.isRequired,\n  scope: PropTypes.string.isRequired\n};\n\nconst defaultProps = {\n  doAuth: false,\n  onAuth: () => {}\n};\n\nclass SparkOAuth extends Component {\n  componentDidMount() {\n    this.spark = new Spark({\n      config: {\n        credentials: {\n          oauth: {\n            client_id: this.props.clientId,\n            client_secret: this.props.clientSecret,\n            scope: this.props.scope,\n            redirect_uri: this.props.redirectUri\n          }\n        },\n        storage: {\n          boundedAdapter: new LocalStorageStoreAdapter('webex-embedded')\n        }\n      }\n    });\n\n    this.spark.listenToAndRun(this.spark, 'change:canAuthorize', () => {\n      this.checkForOauthToken();\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.doAuth && nextProps.doAuth !== this.props.doAuth) {\n      this.spark.authenticate();\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  checkForOauthToken() {\n    const {credentials} = this.spark;\n\n    if (credentials.canAuthorize && credentials.supertoken) {\n      const {supertoken} = credentials;\n\n      this.props.onAuth(supertoken.access_token);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nSparkOAuth.propTypes = propTypes;\nSparkOAuth.defaultProps = defaultProps;\n\nexport default SparkOAuth;\n"],"names":["propTypes","clientId","PropTypes","string","isRequired","clientSecret","doAuth","bool","onAuth","func","redirectUri","scope","defaultProps","SparkOAuth","Component","componentDidMount","spark","Spark","config","credentials","oauth","client_id","props","client_secret","redirect_uri","storage","boundedAdapter","LocalStorageStoreAdapter","listenToAndRun","checkForOauthToken","componentWillReceiveProps","nextProps","authenticate","shouldComponentUpdate","canAuthorize","supertoken","access_token","render"],"mappings":";;;;;;AAMA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAEC,SAAS,CAACC,MAAV,CAAiBC,UADX;AAEhBC,EAAAA,YAAY,EAAEH,SAAS,CAACC,MAAV,CAAiBC,UAFf;AAGhBE,EAAAA,MAAM,EAAEJ,SAAS,CAACK,IAHF;AAIhBC,EAAAA,MAAM,EAAEN,SAAS,CAACO,IAJF;AAKhBC,EAAAA,WAAW,EAAER,SAAS,CAACC,MAAV,CAAiBC,UALd;AAMhBO,EAAAA,KAAK,EAAET,SAAS,CAACC,MAAV,CAAiBC;AANR,CAAlB;AASA,MAAMQ,YAAY,GAAG;AACnBN,EAAAA,MAAM,EAAE,KADW;AAEnBE,EAAAA,MAAM,EAAE,MAAM;AAFK,CAArB;;AAKA,MAAMK,UAAN,SAAyBC,SAAzB,CAAmC;AACjCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,GAAa,IAAIC,KAAJ,CAAU;AACrBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWrB,QADjB;AAELsB,YAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWjB,YAFrB;AAGLM,YAAAA,KAAK,EAAE,KAAKW,KAAL,CAAWX,KAHb;AAILa,YAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWZ;AAJpB;AADI,SADP;AASNe,QAAAA,OAAO,EAAE;AACPC,UAAAA,cAAc,EAAE,IAAIC,wBAAJ,CAA6B,gBAA7B;AADT;AATH;AADa,KAAV,CAAb;AAgBA,SAAKX,KAAL,CAAWY,cAAX,CAA0B,KAAKZ,KAA/B,EAAsC,qBAAtC,EAA6D,MAAM;AACjE,WAAKa,kBAAL;AACD,KAFD;AAGD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACzB,MAAV,IAAoByB,SAAS,CAACzB,MAAV,KAAqB,KAAKgB,KAAL,CAAWhB,MAAxD,EAAgE;AAC9D,WAAKU,KAAL,CAAWgB,YAAX;AACD;AACF;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,WAAO,KAAP;AACD;;AAEDJ,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAACV,MAAAA;AAAD,QAAgB,KAAKH,KAA3B;;AAEA,QAAIG,WAAW,CAACe,YAAZ,IAA4Bf,WAAW,CAACgB,UAA5C,EAAwD;AACtD,YAAM;AAACA,QAAAA;AAAD,UAAehB,WAArB;AAEA,WAAKG,KAAL,CAAWd,MAAX,CAAkB2B,UAAU,CAACC,YAA7B;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AA7CgC;;AAgDnCxB,UAAU,CAACb,SAAX,GAAuBA,SAAvB;AACAa,UAAU,CAACD,YAAX,GAA0BA,YAA1B;;;;"}