import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { getFileIcon, bytesToSize } from '@webex/react-component-utils';
import { Icon, Button } from '@momentum-ui/react';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-component-activity-share-file__shareItem__LnNoYXJl {\n  position: relative;\n  display: flex;\n  height: 60px;\n  font-family: CiscoSans, 'Helvetica Neue', Arial, sans-serif;\n  color: #6a6b6c;\n  background-color: #ebebec;\n  border: 1px solid #ebebec;\n  border-radius: 4px;\n}\n\n.react-component-activity-share-file__fileIcon__LnNoYXJl {\n  display: flex;\n  flex: 0 0 auto;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n}\n\n.react-component-activity-share-file__meta__LnNoYXJl {\n  display: flex;\n  flex: 1 1 auto;\n  align-items: center;\n  justify-content: center;\n  max-width: 200px;\n}\n\n.react-component-activity-share-file__fileInfo__LnNoYXJl {\n  font-size: 12px;\n  flex: 1 1 auto;\n}\n\n.react-component-activity-share-file__fileName__LnNoYXJl {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.react-component-activity-share-file__fileProps__LnNoYXJl {\n  color: #aeaeaf;\n}\n\n.react-component-activity-share-file__shareActions__LnNoYXJl {\n  display: flex;\n  flex: 0 0 auto;\n  width: 60px;\n}\n\n.react-component-activity-share-file__shareActionItem__LnNoYXJl {\n  margin: auto;\n  height: 32px;\n  width: 32px;\n}\n\n.react-component-activity-share-file__fileType__LnNoYXJl {\n  margin-left: 5px;\n}\n";
var styles = {"shareItem":"react-component-activity-share-file__shareItem__LnNoYXJl","fileIcon":"react-component-activity-share-file__fileIcon__LnNoYXJl","meta":"react-component-activity-share-file__meta__LnNoYXJl","fileInfo":"react-component-activity-share-file__fileInfo__LnNoYXJl","fileName":"react-component-activity-share-file__fileName__LnNoYXJl","fileProps":"react-component-activity-share-file__fileProps__LnNoYXJl","shareActions":"react-component-activity-share-file__shareActions__LnNoYXJl","shareActionItem":"react-component-activity-share-file__shareActionItem__LnNoYXJl","fileType":"react-component-activity-share-file__fileType__LnNoYXJl"};
styleInject(css_248z);

const propTypes = {
  file: PropTypes.shape({
    displayName: PropTypes.string,
    fileSize: PropTypes.number,
    mimeType: PropTypes.string,
    objectType: PropTypes.string
  }).isRequired,
  isPending: PropTypes.bool,
  onDownloadClick: PropTypes.func.isRequired
};
const defaultProps = {
  isPending: false
};

function ActivityShareFile(props) {
  const {
    file,
    isPending,
    onDownloadClick
  } = props;
  const {
    displayName,
    fileSize,
    mimeType,
    objectType
  } = file;

  function handleDownloadClick() {
    onDownloadClick(file);
  }

  return /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-activity-share-item', styles.shareItem)
  }, /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-share-file-icon', styles.fileIcon)
  }, /*#__PURE__*/React.createElement(Icon, {
    name: `icon-${getFileIcon(mimeType, 32)}`
  })), /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-share-meta', styles.meta)
  }, /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-share-file-info', styles.fileInfo)
  }, /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-share-name', styles.fileName)
  }, displayName), /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-share-file-props', styles.fileProps)
  }, /*#__PURE__*/React.createElement("span", {
    className: classNames('webex-share-file-size', styles.fileSize)
  }, bytesToSize(fileSize)), /*#__PURE__*/React.createElement("span", {
    className: classNames('webex-share-file-type', styles.fileType)
  }, objectType)))), !isPending && /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-share-item-actions', styles.shareActions)
  }, /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-share-action-item', styles.shareActionItem)
  }, /*#__PURE__*/React.createElement(Button, {
    ariaLabel: "Download",
    style: {
      backgroundColor: 'black'
    },
    circle: true,
    onClick: handleDownloadClick,
    size: 32
  }, /*#__PURE__*/React.createElement(Icon, {
    name: "icon-arrow-tail-down_12",
    color: "white"
  })))));
}

ActivityShareFile.propTypes = propTypes;
ActivityShareFile.defaultProps = defaultProps;

export default ActivityShareFile;
//# sourceMappingURL=index.js.map
