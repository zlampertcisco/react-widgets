import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { Button, Icon } from '@momentum-ui/react';
import ButtonControls from '@webex/react-component-button-controls';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-component-activity-menu__activityMenu__LmFjdGl2 {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n}\n\n.react-component-activity-menu__mainMenu__LmFjdGl2 {\n  display: flex;\n  padding-top: 90px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.react-component-activity-menu__menuExit__LmFjdGl2 {\n  position: absolute;\n  top: 16px;\n  right: 16px;\n}\n\n.react-component-activity-menu__menuExit__LmFjdGl2 .react-component-activity-menu__exitButton__LmFjdGl2 {\n  width: 40px;\n  height: 40px;\n  font-size: 16px;\n  line-height: 60%;\n  color: #fff;\n  background-color: #07c1e4;\n  border-radius: 50%;\n}\n";
var styles = {"activityMenu":"react-component-activity-menu__activityMenu__LmFjdGl2","mainMenu":"react-component-activity-menu__mainMenu__LmFjdGl2","menuExit":"react-component-activity-menu__menuExit__LmFjdGl2","exitButton":"react-component-activity-menu__exitButton__LmFjdGl2"};
styleInject(css_248z);

const propTypes = {
  buttons: PropTypes.array.isRequired,
  onExit: PropTypes.func,
  showExitButton: PropTypes.bool
};
const defaultProps = {
  onExit: () => {},
  showExitButton: false
};

function ActivityMenu(props) {
  const {
    buttons,
    onExit,
    showExitButton
  } = props;

  function handleExit(e) {
    e.preventDefault();
    onExit();
  }

  return /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-activity-menu', styles.activityMenu)
  }, showExitButton && /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-activity-menu-exit', styles.menuExit)
  }, /*#__PURE__*/React.createElement(Button, {
    ariaLabel: "Exit",
    circle: true,
    onClick: handleExit
  }, /*#__PURE__*/React.createElement(Icon, {
    name: "icon-cancel_16"
  }))), /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-main-menu', styles.mainMenu)
  }, /*#__PURE__*/React.createElement(ButtonControls, {
    buttons: buttons,
    showLabels: true
  })));
}

ActivityMenu.propTypes = propTypes;
ActivityMenu.defaultProps = defaultProps;

export default ActivityMenu;
//# sourceMappingURL=index.js.map
