{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/actions.js","../src/enhancer.js","../src/reducer.js"],"sourcesContent":["import {Record} from 'immutable';\n\nconst Membership = Record({\n  audioMuted: false,\n  isInitiator: true,\n  hydraId: '',\n  id: '',\n  state: '',\n  videoMuted: false\n});\n\n/**\n * Constructs a call state with properties the widget uses\n *\n * @export\n * @param {any} call\n * @param {Error} rawError\n * @returns {object}\n */\nfunction constructCallStatus(call) {\n  let isConnected,\n    isIncoming,\n    isInitiated,\n    isRinging;\n\n  const {\n    remoteAudioMuted,\n    remoteVideoMuted\n  } = call;\n\n  try {\n    // Ringing means we are calling out to 1:1 and the party hasn't answered\n    isRinging = call.remoteMember && call.remoteMember.state === 'notified';\n\n    // Connected means both parties are active on a 1:1 or joined in group\n    // isCall is true when the call is 1:1\n    if (typeof call.isCall === 'boolean') {\n      if (call.isCall) {\n        isInitiated = !!call.locus;\n        isConnected = !!call.remoteMember &&\n          call.remoteMember.state === 'connected' &&\n          !!call.joinedOnThisDevice;\n      }\n      else {\n        // Group calls are immediately initiated\n        isInitiated = true;\n        isConnected = !!call.joinedOnThisDevice;\n      }\n    }\n    else {\n      isInitiated = false;\n      isConnected = false;\n    }\n    isIncoming = call.direction === 'in' && !call.hasJoinedOnThisDevice;\n  }\n  catch (e) {\n    // Do nothing\n  }\n\n  return {\n    isCall: call.isCall,\n    isActive: call.isActive,\n    hasJoinedOnThisDevice: call.joinedOnThisDevice,\n    isReceivingAudio: call.receivingAudio,\n    isReceivingVideo: call.receivingVideo,\n    isSendingAudio: call.sendingAudio,\n    isSendingVideo: call.sendingVideo,\n    isDeclined: call.me && call.me.state === 'declined',\n    isInitiated,\n    isConnected,\n    isRinging,\n    isIncoming,\n    remoteAudioMuted,\n    remoteVideoMuted\n  };\n}\n\nexport function releaseCamera(mediaStream) {\n  return mediaStream.getTracks().forEach((track) => track.stop());\n}\n\nexport function constructCallObject(call) {\n  let remoteAudioStream = null;\n  let remoteVideoStream = null;\n  let activeParticipantsCount = 0;\n  let startTime;\n  const memberships = [];\n\n  try {\n    if (call?.remoteMediaStream?.getAudioTracks) {\n      remoteAudioStream = new MediaStream(call.remoteMediaStream.getAudioTracks());\n    }\n    if (call?.remoteMediaStream?.getVideoTracks) {\n      remoteVideoStream = new MediaStream(call.remoteMediaStream.getVideoTracks());\n    }\n    if (call?.members?.membersCollection?.members) {\n      Object.values(call.members.membersCollection.members).forEach((m) => {\n      // only count user as active participant if they are connected\n        if (m.isInMeeting) {\n          activeParticipantsCount += 1;\n        }\n\n        memberships.push(Membership({\n          audioMuted: m.audioMuted,\n          isInitiator: m.isInitiator,\n          hydraId: m.personId,\n          id: m.id,\n          state: m.status,\n          videoMuted: m.videoMuted\n        }));\n      });\n    }\n\n    if (call.locusInfo?.fullState?.lastActive) {\n      startTime = Date.parse(call.locusInfo?.fullState?.lastActive);\n    }\n    else {\n      startTime = Date.now();\n    }\n  }\n  catch (e) {\n    // Do nothing\n  }\n\n  return {\n    instance: call,\n    locusUrl: call.locusUrl,\n    direction: call.direction,\n    remoteMediaStream: call.remoteMediaStream,\n    localMediaStream: call.localMediaStream,\n    startTime,\n    memberships,\n    activeParticipantsCount,\n    remoteAudioStream,\n    remoteVideoStream,\n    ...constructCallStatus(call)\n  };\n}\n","/* eslint no-use-before-define: [\"error\", { \"functions\": false }] */\n\nimport {first} from 'rxjs/operators';\n\nimport {constructCallObject} from './helpers';\n\nexport const UPDATE_STATUS = 'media/UPDATE_STATUS';\n\nexport const DISMISS_INCOMING_CALL = 'media/DISMISS_INCOMING_CALL';\nexport const STORE_CALL = 'media/STORE_CALL';\nexport const UPDATE_CALL_STATUS = 'media/UPDATE_CALL_STATUS';\nexport const UPDATE_CALL_ERROR = 'media/UPDATE_CALL_ERROR';\nexport const REMOVE_CALL = 'media/REMOVE_CALL';\n\nexport const CHECKING_WEB_RTC_SUPPORT = 'media/CHECKING_WEB_RTC_SUPPORT';\nexport const UPDATE_WEBRTC_SUPPORT = 'media/UPDATE_WEBRTC_SUPPORT';\n\nconst tap = (promise) => (arg) => Promise.resolve()\n  .then(promise(arg))\n  .then(() => arg);\n\n/* Actions */\n\nfunction checkingWebRTCSupport() {\n  return {\n    type: CHECKING_WEB_RTC_SUPPORT\n  };\n}\n\nfunction removeCall(id) {\n  return {\n    type: REMOVE_CALL,\n    payload: {\n      id\n    }\n  };\n}\n\nexport function storeCall({call, id, destination}) {\n  // check if this is a locus replaced call\n  return {\n    type: STORE_CALL,\n    payload: {\n      id,\n      call: constructCallObject(call),\n      destination\n    }\n  };\n}\n\nfunction updateCallError({call, error, id}) {\n  return {\n    type: UPDATE_CALL_ERROR,\n    payload: {\n      id: id || call.id,\n      error\n    }\n  };\n}\n\nfunction updateCallStatus({call, id, eventName}) {\n  return {\n    type: UPDATE_CALL_STATUS,\n    payload: {\n      id,\n      call: constructCallObject(call),\n      eventName\n    }\n  };\n}\n\nfunction updateStatus(status) {\n  return {\n    type: UPDATE_STATUS,\n    payload: {\n      status\n    }\n  };\n}\n\nfunction updateWebRTCSupport(supported) {\n  return {\n    type: UPDATE_WEBRTC_SUPPORT,\n    payload: {\n      supported\n    }\n  };\n}\n\n/* Exported Actions */\n\n/**\n * Accepts an incoming call\n *\n * @export\n * @param {object} incomingCall\n * @returns {Promise}\n */\nexport function acceptIncomingCall(incomingCall, {sdkAdapter, destinationId, cleanUp}) {\n  return (dispatch) => {\n    const {meetingsAdapter} = sdkAdapter;\n\n    return Promise.resolve()\n      .then(() => meetingsAdapter.datasource.meetings.getMeetingByType('locusUrl', incomingCall.locusUrl))\n      .then((meeting) => {\n        const bye = meeting.leave;\n\n        // eslint-disable-next-line no-param-reassign\n        meeting.leave = (...args) => bye.bind(meeting)(...args)\n          .then(() => dispatch(removeCall(incomingCall.id)))\n          .then(() => dispatch(cleanUp()))\n          // eslint-disable-next-line no-param-reassign\n          .finally(() => { meeting.leave = bye.bind(meeting); });\n\n        return meeting;\n      })\n      .then((meeting) => meetingsAdapter.getLocalMedia(meeting.id)\n        .then(({localAudio, localVideo}) => meetingsAdapter.fetchMeetingTitle(destinationId)\n          .then((title) => {\n            meetingsAdapter.meetings[meeting.id] = {\n              ID: meeting.id,\n              title,\n              localAudio,\n              localVideo,\n              localShare: null,\n              remoteAudio: null,\n              remoteVideo: null,\n              remoteShare: null\n            };\n\n            return meeting;\n          })))\n      .then(tap((meeting) => {\n        processCall({dispatch, call: {...meeting}, destinationId});\n      }))\n      .then(tap((meeting) => dispatch(updateCallStatus({\n        call: {\n          ...meeting,\n          hasJoinedOnThisDevice: true\n        },\n        id: meeting.id\n      }))))\n      .then(tap((meeting) => meetingsAdapter.joinMeeting(meeting.id)))\n      .catch((err) => updateCallError({call: incomingCall, error: err}));\n  };\n}\n\n/**\n * Does a spark API request for existing calls and stores them\n * @param {object} sparkInstance\n * @returns {Promise}\n */\nexport function checkCurrentCalls(sparkInstance) {\n  return (dispatch) => sparkInstance.phone.listActiveCalls()\n    .then((results) => Promise.all(results.map((callObject) =>\n      Promise.resolve(processCall({dispatch, call: callObject})))));\n}\n\n/**\n * Check for browser webRTC support\n *\n *  @param {object} sparkInstance\n *  @returns {Promise}\n */\nexport function checkWebRTCSupport(sparkInstance) {\n  return (dispatch) => {\n    if (sparkInstance.phone) {\n      dispatch(checkingWebRTCSupport());\n\n      return sparkInstance.phone.isCallingSupported()\n        .then((supported) => dispatch(updateWebRTCSupport(supported)));\n    }\n\n    return Promise.resolve();\n  };\n}\n\n/**\n * Declines an incoming call\n *\n * @export\n * @param {object} incomingCall\n * @returns {Thunk}\n */\nexport function declineIncomingCall(incomingCall, {meetingsAdapter}) {\n  const {meetings} = meetingsAdapter.datasource;\n\n  return (dispatch) => {\n    const meeting = meetings.getMeetingByType('id', incomingCall.id);\n\n    if (meeting) meeting.decline();\n    dispatch(removeCall(incomingCall.id));\n\n    return Promise.resolve();\n  };\n}\n\n/**\n * Dismisses an incoming call, marking it so.\n * Note: This does not decline the call, just for tracking purposes\n * @param {string} id\n * @returns {object}\n */\nexport function dismissIncomingCall(id) {\n  return {\n    type: DISMISS_INCOMING_CALL,\n    payload: {\n      id\n    }\n  };\n}\n\n/**\n * Hangs up and removes call\n * @param {object} call\n * @returns {Promise}\n */\nexport function hangupCall({call, id}) {\n  return (dispatch) => {\n    // Don't update call states after hangup\n    call.off();\n\n    // Only call.hangup() when local user wants to hangup.\n    // SDK handles .hangup() when call becomes `inactive`\n    return call.hangup()\n      .then(() => dispatch(removeCall(id)))\n      .catch(() => dispatch(removeCall(id)));\n  };\n}\n\n/**\n * Listens for all call events from phone plugin and handles them\n * @param {Object} sparkInstance\n * @returns {Promise}\n */\nexport function listenForCalls(sparkInstance) {\n  return (dispatch) => {\n    dispatch(updateStatus({isListening: true, isListeningToIncoming: true}));\n\n    return Promise.all([\n      handleIncomingCalls(sparkInstance),\n      handleCreatedCalls(sparkInstance, dispatch)\n    ]);\n  };\n}\n\nconst getMeeting = ({sdkAdapter: {meetingsAdapter}, destination}) => new Promise((resolve) => {\n  meetingsAdapter.createMeeting(destination)\n    .pipe(first())\n    .subscribe(({ID}) =>\n      resolve(meetingsAdapter.datasource.meetings.getMeetingByType('id', ID)));\n})\n  .then(tap((meeting) => meetingsAdapter.datasource.meetings.meetingCollection.set(meeting)))\n  .then((meeting) => meetingsAdapter.getLocalMedia(meeting.id)\n    .then(({localAudio, localVideo}) => meetingsAdapter.fetchMeetingTitle(destination)\n      .then((title) => {\n        // eslint-disable-next-line no-param-reassign\n        meetingsAdapter.meetings[meeting.id] = {\n          ID: meeting.id,\n          title,\n          localAudio,\n          localVideo,\n          localShare: null,\n          remoteAudio: null,\n          remoteVideo: null,\n          remoteShare: null\n        };\n\n        return meeting;\n      })));\n\n/**\n * Call a user with an email address or userId\n *\n * @export\n * @param {Object} sdkAdapter\n * @param {String} data.destination\n * @returns {Promise}\n */\nexport function placeCall(sdkAdapter, {destination, cleanUp}) {\n  const {meetingsAdapter} = sdkAdapter;\n\n  return (dispatch) => getMeeting({sdkAdapter, destination})\n    .then(tap((meeting) => processCall({dispatch, call: {...meeting}, destination})))\n    .then((meeting) => {\n      const bye = meeting.leave;\n\n      // eslint-disable-next-line no-param-reassign\n      meeting.leave = (...args) => bye.bind(meeting)(...args)\n        .then(() => dispatch(removeCall(meeting.id)))\n        .then(() => dispatch(cleanUp()))\n        // eslint-disable-next-line no-param-reassign\n        .finally(() => { meeting.leave = bye.bind(meeting); });\n\n      return meeting;\n    })\n    .then(tap((meeting) => meetingsAdapter.joinMeeting(meeting.id)));\n}\n\n/**\n * Registers the client for media/phone\n * @param {object} sparkInstance\n * @returns {Promise}\n */\nexport function registerClient(sparkInstance) {\n  return (dispatch, getState) => {\n    const {media} = getState();\n\n    if (!media.status.isRegistered && !media.status.isRegistering) {\n      dispatch(updateStatus({isRegistering: true}));\n\n      return sparkInstance.phone.register().then(() => {\n        const status = {isRegistered: true, isRegistering: false};\n\n        dispatch(updateStatus(status));\n\n        return status;\n      });\n    }\n\n    return Promise.resolve(media.status);\n  };\n}\n\n/**\n * Process and store a call object from outside widgets\n * @param {Object} call\n * @returns {Function}\n */\nexport function storeExternalCall(call) {\n  return (dispatch) => {\n    const {id} = processCall({dispatch, call});\n\n    return {id, call};\n  };\n}\n\n\n/* Helper Functions */\n\n/**\n * Processes a call by binding events and storing\n * @param {*} params.dispatch\n * @param {Object} params.meeting\n * @returns {Object} {id, call}\n */\nfunction processCall({dispatch, call, destination}) {\n  const value = {call, id: call.id, destination};\n\n  dispatch(storeCall(value));\n\n  return value;\n}\n\n/**\n * Sets up event listener for the 'call:incoming' phone event\n * @param {object} sparkInstance\n * @param {object} dispatch\n * @returns {Promise}\n */\nfunction handleIncomingCalls(sparkInstance) {\n  return sparkInstance.phone.on('call:incoming', (incomingCall) => {\n    // If we make an outbound call via the widget, when the remote party answers,\n    // we get a call:incoming notification when they connect\n    if (incomingCall.direction === 'out') {\n      return false;\n    }\n\n    return incomingCall.acknowledge();\n  });\n}\n\n/**\n * Sets up event listener for the 'meeting:added' phone event\n * @param {object} sparkInstance\n * @param {object} dispatch\n * @returns {Promise}\n */\nfunction handleCreatedCalls(sparkInstance, dispatch) {\n  const processMeeting = (meeting) => {\n    const call = {\n      ...meeting,\n      direction: 'in',\n      hasJoinedOnThisDevice: false\n    };\n\n    processCall({dispatch, call});\n  };\n  const getMeetingById = ({id}) => sparkInstance.meetings.getMeetingByType('id', id);\n\n  sparkInstance.meetings.on('meeting:added', ({meeting, type}) => {\n    if (['JOIN', 'INCOMING'].find((TYPE) => type === TYPE)) {\n      meeting.members.on('members:update', () => {\n        setTimeout(() => {\n          const call = {\n            id: meeting.id,\n            ...getMeetingById(meeting)\n          };\n\n          processMeeting(call);\n        }, 0);\n      });\n\n      processMeeting(meeting);\n    }\n  });\n\n  return Promise.resolve();\n}\n","import {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {compose, lifecycle} from 'recompose';\n\nimport {setWrappedDisplayName} from '@webex/react-component-utils';\n\nimport {\n  checkCurrentCalls,\n  checkWebRTCSupport,\n  listenForCalls,\n  registerClient\n} from './actions';\n\n\nexport default compose(\n  setWrappedDisplayName('WithMedia'),\n  connect(\n    (state) => ({\n      sparkInstance: state.spark.get('spark'),\n      media: state.media\n    }),\n    (dispatch) => bindActionCreators({\n      checkCurrentCalls,\n      checkWebRTCSupport,\n      listenForCalls,\n      registerClient\n    }, dispatch)\n  ),\n  lifecycle({\n    componentWillReceiveProps(nextProps) {\n      const {\n        media,\n        sparkInstance\n      } = nextProps;\n\n      if (sparkInstance) {\n        if (!media.webRTC.hasCheckedSupport) {\n          nextProps.checkWebRTCSupport(sparkInstance);\n        }\n        else if (!media.status.isRegistered && !media.status.isRegistering) {\n          nextProps.registerClient(sparkInstance);\n        }\n        else if (!media.status.isListening) {\n          // Check if there are any existing calls and store them\n          nextProps.checkCurrentCalls(sparkInstance);\n          // Listen for new calls\n          nextProps.listenForCalls(sparkInstance);\n        }\n      }\n    }\n  })\n);\n","import {\n  Record,\n  Map,\n  List\n} from 'immutable';\n\nimport {\n  DISMISS_INCOMING_CALL,\n  UPDATE_STATUS,\n  UPDATE_CALL_STATUS,\n  UPDATE_CALL_ERROR,\n  REMOVE_CALL,\n  STORE_CALL,\n  CHECKING_WEB_RTC_SUPPORT,\n  UPDATE_WEBRTC_SUPPORT\n} from './actions';\n\nconst ErrorObject = Record({\n  name: '',\n  message: ''\n});\n\nexport const CallRecord = Record({\n  instance: null,\n  activeParticipantsCount: 0,\n  direction: '',\n  startTime: null,\n  remoteAudioStream: null,\n  remoteVideoStream: null,\n  remoteMediaStream: null,\n  localMediaStream: null,\n  error: null,\n  memberships: new List(),\n  locusUrl: '',\n  id: '',\n  isCall: false,\n  isActive: false,\n  isIncoming: false,\n  isInitiated: false,\n  isConnected: false,\n  isDismissed: false,\n  isDeclined: false,\n  isRinging: false,\n  isReceivingAudio: false,\n  isReceivingVideo: false,\n  isSendingAudio: false,\n  isSendingVideo: false,\n  remoteAudioMuted: false,\n  remoteVideoMuted: false,\n  hasJoinedOnThisDevice: false,\n  hasError: false\n});\n\nconst WebRTCStatus = Record({\n  hasCheckedSupport: false,\n  isSupported: null\n});\n\n\nconst MediaStatus = Record({\n  isListening: false,\n  isListeningToIncoming: false,\n  isRegistered: false,\n  isRegistering: false\n});\n\nconst InitialState = Record({\n  byDestination: Map(),\n  byLocusUrl: Map(),\n  byId: Map(),\n  webRTC: WebRTCStatus(),\n  status: MediaStatus()\n});\n\nexport const initialState = new InitialState();\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_STATUS:\n      return state.mergeIn(['status'], action.payload.status);\n\n    case STORE_CALL: {\n      const {\n        call,\n        destination,\n        id\n      } = action.payload;\n\n      if (id) {\n        const {locusUrl} = call;\n\n        let updatedState = state\n          .setIn(['byId', id], CallRecord(call).set('id', id));\n\n        if (destination) {\n          updatedState = updatedState.setIn(['byDestination', destination], id);\n        }\n        if (locusUrl) {\n          updatedState = updatedState.setIn(['byLocusUrl', locusUrl], id);\n        }\n\n        return updatedState;\n      }\n\n      return state;\n    }\n\n    case UPDATE_CALL_STATUS: {\n      let updatedState = state;\n      const {\n        call,\n        id\n      } = action.payload;\n\n      if (id) {\n        updatedState = updatedState.mergeIn(['byId', id], call);\n        if (call.instance) {\n          // Need to set instance object so it isn't manipulated by immutable\n          updatedState = updatedState.setIn(['byId', id, 'instance'], call.instance);\n        }\n      }\n      // Handle locus replacement\n      const {instance} = call;\n\n      if (instance && instance.locus && instance.locus.url &&\n        state.getIn(['byLocusUrl', instance.locus.url]) !== id) {\n        // remove old locusUrl if it exists\n        const oldUrl = state.get('byLocusUrl').keyOf(id);\n\n        if (oldUrl) {\n          updatedState = updatedState.removeIn(['byLocusUrl', oldUrl]);\n        }\n        // add new URL\n        updatedState = updatedState.setIn(['byLocusUrl', instance.locus.url], id);\n      }\n\n      return updatedState;\n    }\n\n    case UPDATE_CALL_ERROR: {\n      const {\n        call,\n        id,\n        error\n      } = action.payload;\n\n      if (id) {\n        return state.mergeIn(['byId', id], call)\n          .setIn(['byId', id, 'error'], new ErrorObject(error));\n      }\n\n      return state;\n    }\n\n    case DISMISS_INCOMING_CALL:\n      return state.setIn(['byId', action.payload.id, 'isDismissed'], true);\n\n    case REMOVE_CALL: {\n      let updatedState = state;\n      const byDestinationKey = state.get('byDestination').keyOf(action.payload.id);\n      const byLocusUrl = state.get('byLocusUrl').keyOf(action.payload.id);\n\n      // Also need to check if locusUrl exists for any other call objects\n      state.get('byId').forEach((c, id) => {\n        if (c.locusUrl === byLocusUrl) {\n          updatedState = updatedState.deleteIn(['byId', id])\n            .deleteIn(['byDestination', state.get('byDestination').keyOf(id)])\n            .deleteIn(['byId', id]);\n        }\n      });\n\n      updatedState = updatedState.deleteIn(['byId', action.payload.id])\n        .deleteIn(['byDestination', byDestinationKey])\n        .deleteIn(['byLocusUrl', byLocusUrl]);\n\n      return updatedState;\n    }\n\n    case CHECKING_WEB_RTC_SUPPORT:\n      return state.setIn(['webRTC', 'hasCheckedSupport'], true);\n\n    case UPDATE_WEBRTC_SUPPORT:\n      return state.setIn(['webRTC', 'isSupported'], action.payload.supported);\n\n    default:\n      return state;\n  }\n}\n"],"names":["Membership","Record","audioMuted","isInitiator","hydraId","id","state","videoMuted","constructCallStatus","call","isConnected","isIncoming","isInitiated","isRinging","remoteAudioMuted","remoteVideoMuted","remoteMember","isCall","locus","joinedOnThisDevice","direction","hasJoinedOnThisDevice","e","isActive","isReceivingAudio","receivingAudio","isReceivingVideo","receivingVideo","isSendingAudio","sendingAudio","isSendingVideo","sendingVideo","isDeclined","me","constructCallObject","remoteAudioStream","remoteVideoStream","activeParticipantsCount","startTime","memberships","remoteMediaStream","getAudioTracks","MediaStream","getVideoTracks","members","membersCollection","Object","values","forEach","m","isInMeeting","push","personId","status","locusInfo","fullState","lastActive","Date","parse","now","instance","locusUrl","localMediaStream","UPDATE_STATUS","DISMISS_INCOMING_CALL","STORE_CALL","UPDATE_CALL_STATUS","UPDATE_CALL_ERROR","REMOVE_CALL","CHECKING_WEB_RTC_SUPPORT","UPDATE_WEBRTC_SUPPORT","tap","promise","arg","Promise","resolve","then","checkingWebRTCSupport","type","removeCall","payload","storeCall","destination","updateCallError","error","updateCallStatus","eventName","updateStatus","updateWebRTCSupport","supported","acceptIncomingCall","incomingCall","sdkAdapter","destinationId","cleanUp","dispatch","meetingsAdapter","datasource","meetings","getMeetingByType","meeting","bye","leave","args","bind","finally","getLocalMedia","localAudio","localVideo","fetchMeetingTitle","title","ID","localShare","remoteAudio","remoteVideo","remoteShare","processCall","joinMeeting","catch","err","checkCurrentCalls","sparkInstance","phone","listActiveCalls","results","all","map","callObject","checkWebRTCSupport","isCallingSupported","declineIncomingCall","decline","dismissIncomingCall","hangupCall","off","hangup","listenForCalls","isListening","isListeningToIncoming","handleIncomingCalls","handleCreatedCalls","getMeeting","createMeeting","pipe","first","subscribe","meetingCollection","set","placeCall","registerClient","getState","media","isRegistered","isRegistering","register","storeExternalCall","value","on","acknowledge","processMeeting","getMeetingById","find","TYPE","setTimeout","compose","setWrappedDisplayName","connect","spark","get","bindActionCreators","lifecycle","componentWillReceiveProps","nextProps","webRTC","hasCheckedSupport","ErrorObject","name","message","CallRecord","List","isDismissed","hasError","WebRTCStatus","isSupported","MediaStatus","InitialState","byDestination","Map","byLocusUrl","byId","initialState","reducer","action","mergeIn","updatedState","setIn","url","getIn","oldUrl","keyOf","removeIn","byDestinationKey","c","deleteIn"],"mappings":"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"}