{"version":3,"file":"index.js","sources":["../src/actions.js","../src/reducer.js","../src/messages.js","../../../../../node_modules/style-inject/dist/style-inject.es.js","../src/components/NoSpaces.js","../src/components/UserProfileAvatar.js","../src/components/RecentsHeader.js","../src/enhancers/errors.js","../src/events.js","../src/helpers.js","../src/selector.js","../src/enhancers/listeners.js","../src/enhancers/setup.js","../src/enhancers/index.js","../src/container.js","../src/translations/en.js","../src/index.js"],"sourcesContent":["export const UPDATE_SPACE_KEYWORD_FILTER = 'widget-recents/UPDATE_SPACE_KEYWORD_FILTER';\nexport const UPDATE_STATUS = 'widget-recents/UPDATE_STATUS';\n\nexport function updateSpaceKeywordFilter(keyword) {\n  return {\n    type: UPDATE_SPACE_KEYWORD_FILTER,\n    payload: {\n      keyword\n    }\n  };\n}\n\nexport function updateWidgetStatus(status) {\n  return {\n    type: UPDATE_STATUS,\n    payload: {\n      status\n    }\n  };\n}\n","import {Record} from 'immutable';\n\nimport mercury from '@webex/redux-module-mercury';\nimport users from '@webex/redux-module-users';\nimport spaces from '@webex/redux-module-spaces';\nimport errors from '@webex/redux-module-errors';\nimport features from '@webex/redux-module-features';\nimport media from '@webex/redux-module-media';\nimport teams from '@webex/redux-module-teams';\nimport avatar from '@webex/redux-module-avatar';\nimport activities from '@webex/redux-module-activities';\nimport presence from '@webex/redux-module-presence';\n\nimport {UPDATE_SPACE_KEYWORD_FILTER, UPDATE_STATUS} from './actions';\n\nconst Status = Record({\n  isFetchingInitialSpaces: false,\n  hasFetchedInitialSpaces: false,\n  isFetchingAllSpaces: false,\n  hasFetchedAllSpaces: false,\n  isFetchingRecentSpaces: false,\n  hasFetchedRecentSpaces: false,\n  isFetchingTeams: false,\n  hasFetchedTeams: false,\n  isFetchingAvatars: false,\n  hasFetchedAvatars: false,\n  isListeningForNewActivity: false,\n  hasFetchedGroupMessageNotificationFeature: false,\n  hasFetchedMentionNotificationFeature: false,\n  isScrolledToTop: true\n});\n\nconst RecentsWidget = Record({\n  incomingCall: null,\n  keyword: null,\n  spaceType: null,\n  status: new Status()\n});\n\nexport const initialState = new RecentsWidget();\n\nexport function reducer(state = new RecentsWidget(), action) {\n  switch (action.type) {\n    case UPDATE_STATUS:\n      return state.mergeIn(['status'], action.payload.status);\n    case UPDATE_SPACE_KEYWORD_FILTER:\n      return state.setIn(['keyword'], action.payload.keyword ? action.payload.keyword.trim() : '');\n    default:\n      return state;\n  }\n}\n\nconst reducers = {\n  avatar,\n  activities,\n  errors,\n  features,\n  media,\n  mercury,\n  presence,\n  spaces,\n  teams,\n  users,\n  widgetRecents: reducer\n};\n\nexport default reducers;\n","/*\n * WidgetRecents Messages\n *\n * This contains all the text for the FeaturePage component.\n */\nimport {defineMessages} from 'react-intl';\n\nexport default defineMessages({\n  sharedFile: {\n    id: 'ciscospark.container.recents.sharedFile',\n    defaultMessage: 'Shared a file'\n  },\n  noSpaces: {\n    id: 'ciscospark.container.recents.noSpaces',\n    defaultMessage: 'No spaces yet'\n  },\n  createSpacePlus: {\n    id: 'ciscospark.container.recents.createSpacePlus',\n    defaultMessage: 'Create a space using the plus button next to the search bar above.'\n  },\n  createSpaceTeams: {\n    id: 'ciscospark.container.recents.createSpaceTeams',\n    defaultMessage: 'Create spaces in Webex to see them here.'\n  },\n  unavailable: {\n    id: 'ciscospark.container.recents.userUnavailable',\n    defaultMessage: '{actorName} was unavailable.'\n  },\n  addedToSpace: {\n    id: 'ciscospark.container.recents.addedToSpace',\n    defaultMessage: '{actorName} added {targetName} to this space.'\n  },\n  answerButtonLabel: {\n    id: 'ciscospark.container.recents.button.answer',\n    defaultMessage: 'Answer'\n  },\n  declineButtonLabel: {\n    id: 'ciscospark.container.recents.button.decline',\n    defaultMessage: 'Decline'\n  },\n  incomingCallMessage: {\n    id: 'ciscospark.container.recents.message.incomingCall',\n    defaultMessage: 'Incoming call'\n  },\n  errorConnection: {\n    id: 'ciscospark.container.recents.error.connection',\n    defaultMessage: 'Connection unavailable.'\n  },\n  errorBadToken: {\n    id: 'ciscospark.container.recents.error.badtoken',\n    defaultMessage: 'Error: Bad or Invalid Access Token'\n  },\n  unableToLoad: {\n    id: 'ciscospark.container.recents.error.unabletoload',\n    defaultMessage: 'Unable to Load Recents'\n  },\n  unknownError: {\n    id: 'ciscospark.container.recents.error.unknown',\n    defaultMessage: 'There was a problem loading recents'\n  },\n  reconnecting: {\n    id: 'ciscospark.container.recents.error.reconnecting',\n    defaultMessage: 'Reconnecting...'\n  },\n  viewOlderSpacesButtonLabel: {\n    id: 'ciscospark.container.recents.button.viewOlderSpaces',\n    defaultMessage: 'View Older Spaces'\n  }\n});\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './NoSpaces.css';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  emptyMessage: PropTypes.string.isRequired\n};\n\nfunction NoSpaces(props) {\n  const {\n    title,\n    emptyMessage\n  } = props;\n\n  return (\n    <div className={classNames('webex-recents-widget-no-spaces', styles.noSpacesWrapper)}>\n      <div className={classNames('webex-no-spaces-img', styles.noSpacesImg)}>\n        <svg width=\"80px\" height=\"62px\" viewBox=\"0 0 80 62\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <defs />\n          <g id=\"Illustrations\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"Artboard\" transform=\"translate(-1053.000000, -175.000000)\" fill=\"#FFFFFF\">\n              <g id=\"No-Space\" transform=\"translate(1053.000000, 175.000000)\">\n                <path d=\"M56.999,0 C44.297,0 34,10.297 34,22.999 C34,26.583 34.82,29.975 36.282,32.998 L37.822,32.998 L56.5,32.998 C56.775,32.998 57,33.223 57,33.498 C57,33.773 56.775,33.998 56.5,33.998 L38.353,33.998 L36.797,33.998 C40.697,41.147 48.281,45.998 56.999,45.998 C69.701,45.998 79.998,35.701 79.998,22.999 C79.998,10.297 69.701,0 56.999,0\" id=\"fill\" opacity=\"0.400000006\" />\n                <path d=\"M29,33 L29,5.5 C29,5.225 28.775,5 28.5,5 C28.225,5 28,5.225 28,5.5 L28,33 L0.5,33 C0.225,33 0,33.225 0,33.5 C0,33.775 0.225,34 0.5,34 L28,34 L28,61.5 C28,61.775 28.225,62 28.5,62 C28.775,62 29,61.775 29,61.5 L29,34 L36.797,34 C36.617,33.671 36.445,33.338 36.282,33 L29,33 Z\" id=\"fill\" />\n              </g>\n            </g>\n          </g>\n        </svg>\n      </div>\n      <h2 className={classNames('webex-no-spaces-title', styles.noSpacesTitle)}>{title}</h2>\n      <div className={classNames('webex-no-spaces-message', styles.noSpacesMessage)}>{emptyMessage}</div>\n    </div>\n  );\n}\n\nNoSpaces.propTypes = propTypes;\n\nexport default NoSpaces;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {Avatar, MenuContent, Menu, MenuItem, MenuOverlay} from '@momentum-ui/react';\n\nimport PresenceAvatar from '@webex/react-container-presence-avatar';\n\nimport styles from './UserProfileAvatar.css';\n\n\nconst propTypes = {\n  currentUserWithAvatar: PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string,\n    email: PropTypes.string,\n    img: PropTypes.string\n  }).isRequired,\n  enableUserProfileMenu: PropTypes.bool.isRequired,\n  onSignOutClick: PropTypes.func,\n  onProfileClick: PropTypes.func\n};\n\nconst defaultProps = {\n  onSignOutClick: () => {},\n  onProfileClick: () => {}\n};\n\nfunction ProfileAvatarMenu(props) {\n  const {\n    currentUserWithAvatar,\n    enableUserProfileMenu,\n    onProfileClick,\n    onSignOutClick\n  } = props;\n  const presenceAvatar = (\n    <PresenceAvatar\n      avatarId={currentUserWithAvatar.id}\n      name={currentUserWithAvatar.displayName}\n      onClick={onProfileClick}\n    />);\n  const menu = (\n    <MenuOverlay\n      direction=\"bottom-left\"\n      menuTrigger={presenceAvatar}\n      targetOffset={{vertical: 4}}\n    >\n      <MenuContent>\n        <div className={classNames('webex-recents-header-profile-menu', styles.menu)}>\n          <Avatar\n            src={currentUserWithAvatar.img}\n            title={currentUserWithAvatar.displayName}\n            size={84}\n          />\n          <div className={classNames('webex-recents-header-profile-menu-info', styles.info)}>\n            <h4>{currentUserWithAvatar.displayName} </h4>\n            <h5>{currentUserWithAvatar.email}</h5>\n          </div>\n        </div>\n      </MenuContent>\n      <Menu>\n        <MenuItem\n          className={classNames('webex-recents-header-profile-menu-signout', styles.signout)}\n          onClick={onSignOutClick}\n          label=\"Sign Out\"\n        />\n      </Menu>\n    </MenuOverlay>\n  );\n\n  return enableUserProfileMenu ? menu : presenceAvatar;\n}\n\n\nProfileAvatarMenu.propTypes = propTypes;\nProfileAvatarMenu.defaultProps = defaultProps;\n\nexport default ProfileAvatarMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {Button, Icon, InputSearch} from '@momentum-ui/react';\n\nimport UserProfileAvatar from './UserProfileAvatar';\nimport styles from './RecentsHeader.css';\n\nconst propTypes = {\n  currentUserWithAvatar: PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string,\n    email: PropTypes.string,\n    img: PropTypes.string\n  }).isRequired,\n  enableAddButton: PropTypes.bool.isRequired,\n  enableSpaceListFilter: PropTypes.bool.isRequired,\n  enableUserProfile: PropTypes.bool.isRequired,\n  enableUserProfileMenu: PropTypes.bool.isRequired,\n  hideBottomBorder: PropTypes.bool.isRequired,\n  onAddClick: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  onProfileClick: PropTypes.func,\n  onSignOutClick: PropTypes.func\n};\n\nconst defaultProps = {\n  onAddClick: () => {},\n  onProfileClick: () => {},\n  onFilterChange: () => {},\n  onSignOutClick: () => {}\n};\n\nfunction RecentsHeader(props) {\n  const {\n    currentUserWithAvatar,\n    enableAddButton,\n    enableUserProfile,\n    enableUserProfileMenu,\n    enableSpaceListFilter,\n    hideBottomBorder,\n    onAddClick,\n    onFilterChange,\n    onProfileClick,\n    onSignOutClick\n  } = props;\n\n  return (\n    <div className={classNames('webex-recents-header', styles.recentsHeader, 'md--dark', hideBottomBorder ? '' : styles.bottomBorder)}>\n      <div className={classNames('webex-recents-header-left', styles.headerSideItem)}>\n        {\n          enableUserProfile &&\n          <UserProfileAvatar\n            currentUserWithAvatar={currentUserWithAvatar}\n            enableUserProfileMenu={enableUserProfileMenu}\n            onProfileClick={onProfileClick}\n            onSignOutClick={onSignOutClick}\n          />\n        }\n      </div>\n      <div className={classNames('webex-search-input-wrapper', styles.searchInputWrapper)}>\n        {\n          enableSpaceListFilter &&\n          <div className={classNames('webex-search-input', styles.searchInput)}>\n            <InputSearch\n              name=\"pillSearchInput\"\n              htmlId=\"pillSearchInput\"\n              type=\"pill\"\n              onKeyUp={onFilterChange}\n              onChange={onFilterChange}\n              clear\n            />\n          </div>\n        }\n      </div>\n      <div className={classNames('webex-recents-header-right', styles.headerSideItem)}>\n        {\n          enableAddButton &&\n          <Button\n            ariaLabel=\"Contact a person or create a space\"\n            onClick={onAddClick}\n            circle\n            color=\"white\"\n            size={40}\n            title=\"Contact a person or create a space\"\n          >\n            <Icon\n              name=\"plus_18\"\n            />\n          </Button>\n        }\n      </div>\n    </div>\n  );\n}\n\nRecentsHeader.propTypes = propTypes;\nRecentsHeader.defaultProps = defaultProps;\n\nexport default RecentsHeader;\n","import {connect} from 'react-redux';\nimport {compose, lifecycle} from 'recompose';\nimport {bindActionCreators} from 'redux';\nimport {addError, removeError} from '@webex/redux-module-errors';\n\nimport messages from '../messages';\n\nfunction checkForMercuryErrors(props) {\n  const {\n    errors,\n    intl,\n    mercury\n  } = props;\n  // Add Mercury disconnect error\n  const mercuryError = 'mercury.disconnect';\n  const isMercuryConnected = mercury.getIn(['status', 'connected']);\n  const isMercuryDisconnected = !isMercuryConnected && mercury.getIn(['status', 'hasConnected']);\n  const hasError = errors.get('hasError');\n  const hasMercuryError = errors.get('errors').has(mercuryError);\n  const hasNoMercuryError = !hasError || !hasMercuryError;\n\n  if (isMercuryDisconnected && hasNoMercuryError) {\n    // Create UI Error\n    const {formatMessage} = intl;\n\n    props.addError({\n      id: mercuryError,\n      displayTitle: formatMessage(messages.errorConnection),\n      displaySubtitle: formatMessage(messages.reconnecting),\n      temporary: true\n    });\n  }\n  if (isMercuryConnected && hasMercuryError) {\n    props.removeError(mercuryError);\n  }\n}\n\nfunction checkForErrors(props) {\n  const {\n    errors,\n    sparkState,\n    spark\n  } = props;\n  const {formatMessage} = props.intl;\n  const registerErrorId = 'spark.register';\n\n  if (sparkState.registerError && (!errors.get('hasError') || !errors.get('errors').has(registerErrorId))) {\n    const error = spark.get('error');\n    let displaySubtitle = formatMessage(messages.unknownError);\n\n    if (error.statusCode === 401) {\n      displaySubtitle = formatMessage(messages.errorBadToken);\n    }\n    props.addError({\n      id: registerErrorId,\n      displayTitle: formatMessage(messages.unableToLoad),\n      displaySubtitle,\n      temporary: false,\n      code: error.statusCode\n    });\n  }\n}\n\nfunction checkForPropsErrors(props) {\n  const {\n    errors,\n    enableUserProfile,\n    enableUserProfileMenu\n  } = props;\n  const missingUserProfilePropErrorId = 'missingUserProfilePropErrorId';\n\n  if ((enableUserProfileMenu && !enableUserProfile) && (!errors.get('hasError')\n      || !errors.get('errors').has(missingUserProfilePropErrorId))) {\n    props.addError({\n      id: missingUserProfilePropErrorId,\n      displayTitle: 'You must enable the userProfile property if the userProfileMenu property is enabled',\n      temporary: false\n    });\n  }\n}\n\nexport default compose(\n  connect(\n    (state) => state,\n    (dispatch) => bindActionCreators({\n      addError,\n      removeError\n    }, dispatch)\n  ),\n  lifecycle({\n    componentWillMount() {\n      checkForErrors(this.props);\n      checkForMercuryErrors(this.props);\n      checkForPropsErrors(this.props);\n    },\n    componentWillReceiveProps: (nextProps) => {\n      checkForMercuryErrors(nextProps);\n      checkForErrors(nextProps);\n      checkForPropsErrors(nextProps);\n    }\n  })\n);\n","import {constructHydraId, hydraTypes} from '@webex/react-component-utils';\n\nexport const eventNames = {\n  SPACES_READ: 'rooms:read',\n  SPACES_UNREAD: 'rooms:unread',\n  SPACES_SELECTED: 'rooms:selected',\n  MESSAGES_CREATED: 'messages:created',\n  CALLS_CREATED: 'calls:created',\n  ACTION_CALL: 'call',\n  MEMBERSHIPS_CREATED: 'memberships:created',\n  MEMBERSHIPS_DELETED: 'memberships:deleted',\n  ADD_CLICKED: 'add:clicked',\n  PROFILE_CLICKED: 'profile:clicked',\n  USER_SIGNOUT_CLICKED: 'user_signout:clicked'\n};\n\n/**\n * Constructs an event detail object for messages:created\n * @export\n * @param {Object} activity from mercury\n * @param {Object} toUser\n * @returns {Object} constructed event\n */\nexport function constructMessagesEventData(activity, toUser) {\n  const roomType = activity.target.tags.includes('ONE_ON_ONE') ? 'direct' : 'group';\n  let files, toPersonEmail, toPersonId;\n\n  if (roomType === 'direct' && toUser) {\n    toPersonEmail = toUser.email;\n    toPersonId = constructHydraId(hydraTypes.PEOPLE, toUser.id);\n  }\n\n  let mentionedPeople = activity.object.mentions;\n\n  if (mentionedPeople && mentionedPeople.items.length) {\n    mentionedPeople = mentionedPeople.items.map((people) => ({\n      id: constructHydraId(hydraTypes.PEOPLE, people.id)\n    }));\n  }\n\n  // Files need to be decrypted and converted into a usable URL\n  if (activity.object.files && activity.object.files.items.length) {\n    files = activity.object.files.items;\n  }\n\n  const personId = constructHydraId(hydraTypes.PEOPLE, activity.actor.id);\n\n  return {\n    actorId: personId,\n    id: constructHydraId(hydraTypes.MESSAGE, activity.id),\n    roomId: constructHydraId(hydraTypes.ROOM, activity.target.id),\n    roomType: activity.target.tags.includes('ONE_ON_ONE') ? 'direct' : 'group',\n    text: activity.object.displayName,\n    html: activity.object.content,\n    files,\n    personId,\n    personEmail: activity.actor.emailAddress,\n    created: activity.published,\n    mentionedPeople,\n    toPersonId,\n    toPersonEmail\n  };\n}\n\n\nexport function constructRoomsEventData(space, activity) {\n  return {\n    id: space.globalId,\n    title: space.name,\n    type: space.type,\n    isLocked: space.isLocked,\n    teamId: constructHydraId(hydraTypes.TEAM, space.teamId),\n    lastActivity: activity && activity.published || space.lastActivityTimestamp,\n    created: space.published,\n    toPersonEmail: space.toPersonEmail,\n    tags: space.tags,\n    isMentionNotificationsOn: space.isMentionNotificationsOn,\n    isMentionNotificationsOff: space.isMentionNotificationsOff,\n    isMessageNotificationsOn: space.isMessageNotificationsOn,\n    isMessageNotificationsOff: space.isMessageNotificationsOff\n  };\n}\n\n\nexport function constructMembershipEventData(activity) {\n  return {\n    actorId: constructHydraId(hydraTypes.PEOPLE, activity.actor.id),\n    id: constructHydraId(hydraTypes.MESSAGE, activity.id),\n    roomId: constructHydraId(hydraTypes.ROOM, activity.target.id),\n    personId: constructHydraId(hydraTypes.PEOPLE, activity.object.id),\n    personEmail: activity.object.emailAddress,\n    created: activity.published\n  };\n}\n\nexport function constructCallEventData(call, space) {\n  const event = {\n    call\n  };\n\n  if (space && space.id) {\n    event.roomId = constructHydraId(hydraTypes.ROOM, space.id);\n  }\n\n  return event;\n}\n","import {SPACE_TYPE_GROUP, SPACE_TYPE_ONE_ON_ONE} from '@webex/react-component-utils';\n\n/**\n * Finds the participant in a direct space that isn't current user\n *\n * @param {object} space\n * @param {string} currentUserId\n * @returns {object} participant object\n */\nexport function getToParticipant(space, currentUserId) {\n  return space.participants.find((p) => p.id !== currentUserId);\n}\n\n/**\n * Gets the avatar for a space\n * Will fetch the user avatar for 1:1 spaces\n *\n * @export\n * @param {Object} space\n * @param {Object} props\n * @param {function} props.fetchAvatar redux action\n * @param {object} props.sparkInstance spark sdk instance\n * @param {object} props.users users redux store\n */\nexport function getSpaceAvatar(space, props) {\n  const {users, sparkInstance} = props;\n\n  if (!space.isDecrypting) {\n    if (\n      space.type === SPACE_TYPE_ONE_ON_ONE\n    ) {\n      // Find the participant that is not the current user\n      const toParticipant = getToParticipant(space, users.get('currentUserId'));\n\n      if (toParticipant) {\n        // Direct spaces use the \"other participant\" as the space avatar\n        props.fetchAvatar({userId: toParticipant.id}, sparkInstance);\n      }\n    }\n    else if (\n      space.type === SPACE_TYPE_GROUP && space.id\n    ) {\n      props.fetchAvatar({space}, sparkInstance);\n    }\n  }\n}\n","import {createSelector} from 'reselect';\nimport moment from 'moment';\nimport {OrderedMap} from 'immutable';\nimport {pick} from 'lodash';\nimport {\n  formatDate,\n  MENTION_NOTIFICATIONS_ON,\n  MENTION_NOTIFICATIONS_OFF,\n  MESSAGE_NOTIFICATIONS_ON,\n  MESSAGE_NOTIFICATIONS_OFF,\n  SPACE_TYPE_ONE_ON_ONE,\n  SPACE_TYPE_GROUP\n} from '@webex/react-component-utils';\n\nimport {getToParticipant} from './helpers';\n\nconst getWidget = (state) => state.widgetRecents;\nconst getSpark = (state) => state.spark;\nconst getSDKAdapter = (state) => state.spark.get('adaptor');\nconst getCurrentUser = (state) => state.users.getIn(['byId', state.users.get('currentUserId')]);\nconst getAvatars = (state) => state.avatar;\nconst getTeams = (state) => state.teams.get('byId');\nconst getSpaces = (state) => state.spaces.get('byId');\nconst getUsers = (state) => state.users.get('byId');\nconst getActivities = (state) => state.activities.get('byId');\nconst getMedia = (state) => state.media;\nconst getCallsById = (state) => state.media.byId;\nconst getMercuryStatus = (state) => state.mercury.get('status');\nconst getFeatures = (state) => state.features;\nconst getWidgetProps = (state, props) => props;\n\nfunction sortByNewest(space) {\n  return -moment(space.lastReadableActivityDate).format('x');\n}\n\nfunction constructSpace(space) {\n  const {\n    lastSeenActivityDate,\n    lastReadableActivityDate\n  } = space;\n  const properties = [\n    'id',\n    'locusUrl',\n    'globalId',\n    'type',\n    'participants',\n    'published',\n    'tags',\n    'isDecrypting'\n  ];\n  const isUnread = lastSeenActivityDate ? moment(lastSeenActivityDate).isBefore(lastReadableActivityDate) : true;\n\n  return {\n    ...pick(space, properties),\n    lastActivityTime: formatDate(lastReadableActivityDate),\n    lastActivityTimestamp: lastReadableActivityDate,\n    name: space.displayName || 'Untitled',\n    isLocked: space.tags?.includes('LOCKED'),\n    isUnread,\n    isMentionNotificationsOn: space.tags?.includes(MENTION_NOTIFICATIONS_ON) ? true : undefined,\n    isMentionNotificationsOff: space.tags?.includes(MENTION_NOTIFICATIONS_OFF) ? true : undefined,\n    isMessageNotificationsOn: space.tags?.includes(MESSAGE_NOTIFICATIONS_ON) ? true : undefined,\n    isMessageNotificationsOff: space.tags?.includes(MESSAGE_NOTIFICATIONS_OFF) ? true : undefined\n  };\n}\n\nfunction constructOneOnOne({space, currentUser, users}) {\n  const thisSpace = constructSpace(space);\n\n  // Get the user ID of the participant that isn't current user\n  let toPerson, toPersonId;\n\n  const toParticipant = getToParticipant(space, currentUser.id);\n\n  // Sometimes we have a direct convo with only one participant\n  // (user has been deleted, etc)\n  if (toParticipant) {\n    toPersonId = toParticipant.id;\n    toPerson = users.get(toPersonId);\n  }\n\n  if (toPerson) {\n    thisSpace.toPersonId = toPersonId;\n    thisSpace.toPersonEmail = toPerson.email;\n    thisSpace.name = toPerson.displayName;\n  }\n\n  return thisSpace;\n}\n\nfunction constructGroup({space, team}) {\n  const {\n    id,\n    displayName\n  } = space;\n  const thisSpace = constructSpace(space);\n\n  thisSpace.name = displayName || 'Untitled';\n  if (team) {\n    thisSpace.teamName = team.displayName;\n    thisSpace.teamColor = team.color;\n    thisSpace.teamId = team.id;\n    if (id === team.generalConversationId) {\n      thisSpace.name = 'General';\n    }\n  }\n\n  return thisSpace;\n}\n\nconst getIncomingCall = createSelector(\n  [getCallsById],\n  (calls) => calls.find((call) => call.isIncoming && !call.isDismissed)\n);\n\nconst getRecentSpaces = createSelector(\n  [getSpaces, getActivities, getCurrentUser, getUsers, getTeams, getWidget, getWidgetProps],\n  (spaces, activities, currentUser, users, teams, widget, widgetProps) => {\n    let recents = new OrderedMap();\n\n    const spaceType = widget.get('spaceType');\n\n    spaces.toOrderedMap().sortBy(sortByNewest).forEach((space) => {\n      if (!space.isHidden && !space.isFetching) {\n        const spaceId = space.id;\n        const team = teams.get(space.team);\n        let constructedSpace;\n\n        if (space.type === 'direct') {\n          constructedSpace = constructOneOnOne({space, users, currentUser});\n        }\n        else {\n          constructedSpace = constructGroup({space, team});\n        }\n\n        // All spaces report unread in basic mode due to service limitations\n        if (widgetProps.basicMode) {\n          constructedSpace.isUnread = false;\n        }\n\n        // Get Latest Activity\n        const activity = activities.get(space.latestActivity);\n\n        if (activity) {\n          const actorId = activity.actor;\n          const actor = users.get(actorId);\n\n          constructedSpace.latestActivity = {\n            actorName: actor && actor.displayName ? actor.displayName.split(' ')[0] : '',\n            type: activity.type,\n            object: activity.object,\n            text: activity.object && activity.object.displayName,\n            actor,\n            tags: space.tags\n          };\n        }\n\n        if (space.isDecrypting) {\n          constructedSpace.name = 'Decrypting Space...';\n        }\n\n        recents = recents.set(spaceId, constructedSpace);\n      }\n    });\n\n    // filter space list by type\n    if (spaceType && [SPACE_TYPE_ONE_ON_ONE, SPACE_TYPE_GROUP].includes(spaceType)) {\n      return recents.filter((space) => {\n        const {type} = space;\n\n        return spaceType === type;\n      });\n    }\n\n    return recents;\n  }\n);\n\n\nconst getRecentSpacesWithDetail = createSelector(\n  [getRecentSpaces, getAvatars, getMedia, getWidget],\n  (recentSpaces, avatars, media, widget) => {\n    const avatarItems = avatars.get('items');\n    const keyword = widget.get('keyword');\n    const spaces = recentSpaces.map((space) => {\n      const s = Object.assign({}, space);\n\n      // Get Avatar\n      if (avatarItems.count()) {\n        if (s.type === 'direct') {\n          s.avatarUrl = avatarItems.get(s.toPersonId);\n        }\n        else {\n          s.avatarUrl = avatarItems.get(s.id);\n        }\n      }\n      // Get current call\n      if (media.byId.size && media.hasIn(['byLocusUrl', s.locusUrl])) {\n        s.call = media.getIn(['byId', media.getIn(['byLocusUrl', s.locusUrl])]);\n        s.hasJoinedOnThisDevice = s.call.hasJoinedOnThisDevice;\n\n        if (s.call.activeParticipantsCount > 0) {\n          s.callStartTime = s.call.startTime;\n        }\n      }\n\n      return s;\n    });\n\n    if (keyword && keyword.length > 0) {\n      return spaces.filter(({name}) =>\n        name.toLowerCase().includes(keyword.toLowerCase()));\n    }\n\n    return spaces;\n  }\n);\n\nconst getCurrentUserWithAvatar = createSelector(\n  [getCurrentUser, getAvatars], (currentUser, avatars) => {\n    let user;\n\n    if (currentUser && currentUser.id) {\n      user = Object.assign({}, currentUser.toJS(), {img: avatars.getIn(['items', currentUser.id])});\n    }\n\n    return user;\n  }\n);\n\nconst getRecentsWidgetProps = createSelector(\n  [\n    getWidget,\n    getRecentSpacesWithDetail,\n    getSpark,\n    getSpaces,\n    getIncomingCall,\n    getMercuryStatus,\n    getFeatures,\n    getCurrentUserWithAvatar,\n    getSDKAdapter\n  ],\n  (\n    widget,\n    spacesList,\n    spark,\n    spacesById,\n    incomingCall,\n    mercuryStatus,\n    features,\n    currentUserWithAvatar,\n    sdkAdapter\n  ) => {\n    let lastActivityDate;\n\n    if (spacesList && spacesList.count()) {\n      lastActivityDate = spacesList.last().lastActivityTimestamp;\n    }\n\n    return {\n      widgetStatus: widget.get('status').toJS(),\n      keywordFilter: widget.get('keyword'),\n      sparkState: spark.get('status').toJS(),\n      sparkInstance: spark.get('spark'),\n      widgetRecents: widget,\n      spacesById,\n      spacesList,\n      spacesListArray: spacesList.toArray(),\n      lastActivityDate,\n      incomingCall,\n      mercuryStatus: mercuryStatus.toJS(),\n      features,\n      currentUserWithAvatar: currentUserWithAvatar || {},\n      sdkAdapter\n    };\n  }\n);\n\nexport default getRecentsWidgetProps;\n","/**\n * Recompose Lifecycle Enhancers for Websocket Listeners\n */\n\nimport {compose, lifecycle} from 'recompose';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {storeActivities} from '@webex/redux-module-activities';\nimport {fetchAvatar} from '@webex/redux-module-avatar';\nimport {\n  addSpaceTags,\n  fetchSpace,\n  removeSpace,\n  removeSpaceTags,\n  updateSpaceWithActivity,\n  updateSpaceRead\n} from '@webex/redux-module-spaces';\nimport {storeUser} from '@webex/redux-module-users';\nimport {API_ACTIVITY_TYPE, API_ACTIVITY_VERB, SPACE_TYPE_ONE_ON_ONE} from '@webex/react-component-utils';\n\nimport {\n  eventNames,\n  constructMessagesEventData,\n  constructRoomsEventData,\n  constructMembershipEventData\n} from '../events';\n\nimport {updateWidgetStatus} from '../actions';\nimport {getToParticipant, getSpaceAvatar} from '../helpers';\nimport getRecentsWidgetProps from '../selector';\n\n/**\n * Event handler that logs data then sends to the onEvent function\n *\n * @param {String} name\n * @param {Object} data\n * @param {Object} props\n */\nfunction handleEvent(name, data, props) {\n  const {\n    onEvent,\n    sparkInstance\n  } = props;\n  const logData = Object.assign({}, data);\n\n  // Omit call objet from logger to prevent call range error\n  if (data.call) {\n    logData.call = '--- OMITTED ---';\n  }\n  sparkInstance.logger.info(`event handler - ${name}`, logData);\n  if (typeof onEvent === 'function') {\n    props.onEvent(name, data);\n  }\n}\n\n/**\n * Processes a space activity as it comes in via websocket\n *\n * Expects a space to have been loaded for the given activity\n *\n * @param {Object} activity\n * @param {Object} space\n * @param {Object} props\n */\nfunction processActivity(activity, space, props) {\n  const {\n    users,\n    spacesList\n  } = props;\n\n  // Reply activities are not currently supported\n  if (activity.type === API_ACTIVITY_TYPE.REPLY) {\n    return;\n  }\n\n  props.storeActivities([activity]);\n  const currentUserId = users.get('currentUserId');\n  const isSelf = activity.actor.id === currentUserId;\n  const formattedSpace = spacesList.get(space.id);\n\n  switch (activity.verb) {\n    case API_ACTIVITY_VERB.SHARE:\n    case API_ACTIVITY_VERB.POST: {\n      const otherParticipant = !!space.participants && typeof space.participants.find === 'function' && space.participants\n        .find((p) => p.id !== currentUserId);\n      const otherParticipantId = otherParticipant && otherParticipant.id;\n      const otherUser = users.getIn(['byId', otherParticipantId]);\n\n      // Update space with newest post activity\n      props.updateSpaceWithActivity(activity, isSelf, true);\n\n      // Do not emit unread if current user created the message\n      if (!isSelf && formattedSpace) {\n        handleEvent(eventNames.SPACES_UNREAD, constructRoomsEventData(formattedSpace, activity), props);\n      }\n      // Emit message:created event\n      handleEvent(eventNames.MESSAGES_CREATED, constructMessagesEventData(activity, otherUser), props);\n      break;\n    }\n    case API_ACTIVITY_VERB.LOCK:\n    case API_ACTIVITY_VERB.UNLOCK: {\n      props.updateSpaceWithActivity(activity, isSelf);\n      break;\n    }\n    case API_ACTIVITY_VERB.ACKNOWLEDGE: {\n      if (isSelf && formattedSpace) {\n      // update space with last acknowledgment if it's this user\n        props.updateSpaceRead(activity.target.id, activity.published);\n        handleEvent(eventNames.SPACES_READ, constructRoomsEventData(formattedSpace, activity), props);\n      }\n      break;\n    }\n    case API_ACTIVITY_VERB.CREATE: {\n      const constructedActivity = Object.assign({}, activity, {\n        target: activity.object,\n        object: {\n          id: activity.actor.id,\n          emailAddress: activity.actor.emailAddress\n        }\n      });\n\n      handleEvent(eventNames.MEMBERSHIPS_CREATED, constructMembershipEventData(constructedActivity), props);\n      break;\n    }\n    case API_ACTIVITY_VERB.ADD: {\n      handleEvent(eventNames.MEMBERSHIPS_CREATED, constructMembershipEventData(activity), props);\n      break;\n    }\n    case API_ACTIVITY_VERB.LEAVE: {\n      props.removeSpace(space.id);\n      handleEvent(eventNames.MEMBERSHIPS_DELETED, constructMembershipEventData(activity), props);\n      break;\n    }\n    case API_ACTIVITY_VERB.HIDE: {\n      props.removeSpace(space.id);\n      break;\n    }\n    case API_ACTIVITY_VERB.TAG: {\n      props.addSpaceTags(space.id, activity.object.tags);\n      break;\n    }\n\n    case API_ACTIVITY_VERB.UNTAG: {\n      props.removeSpaceTags(space.id, activity.object.tags);\n      break;\n    }\n    default:\n  }\n}\n\n/**\n * Handles the initial processing of new activity coming in via websocket\n *\n * @param {Object} activity\n * @param {Object} props\n */\nfunction handleNewActivity(activity, props) {\n  const {\n    sparkInstance,\n    spacesById,\n    users\n  } = props;\n\n  const space = activity.target || activity.object;\n  let spaceId = space && space.id;\n\n  // On delete, refetch space to get previous activity\n  if (spaceId && ['delete', 'tombstone'].includes(activity.verb)) {\n    props.fetchSpace(sparkInstance, space);\n  }\n\n  // Handle spaceId if this is a completely new space or hiding a space\n  if (!spaceId && ['create', 'hide'].includes(activity.verb)) {\n    spaceId = activity.object.id;\n  }\n\n  const cachedSpace = spacesById.get(spaceId);\n\n  if (cachedSpace) {\n    processActivity(activity, cachedSpace, props);\n  }\n  else {\n    // go retrieve the space if it doesn't exist\n    props.fetchSpace(sparkInstance, space)\n      .then((newSpace) => {\n        if (newSpace) {\n          processActivity(activity, newSpace, props);\n          getSpaceAvatar(newSpace, props);\n\n          // Store user for 1:1 spaces\n          if (newSpace.type === SPACE_TYPE_ONE_ON_ONE) {\n            const toUser = getToParticipant(newSpace, users.get('currentUserId'));\n\n            if (toUser) {\n              props.storeUser(toUser);\n            }\n          }\n        }\n      });\n  }\n}\n\nexport default compose(\n  connect(\n    getRecentsWidgetProps,\n    (dispatch) => bindActionCreators({\n      addSpaceTags,\n      fetchAvatar,\n      fetchSpace,\n      removeSpace,\n      removeSpaceTags,\n      storeActivities,\n      storeUser,\n      updateSpaceRead,\n      updateSpaceWithActivity,\n      updateWidgetStatus\n    }, dispatch)\n  ),\n  lifecycle({\n    componentWillReceiveProps(nextProps) {\n      const {users, sparkInstance, widgetStatus} = nextProps;\n\n      // Listen for new conversation activity\n      if (users.get('currentUserId') && !widgetStatus.isListeningForNewActivity) {\n        nextProps.updateWidgetStatus({isListeningForNewActivity: true});\n\n        sparkInstance.internal.mercury.on('event:conversation.activity',\n          (event) => handleNewActivity(event.data.activity, this.props));\n      }\n    }\n  })\n);\n","import {compose, lifecycle} from 'recompose';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {fetchAvatar} from '@webex/redux-module-avatar';\nimport {getFeature} from '@webex/redux-module-features';\nimport {connectToMercury} from '@webex/redux-module-mercury';\nimport {fetchSpaces, fetchSpacesEncrypted, fetchSpacesHydra} from '@webex/redux-module-spaces';\nimport {fetchTeams} from '@webex/redux-module-teams';\nimport {storeUser} from '@webex/redux-module-users';\nimport {\n  FEATURES_GROUP_MESSAGE_NOTIFICATIONS,\n  FEATURES_MENTION_NOTIFICATIONS,\n  FEATURES_USER,\n  SPACE_TYPE_ONE_ON_ONE\n} from '@webex/react-component-utils';\n\nimport {updateWidgetStatus} from '../actions';\nimport {getToParticipant, getSpaceAvatar} from '../helpers';\nimport getRecentsWidgetProps from '../selector';\n\nexport const DEFAULT_SPACE_COUNT = 25;\n\n/**\n * Store the \"to\" participant in a 1:1 convo\n * This user is needed in our store to calculate a space title\n *\n * @param {object} space\n * @param {object} props\n */\nfunction storeToParticipant(space, props) {\n  const {users} = props;\n\n  // Store the to user in a direct convo to calculate space title\n  if (\n    space.type === SPACE_TYPE_ONE_ON_ONE\n  ) {\n    // Find the participant that is not the current user\n    const toPerson = getToParticipant(space, users.get('currentUserId'));\n\n    if (toPerson) {\n      props.storeUser(toPerson);\n    }\n  }\n}\n\n/**\n * Connects to the websocket server (mercury)\n * @param {object} props\n */\nfunction connectWebsocket(props) {\n  const {\n    sparkInstance,\n    mercuryStatus\n  } = props;\n\n\n  if (!mercuryStatus.hasConnected\n      && !mercuryStatus.connecting\n      && !mercuryStatus.connected\n      && sparkInstance.internal.device.registered) {\n    props.connectToMercury(sparkInstance);\n  }\n}\n\n/**\n * Gets the user's feature flags\n *\n * @param {object} props\n */\nfunction getFeatures(props) {\n  const {\n    sparkInstance,\n    widgetStatus\n  } = props;\n\n  // Initial fetching of group message notification feature\n  if (!widgetStatus.hasFetchedGroupMessageNotificationFeature) {\n    props.getFeature(FEATURES_USER, FEATURES_GROUP_MESSAGE_NOTIFICATIONS, sparkInstance).then(() => {\n      props.updateWidgetStatus({\n        hasFetchedGroupMessageNotificationFeature: true\n      });\n    });\n  }\n\n  // Initial Fetching of mention notification feature\n  if (!widgetStatus.hasFetchedMentionNotificationFeature) {\n    props.getFeature(FEATURES_USER, FEATURES_MENTION_NOTIFICATIONS, sparkInstance).then(() => {\n      props.updateWidgetStatus({\n        hasFetchedMentionNotificationFeature: true\n      });\n    });\n  }\n}\n\n/**\n * Gets the user's teams\n *\n * @param {*} props\n */\nfunction getTeams(props) {\n  const {\n    sparkInstance,\n    widgetStatus\n  } = props;\n\n  // Grab teams\n  if (sparkInstance.internal.team\n    && !widgetStatus.isFetchingTeams\n    && !widgetStatus.hasFetchedTeams) {\n    props.updateWidgetStatus({isFetchingTeams: true});\n    props.fetchTeams(sparkInstance)\n      .then(() => {\n        props.updateWidgetStatus({\n          isFetchingTeams: false,\n          hasFetchedTeams: true\n        });\n      });\n  }\n}\n\n/**\n * Fetches the initial space list from services\n *\n * @param {object} props\n */\nfunction getInitialSpaces(props) {\n  const {\n    sparkInstance,\n    widgetStatus\n  } = props;\n\n  const spaceLoadCount = (props.spaceLoadCount > 0) ? props.spaceLoadCount : DEFAULT_SPACE_COUNT;\n\n  if (!widgetStatus.isFetchingInitialSpaces\n    && !widgetStatus.hasFetchedInitialSpaces) {\n    props.updateWidgetStatus({isFetchingInitialSpaces: true});\n    if (props.basicMode) {\n      props.fetchSpacesHydra(sparkInstance, {\n        max: spaceLoadCount\n      })\n        .then(() => props.updateWidgetStatus({\n          hasFetchedInitialSpaces: true,\n          // Basic mode doesn't have a second load state\n          hasFetchedAllSpaces: true\n        }));\n    }\n    else {\n      /**\n       * Fetches an encrypted small batch of spaces\n       * This allows us to show the encrypted spaces in the spaces list\n       * and decrypt individually to give a good initial user experience.\n       */\n      props.fetchSpacesEncrypted(sparkInstance, {\n        conversationsLimit: spaceLoadCount\n      })\n        .then((encryptedSpaces) => {\n          props.updateWidgetStatus({\n            hasFetchedInitialSpaces: true,\n            // We don't currently have a second load state (pagination to come)\n            hasFetchedAllSpaces: true\n          });\n\n          // As the spaces decrypt, get the avatar for them\n          const promises = encryptedSpaces.map((s) =>\n            s.decryptPromise.then((decryptedSpace) => {\n              // Store the to user in a direct convo to calculate space title\n              if (decryptedSpace.type === SPACE_TYPE_ONE_ON_ONE) {\n                storeToParticipant(decryptedSpace, props);\n              }\n\n              return getSpaceAvatar(decryptedSpace, props);\n            }));\n\n          return Promise.all(promises);\n        });\n    }\n  }\n}\n\n\n/**\n * Fetches the avatars for all the loaded spaces\n *\n * @param {object} props\n */\nfunction getAvatars(props) {\n  const {\n    spacesList,\n    widgetStatus\n  } = props;\n\n  if (!widgetStatus.hasFetchedAvatars\n    && !widgetStatus.isFetchingAvatars) {\n    props.updateWidgetStatus({isFetchingAvatars: true});\n\n    spacesList.forEach((s) => getSpaceAvatar(s, props));\n\n    props.updateWidgetStatus({hasFetchedAvatars: true});\n  }\n}\n\n/**\n * The main setup process that proceeds through a series of events\n * based on the state of the application.\n *\n * @export\n * @param {*} props\n */\nexport function setup(props) {\n  const {\n    mercuryStatus,\n    sparkInstance,\n    sparkState,\n    widgetStatus\n  } = props;\n\n  // We cannot do anything until the sdk is ready\n  if (sparkInstance\n    && sparkState.authenticated\n    && sparkState.registered\n    && !sparkState.hasError\n  ) {\n    getFeatures(props);\n\n    if (!mercuryStatus.connected) {\n      connectWebsocket(props);\n    }\n    else {\n      // Initial fetching workflow\n      if (!widgetStatus.hasFetchedInitialSpaces) {\n        getInitialSpaces(props);\n      }\n      else if (!widgetStatus.hasFetchedAvatars && !props.basicMode) {\n        // All spaces have been fetched, load avatars\n        getAvatars(props);\n      }\n\n      // Synchronous load of teams (smaller request)\n      if (!widgetStatus.hasFetchedTeams) {\n        getTeams(props);\n      }\n    }\n  }\n}\n\nexport default compose(\n  connect(\n    getRecentsWidgetProps,\n    (dispatch) => bindActionCreators({\n      connectToMercury,\n      fetchAvatar,\n      fetchSpaces,\n      fetchSpacesEncrypted,\n      fetchSpacesHydra,\n      fetchTeams,\n      getFeature,\n      storeUser,\n      updateWidgetStatus\n    }, dispatch)\n  ),\n  lifecycle({\n    componentWillMount() {\n      setup(this.props);\n    },\n    shouldComponentUpdate(nextProps) {\n      return nextProps !== this.props;\n    },\n    componentWillReceiveProps(nextProps) {\n      setup(nextProps, this.props);\n    }\n  })\n);\n","import errors from './errors';\nimport listeners from './listeners';\nimport setup from './setup';\n\nexport default [\n  setup,\n  errors,\n  listeners\n];\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport classNames from 'classnames';\nimport {autobind} from 'core-decorators';\nimport {compose} from 'recompose';\nimport {has} from 'lodash';\n\nimport {enhancer as mediaEnhancer} from '@webex/redux-module-media';\nimport {\n  fetchSpace,\n  removeSpace,\n  updateSpaceWithActivity,\n  updateSpaceRead\n} from '@webex/redux-module-spaces';\nimport {storeActivities} from '@webex/redux-module-activities';\nimport {getFeature} from '@webex/redux-module-features';\n\nimport LoadingScreen from '@webex/react-component-loading-screen';\nimport ErrorDisplay from '@webex/react-component-error-display';\nimport SpacesList from '@webex/react-component-spaces-list';\n\nimport messages from './messages';\n\nimport NoSpaces from './components/NoSpaces';\nimport RecentsHeader from './components/RecentsHeader';\n\nimport enhancers from './enhancers';\nimport getRecentsWidgetProps from './selector';\nimport {updateSpaceKeywordFilter, updateWidgetStatus} from './actions';\n\nimport styles from './styles.css';\nimport './momentum.scss';\n\nimport {\n  eventNames,\n  constructRoomsEventData,\n  constructCallEventData\n} from './events';\n\nconst injectedPropTypes = {\n  currentUser: PropTypes.object,\n  currentUserAvatar: PropTypes.object,\n  errors: PropTypes.object.isRequired,\n  incomingCall: PropTypes.object,\n  media: PropTypes.object.isRequired,\n  mercuryStatus: PropTypes.object.isRequired,\n  spacesById: PropTypes.object.isRequired,\n  spacesList: PropTypes.object.isRequired,\n  spacesListArray: PropTypes.array.isRequired,\n  sparkInstance: PropTypes.object,\n  sparkState: PropTypes.object.isRequired,\n  users: PropTypes.object.isRequired,\n  teams: PropTypes.object.isRequired,\n  widgetRecents: PropTypes.object.isRequired,\n  widgetStatus: PropTypes.object.isRequired,\n  addError: PropTypes.func.isRequired,\n  features: PropTypes.object.isRequired,\n  keywordFilter: PropTypes.string,\n  fetchAvatar: PropTypes.func.isRequired,\n  fetchSpace: PropTypes.func.isRequired,\n  getFeature: PropTypes.func.isRequired,\n  removeSpace: PropTypes.func.isRequired,\n  updateSpaceRead: PropTypes.func.isRequired,\n  updateSpaceWithActivity: PropTypes.func.isRequired,\n  updateSpaceKeywordFilter: PropTypes.func.isRequired,\n  updateWidgetStatus: PropTypes.func.isRequired\n};\n\nexport const ownPropTypes = {\n  basicMode: PropTypes.bool,\n  enableAddButton: PropTypes.bool,\n  enableSpaceListFilter: PropTypes.bool,\n  enableUserProfile: PropTypes.bool,\n  enableUserProfileMenu: PropTypes.bool,\n  muteNotifications: PropTypes.bool,\n  spaceLoadCount: PropTypes.number\n};\n\nconst defaultProps = {\n  basicMode: false,\n  enableAddButton: false,\n  enableUserProfile: true,\n  enableUserProfileMenu: false,\n  enableSpaceListFilter: true,\n  spaceLoadCount: 25\n};\n\nexport class RecentsWidget extends Component {\n  componentWillReceiveProps(nextProps) {\n    this.addListeners(nextProps);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.spacesList !== this.props.spacesList\n      || nextProps.errors !== this.props.errors\n      || nextProps.widgetRecents !== this.props.widgetRecents\n      || nextProps.incomingCall !== this.props.incomingCall;\n  }\n\n  @autobind\n  getSpaceFromCall(call) {\n    if (call.instance.locus && call.instance.locus.conversationUrl) {\n      return this.props.spacesById.get(call.instance.locus.conversationUrl.split('/').pop());\n    }\n\n    return '';\n  }\n\n  @autobind\n  addListeners(nextProps) {\n    const {\n      incomingCall\n    } = nextProps;\n\n    if (incomingCall && !this.props.incomingCall) {\n      this.handleCall(incomingCall.instance);\n    }\n  }\n\n  @autobind\n  handleCall(call) {\n    const {\n      props,\n      handleEvent\n    } = this;\n    const {\n      spacesById\n    } = props;\n    let space;\n\n    if (has(call, 'locus.conversationUrl')) {\n      space = spacesById.get(call.locus.conversationUrl.split('/').pop());\n    }\n    else {\n      // We don't know anything about this space for this call\n      space = {\n        id: call.id\n      };\n    }\n\n    handleEvent(eventNames.CALLS_CREATED, constructCallEventData(call, space));\n  }\n\n  @autobind\n  handleSpaceClick(spaceId) {\n    const space = this.props.spacesList.get(spaceId);\n\n    this.handleEvent(eventNames.SPACES_SELECTED, constructRoomsEventData(space));\n  }\n\n  @autobind\n  handleSpaceCallClick(spaceId) {\n    const space = this.props.spacesList.get(spaceId);\n    const roomData = constructRoomsEventData(space);\n\n    this.handleEvent(eventNames.SPACES_SELECTED, {\n      action: eventNames.ACTION_CALL,\n      ...roomData\n    });\n  }\n\n  @autobind\n  handleAddClick() {\n    this.handleEvent(eventNames.ADD_CLICKED, {});\n  }\n\n  @autobind\n  handleListScroll({scrollTop}) {\n    const isScrolledToTop = scrollTop === 0;\n\n    if (isScrolledToTop !== this.props.widgetStatus.isScrolledToTop) {\n      this.props.updateWidgetStatus({isScrolledToTop});\n    }\n  }\n\n  @autobind\n  handleProfileClick() {\n    const {\n      currentUserWithAvatar\n    } = this.props;\n\n    this.handleEvent(eventNames.PROFILE_CLICKED, currentUserWithAvatar);\n  }\n\n  @autobind\n  handleSignOutClick() {\n    this.handleEvent(eventNames.USER_SIGNOUT_CLICKED, {});\n  }\n\n  /**\n   * Event handler in case one isn't provided\n   * @param {string} name\n   * @param {object} data\n   * @returns {undefined}\n   */\n  @autobind\n  handleEvent(name, data) {\n    const {\n      onEvent,\n      sparkInstance\n    } = this.props;\n    const logData = Object.assign({}, data);\n\n    // Omit call objet from logger to prevent call range error\n    if (data.call) {\n      logData.call = '--- OMITTED ---';\n    }\n    sparkInstance.logger.info(`event handler - ${name}`, logData);\n    if (typeof onEvent === 'function') {\n      this.props.onEvent(name, data);\n    }\n  }\n\n  @autobind\n  handleSpaceFilterInput(event) {\n    const {props} = this;\n    const keyword = event.target.value;\n\n    props.updateSpaceKeywordFilter(keyword);\n  }\n\n  render() {\n    const {props} = this;\n    const {\n      enableAddButton,\n      enableSpaceListFilter,\n      enableUserProfile,\n      enableUserProfileMenu,\n      errors,\n      features,\n      keywordFilter,\n      spacesListArray,\n      currentUser,\n      currentUserWithAvatar,\n      widgetStatus\n    } = props;\n    const {formatMessage} = props.intl;\n\n    let displaySubtitle, displayTitle, temporary, widgetError;\n\n    // Recents widget is ready once we have some spaces or a search causing spaces to be empty\n    const isFiltered = keywordFilter && keywordFilter.length;\n    const isReady = (widgetStatus.hasFetchedInitialSpaces || isFiltered);\n\n    // Recents widget is loading more until it has fetched all spaces\n    const isLoadingMore = !widgetStatus.hasFetchedAllSpaces;\n\n    // Display the header if any of these options are true, otherwise, hide header.\n    const showHeader = enableSpaceListFilter || enableAddButton || enableUserProfile;\n    const hasSpaces = widgetStatus.hasFetchedInitialSpaces && spacesListArray.length > 0;\n    const emptyMessage = !hasSpaces && enableAddButton ? formatMessage(messages.createSpacePlus)\n      : formatMessage(messages.createSpaceTeams);\n\n    if (errors.get('hasError')) {\n      widgetError = errors.get('errors').first();\n      ({\n        displayTitle,\n        displaySubtitle,\n        temporary\n      } = widgetError);\n    }\n\n    if (isReady) {\n      return (\n        <div className={classNames('webex-recents-widget', 'md', styles.recentsWidget)}>\n          {\n            errors.get('hasError') &&\n            <div className={classNames('webex-error-wrapper', styles.errorWrapper)}>\n              <ErrorDisplay\n                secondaryTitle={displaySubtitle}\n                title={displayTitle}\n                transparent={temporary}\n              />\n            </div>\n          }\n          {\n            showHeader &&\n            <RecentsHeader\n              currentUserWithAvatar={currentUserWithAvatar}\n              enableAddButton={enableAddButton}\n              enableSpaceListFilter={enableSpaceListFilter}\n              enableUserProfile={enableUserProfile}\n              enableUserProfileMenu={enableUserProfileMenu}\n              hideBottomBorder={widgetStatus.isScrolledToTop}\n              onAddClick={this.handleAddClick}\n              onFilterChange={this.handleSpaceFilterInput}\n              onProfileClick={this.handleProfileClick}\n              onSignOutClick={this.handleSignOutClick}\n            />\n          }\n          {\n            hasSpaces &&\n            <div className={classNames('webex-spaces-list-wrapper', styles.spacesListWrapper)}>\n              <SpacesList\n                currentUser={currentUser}\n                features={features}\n                formatMessage={formatMessage}\n                hasCalling\n                isLoadingMore={isLoadingMore}\n                onCallClick={this.handleSpaceCallClick}\n                onClick={this.handleSpaceClick}\n                onScroll={this.handleListScroll}\n                spaces={spacesListArray}\n                searchTerm={typeof keywordFilter === 'string' ? keywordFilter : ''}\n              />\n            </div>\n          }\n          {\n            !hasSpaces &&\n            <NoSpaces\n              title={formatMessage(messages.noSpaces)}\n              emptyMessage={emptyMessage}\n            />\n          }\n        </div>\n      );\n    }\n    if (errors.get('hasError')) {\n      return (\n        <div className={classNames('webex-recents-widget', 'md', styles.recentsWidget)}>\n          <ErrorDisplay\n            secondaryTitle={displaySubtitle}\n            title={displayTitle}\n            transparent={temporary}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className={classNames('webex-recents-widget', 'md', styles.recentsWidget)}>\n        <LoadingScreen />\n      </div>\n    );\n  }\n}\n\n\nRecentsWidget.propTypes = {\n  ...injectedPropTypes,\n  ...ownPropTypes\n};\n\nRecentsWidget.defaultProps = {...defaultProps};\n\nexport default compose(\n  connect(\n    getRecentsWidgetProps,\n    (dispatch) => bindActionCreators({\n      fetchSpace,\n      getFeature,\n      removeSpace,\n      updateSpaceRead,\n      updateSpaceWithActivity,\n      storeActivities,\n      updateSpaceKeywordFilter,\n      updateWidgetStatus\n    }, dispatch)\n  ),\n  ...enhancers,\n  mediaEnhancer\n)(RecentsWidget);\n","export default {};\n","import {compose} from 'recompose';\nimport {constructWebexEnhancer, withIntl} from '@webex/webex-widget-base';\nimport {enhancer as mercuryEnhancer} from '@webex/redux-module-mercury';\nimport {enhancer as mediaEnhancer} from '@webex/redux-module-media';\n\nimport reducers from './reducer';\nimport ConnectedRecents from './container';\nimport messages from './translations/en';\n\nexport {reducers};\n\nexport default compose(\n  constructWebexEnhancer({\n    name: 'recents',\n    reducers\n  }),\n  mercuryEnhancer,\n  mediaEnhancer,\n  withIntl({locale: 'en', messages})\n)(ConnectedRecents);\n"],"names":["UPDATE_SPACE_KEYWORD_FILTER","UPDATE_STATUS","updateSpaceKeywordFilter","keyword","type","payload","updateWidgetStatus","status","Status","Record","isFetchingInitialSpaces","hasFetchedInitialSpaces","isFetchingAllSpaces","hasFetchedAllSpaces","isFetchingRecentSpaces","hasFetchedRecentSpaces","isFetchingTeams","hasFetchedTeams","isFetchingAvatars","hasFetchedAvatars","isListeningForNewActivity","hasFetchedGroupMessageNotificationFeature","hasFetchedMentionNotificationFeature","isScrolledToTop","RecentsWidget","incomingCall","spaceType","reducer","state","action","mergeIn","setIn","trim","reducers","avatar","activities","errors","features","media","mercury","presence","spaces","teams","users","widgetRecents","defineMessages","sharedFile","id","defaultMessage","noSpaces","createSpacePlus","createSpaceTeams","unavailable","addedToSpace","answerButtonLabel","declineButtonLabel","incomingCallMessage","errorConnection","errorBadToken","unableToLoad","unknownError","reconnecting","viewOlderSpacesButtonLabel","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","propTypes","title","PropTypes","string","isRequired","emptyMessage","NoSpaces","props","classNames","styles","noSpacesWrapper","noSpacesImg","noSpacesTitle","noSpacesMessage","currentUserWithAvatar","shape","displayName","email","img","enableUserProfileMenu","bool","onSignOutClick","func","onProfileClick","defaultProps","ProfileAvatarMenu","presenceAvatar","menu","vertical","info","signout","enableAddButton","enableSpaceListFilter","enableUserProfile","hideBottomBorder","onAddClick","onFilterChange","RecentsHeader","recentsHeader","bottomBorder","headerSideItem","UserProfileAvatar","searchInputWrapper","searchInput","checkForMercuryErrors","intl","mercuryError","isMercuryConnected","getIn","isMercuryDisconnected","hasError","get","hasMercuryError","has","hasNoMercuryError","formatMessage","addError","displayTitle","messages","displaySubtitle","temporary","removeError","checkForErrors","sparkState","spark","registerErrorId","registerError","error","statusCode","code","checkForPropsErrors","missingUserProfilePropErrorId","compose","connect","dispatch","bindActionCreators","lifecycle","componentWillMount","componentWillReceiveProps","nextProps","eventNames","SPACES_READ","SPACES_UNREAD","SPACES_SELECTED","MESSAGES_CREATED","CALLS_CREATED","ACTION_CALL","MEMBERSHIPS_CREATED","MEMBERSHIPS_DELETED","ADD_CLICKED","PROFILE_CLICKED","USER_SIGNOUT_CLICKED","constructMessagesEventData","activity","toUser","roomType","target","tags","includes","files","toPersonEmail","toPersonId","constructHydraId","hydraTypes","PEOPLE","mentionedPeople","object","mentions","items","length","map","people","personId","actor","actorId","MESSAGE","roomId","ROOM","text","html","content","personEmail","emailAddress","created","published","constructRoomsEventData","space","globalId","name","isLocked","teamId","TEAM","lastActivity","lastActivityTimestamp","isMentionNotificationsOn","isMentionNotificationsOff","isMessageNotificationsOn","isMessageNotificationsOff","constructMembershipEventData","constructCallEventData","call","event","getToParticipant","currentUserId","participants","find","p","getSpaceAvatar","sparkInstance","isDecrypting","SPACE_TYPE_ONE_ON_ONE","toParticipant","fetchAvatar","userId","SPACE_TYPE_GROUP","getWidget","getSpark","getSDKAdapter","getCurrentUser","getAvatars","getTeams","getSpaces","getUsers","getActivities","getMedia","getCallsById","byId","getMercuryStatus","getFeatures","getWidgetProps","sortByNewest","moment","lastReadableActivityDate","format","constructSpace","lastSeenActivityDate","properties","isUnread","isBefore","pick","lastActivityTime","formatDate","MENTION_NOTIFICATIONS_ON","undefined","MENTION_NOTIFICATIONS_OFF","MESSAGE_NOTIFICATIONS_ON","MESSAGE_NOTIFICATIONS_OFF","constructOneOnOne","currentUser","thisSpace","toPerson","constructGroup","team","teamName","teamColor","color","generalConversationId","getIncomingCall","createSelector","calls","isIncoming","isDismissed","getRecentSpaces","widget","widgetProps","recents","OrderedMap","toOrderedMap","sortBy","forEach","isHidden","isFetching","spaceId","constructedSpace","basicMode","latestActivity","actorName","split","set","filter","getRecentSpacesWithDetail","recentSpaces","avatars","avatarItems","s","Object","assign","count","avatarUrl","size","hasIn","locusUrl","hasJoinedOnThisDevice","activeParticipantsCount","callStartTime","startTime","toLowerCase","getCurrentUserWithAvatar","user","toJS","getRecentsWidgetProps","spacesList","spacesById","mercuryStatus","sdkAdapter","lastActivityDate","last","widgetStatus","keywordFilter","spacesListArray","toArray","handleEvent","data","onEvent","logData","logger","processActivity","API_ACTIVITY_TYPE","REPLY","storeActivities","isSelf","formattedSpace","verb","API_ACTIVITY_VERB","SHARE","POST","otherParticipant","otherParticipantId","otherUser","updateSpaceWithActivity","LOCK","UNLOCK","ACKNOWLEDGE","updateSpaceRead","CREATE","constructedActivity","ADD","LEAVE","removeSpace","HIDE","TAG","addSpaceTags","UNTAG","removeSpaceTags","handleNewActivity","fetchSpace","cachedSpace","then","newSpace","storeUser","internal","on","DEFAULT_SPACE_COUNT","storeToParticipant","connectWebsocket","hasConnected","connecting","connected","device","registered","connectToMercury","getFeature","FEATURES_USER","FEATURES_GROUP_MESSAGE_NOTIFICATIONS","FEATURES_MENTION_NOTIFICATIONS","fetchTeams","getInitialSpaces","spaceLoadCount","fetchSpacesHydra","max","fetchSpacesEncrypted","conversationsLimit","encryptedSpaces","promises","decryptPromise","decryptedSpace","Promise","all","setup","authenticated","fetchSpaces","shouldComponentUpdate","listeners","injectedPropTypes","currentUserAvatar","array","ownPropTypes","muteNotifications","number","Component","addListeners","getSpaceFromCall","instance","locus","conversationUrl","pop","handleCall","handleSpaceClick","handleSpaceCallClick","roomData","handleAddClick","handleListScroll","scrollTop","handleProfileClick","handleSignOutClick","handleSpaceFilterInput","value","render","widgetError","isFiltered","isReady","isLoadingMore","showHeader","hasSpaces","first","recentsWidget","errorWrapper","spacesListWrapper","autobind","enhancers","mediaEnhancer","constructWebexEnhancer","mercuryEnhancer","withIntl","locale","ConnectedRecents"],"mappings":"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"}