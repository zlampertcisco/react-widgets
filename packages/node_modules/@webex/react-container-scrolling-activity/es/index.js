import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import injectScrollable from '@webex/react-hoc-scrollable';
import { Loading } from '@momentum-ui/react';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-container-scrolling-activity__spinnerContainer__LnNwaW5u {\n  margin: 25px auto 0;\n}\n";
var styles = {"spinnerContainer":"react-container-scrolling-activity__spinnerContainer__LnNwaW5u"};
styleInject(css_248z);

const injectedPropTypes = {
  children: PropTypes.node.isRequired
};
const propTypes = {
  isLoadingHistoryUp: PropTypes.bool,
  ...injectedPropTypes
};
const defaultProps = {
  isLoadingHistoryUp: false
};
function ScrollingActivity({
  isLoadingHistoryUp,
  children
}) {
  let spinnerUp;
  const spinner = /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-spinner-container', styles.spinnerContainer)
  }, /*#__PURE__*/React.createElement(Loading, null));

  if (isLoadingHistoryUp) {
    spinnerUp = spinner;
  }

  return /*#__PURE__*/React.createElement("div", null, spinnerUp, children);
}
ScrollingActivity.propTypes = propTypes;
ScrollingActivity.defaultProps = defaultProps;
var index = injectScrollable(ScrollingActivity);

export default index;
export { ScrollingActivity };
//# sourceMappingURL=index.js.map
