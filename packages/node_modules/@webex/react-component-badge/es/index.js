import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-component-badge__badge__LmJhZGdl {\n  position: relative;\n  display: flex;\n  width: 35px;\n  padding: 0 4px;\n  color: #fff;\n  background-color: #858688;\n  border-radius: 16px;\n  justify-content: center;\n  align-items: center;\n}\n\n.react-component-badge__count__LmJhZGdl {\n  font-size: 10px;\n}\n\n.react-component-badge__badge__LmJhZGdl:hover .react-component-badge__tooltip__LmJhZGdl {\n  opacity: 0.8;\n}\n\n.react-component-badge__tooltip__LmJhZGdl {\n  position: absolute;\n  bottom: 32px;\n  left: -48px;\n  width: 130px;\n  padding: 4px;\n  background-color: #000;\n  border-radius: 5px;\n  opacity: 0;\n}\n\n.react-component-badge__tooltip__LmJhZGdl::after {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  width: 0;\n  height: 0;\n  margin: 0 0 -5px -5px;\n  border: 5px solid transparent;\n  border-bottom: 0;\n  border-top-color: #000;\n  content: '';\n}\n\n.react-component-badge__tooltipText__LmJhZGdl {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  font-size: 12px;\n  line-height: 16px;\n  color: #fff;\n  text-align: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.react-component-badge__tooltipText__LmJhZGdl p {\n  margin: 0;\n}\n";
var styles = {"badge":"react-component-badge__badge__LmJhZGdl","count":"react-component-badge__count__LmJhZGdl","tooltip":"react-component-badge__tooltip__LmJhZGdl","tooltipText":"react-component-badge__tooltipText__LmJhZGdl"};
styleInject(css_248z);

const propTypes = {
  children: PropTypes.node.isRequired,
  tooltip: PropTypes.node
};
const defaultProps = {
  tooltip: false
};
/**
 * Badge is supplemental, non-clickable component used to help bring attention to an item or object.
 * @param {object} props
 * @returns {object}
 * @constructor
 */

function Badge({
  children,
  tooltip
}) {
  return /*#__PURE__*/React.createElement("span", {
    className: classNames('webex-badge', styles.badge)
  }, tooltip && /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-badge-tooltip', styles.tooltip)
  }, /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-badge-text', styles.tooltipText)
  }, tooltip)), /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-badge-count', styles.count)
  }, children));
}

Badge.propTypes = propTypes;
Badge.defaultProps = defaultProps;

export default Badge;
//# sourceMappingURL=index.js.map
