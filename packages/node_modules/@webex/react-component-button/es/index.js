import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import Icon from '@webex/react-component-icon';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-component-button__buttonContainer__LmJ1dHRv {\n  height: 100%;\n  width: 100%;\n}\n\n.react-component-button__button__LmJ1dHRv {\n  height: 100%;\n  width: 100%;\n  padding: 0;\n  color: inherit;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n}\n\n.react-component-button__label__LmJ1dHRv {\n  font-size: 14px;\n  color: #4f5051;\n  text-align: center;\n}\n\n.react-component-button__labelBottom__LmJ1dHRv {\n  padding-top: 8px;\n}\n\n.react-component-button__buttonIcon__LmJ1dHRv {\n  padding: 25%;\n}\n";
var styles = {"buttonContainer":"react-component-button__buttonContainer__LmJ1dHRv","button":"react-component-button__button__LmJ1dHRv","label":"react-component-button__label__LmJ1dHRv","labelBottom":"react-component-button__labelBottom__LmJ1dHRv","buttonIcon":"react-component-button__buttonIcon__LmJ1dHRv"};
styleInject(css_248z);

const propTypes = {
  accessibilityLabel: PropTypes.string,
  buttonClassName: PropTypes.string,
  children: PropTypes.node,
  iconColor: PropTypes.string,
  iconType: PropTypes.string,
  label: PropTypes.string,
  labelPosition: PropTypes.string,
  onClick: PropTypes.func.isRequired,
  title: PropTypes.string
};
const defaultProps = {
  accessibilityLabel: '',
  buttonClassName: '',
  children: undefined,
  iconColor: 'white-100',
  iconType: '',
  label: '',
  labelPosition: '',
  title: ''
};

function Button(props) {
  const {
    accessibilityLabel,
    buttonClassName,
    children,
    iconColor,
    iconType,
    label,
    labelPosition,
    onClick,
    title
  } = props;
  const ariaLabel = accessibilityLabel || label || title;

  function handleKeyPress(e) {
    if (e.key === 'Enter' || e.key === ' ') {
      onClick();
    }
  }

  return /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-button-container', styles.buttonContainer)
  }, /*#__PURE__*/React.createElement("button", {
    "aria-label": ariaLabel,
    className: classNames('webex-button', styles.button, buttonClassName),
    onClick: onClick,
    onKeyPress: handleKeyPress
  }, iconType && /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-button-icon', styles.buttonIcon)
  }, /*#__PURE__*/React.createElement(Icon, {
    color: iconColor,
    title: title,
    type: iconType
  })), labelPosition !== 'bottom' && label, children), label && labelPosition === 'bottom' && /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-label', styles.label, styles.labelBottom)
  }, label));
}

Button.propTypes = propTypes;
Button.defaultProps = defaultProps;

export default Button;
//# sourceMappingURL=index.js.map
