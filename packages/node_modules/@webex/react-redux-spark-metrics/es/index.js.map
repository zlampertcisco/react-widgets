{"version":3,"file":"index.js","sources":["../src/actions.js","../src/metrics-events.js","../src/withSparkMetrics.js","../src/reducer.js","../src/index.js"],"sourcesContent":["export const STORE_METRIC = 'metrics/STORE_METRIC';\nexport const DELETE_METRIC = 'metrics/DELETE_METRIC';\nexport const ADD_TO_QUEUE = 'metrics/ADD_TO_QUEUE';\nexport const CLEAR_QUEUE = 'metrics/CLEAR_QUEUE';\nexport const STORE_START = 'metrics/STORE_START';\nexport const STORE_END = 'metrics/STORE_END';\nexport const UPDATE_METRICS_STATUS = 'metrics/UPDATE_METRICS_STATUS';\n\nexport function storeMetric(name, data) {\n  return {\n    type: STORE_METRIC,\n    payload: {\n      name,\n      data\n    }\n  };\n}\n\nexport function deleteMetric(name) {\n  return {\n    type: DELETE_METRIC,\n    payload: {\n      name\n    }\n  };\n}\n\nexport function addToQueue(data) {\n  return {\n    type: ADD_TO_QUEUE,\n    payload: {\n      data\n    }\n  };\n}\n\nexport function clearQueue() {\n  return {\n    type: CLEAR_QUEUE\n  };\n}\n\nexport function updateMetricsStatus(status) {\n  return {\n    type: UPDATE_METRICS_STATUS,\n    payload: {\n      status\n    }\n  };\n}\n","const events = {\n  WIDGET_LOAD: {\n    resource: 'widget',\n    event: 'load'\n  },\n  WIDGET_UNMOUNT: {\n    resource: 'widget',\n    event: 'unmount'\n  }\n};\n\nexport default events;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {autobind} from 'core-decorators';\nimport {wrapDisplayName} from 'recompose';\n\nimport {\n  deleteMetric,\n  storeMetric,\n  addToQueue,\n  clearQueue,\n  updateMetricsStatus\n} from './actions';\nimport events from './metrics-events';\n\nconst NS = 'webex-widget-';\n\n\nexport default function withSparkMetrics(widgetName) {\n  const defaultFields = {\n    protocol: window.location.protocol,\n    hostname: window.location.hostname,\n    pathname: window.location.pathname,\n    widgetVersion: process.env.REACT_WEBEX_VERSION,\n    iteration: 0\n  };\n\n  const defaultTags = {\n    widgetName\n  };\n\n  return (BaseComponent) => {\n    /* eslint-disable-reason need to refactor before adding default props */\n    /* eslint-disable react/require-default-props */\n    const injectedProps = {\n      sparkInstance: PropTypes.object,\n      sparkState: PropTypes.object,\n      metricsStore: PropTypes.object,\n      updateMetricsStatus: PropTypes.func,\n      deleteMetric: PropTypes.func,\n      storeMetric: PropTypes.func,\n      addToQueue: PropTypes.func,\n      clearQueue: PropTypes.func\n    };\n\n\n    class InjectSparkMetrics extends Component {\n      static formatMetricData({\n        data, action, event, fields, tags\n      }) {\n        return {\n          type: ['operational'],\n          tags: Object.assign({}, defaultTags, {\n            action,\n            event\n          }, tags),\n          fields: Object.assign({}, defaultFields, {\n            data\n          }, fields)\n        };\n      }\n\n      constructor(props) {\n        super(props);\n        this.startTime = window.performance.now();\n      }\n\n      componentWillMount() {\n        this.sendStartMetric({\n          ...events.WIDGET_LOAD,\n          data: this.startTime\n        });\n      }\n\n      componentWillReceiveProps(nextProps) {\n        // Try to send queue on every load if there is something to send\n        this.sendQueue(nextProps);\n      }\n\n      shouldComponentUpdate() {\n        return true;\n      }\n\n      componentWillUnmount() {\n        this.sendElapsedTime(events.WIDGET_UNMOUNT);\n      }\n\n      @autobind\n      canSendMetric() {\n        const {\n          sparkInstance,\n          sparkState\n        } = this.props;\n\n        return sparkInstance && sparkState.get('authenticated') && sparkState.get('registered');\n      }\n\n\n      @autobind\n      hasQueuedMetrics() {\n        const {\n          metricsStore\n        } = this.props;\n\n        return metricsStore && metricsStore.get('queue').count();\n      }\n\n\n      @autobind\n      sendMetric(metric) {\n        const {props} = this;\n        const {sparkInstance} = props;\n        const {\n          resource\n        } = metric;\n        const formattedData = InjectSparkMetrics.formatMetricData(metric);\n\n        if (this.canSendMetric()) {\n          try {\n            return sparkInstance.internal.metrics\n              .submitClientMetrics(`${NS}${resource}`, formattedData);\n          }\n          catch (e) {\n            // Don't do anything\n          }\n        }\n\n        return props.addToQueue(metric);\n      }\n\n      @autobind\n      sendElapsedTime(metric) {\n        if (metric) {\n          const updatedMetric = Object.assign({}, metric);\n\n          updatedMetric.data = window.performance.now() - this.startTime;\n\n          return this.sendMetric(updatedMetric);\n        }\n\n        return Promise.resolve();\n      }\n\n      @autobind\n      sendSavedMetric(metricName) {\n        const {props} = this;\n        const {\n          metricsStore\n        } = props;\n        const metric = metricsStore.getIn(['items', metricName]);\n\n        if (metric) {\n          return this.sendMetric(metric.toJS())\n            .then(() => props.deleteMetric(metricName));\n        }\n\n        return false;\n      }\n\n      @autobind\n      sendQueue(props) {\n        const {\n          canSendMetric,\n          hasQueuedMetrics,\n          sendMetric\n        } = this;\n        const {\n          metricsStore\n        } = props;\n\n        if (canSendMetric() && hasQueuedMetrics() && !metricsStore.getIn(['status', 'isSendingQueue'])) {\n          props.updateMetricsStatus({isSendingQueue: true});\n\n          return Promise.all(metricsStore.get('queue')\n            .map((metric) => sendMetric(metric.toJS())))\n            .then(() => {\n              props.clearQueue();\n\n              return props.updateMetricsStatus({isSendingQueue: false});\n            });\n        }\n\n        return Promise.resolve();\n      }\n\n      @autobind\n      sendStartMetric(metric) {\n        const computedMetric = Object.assign({}, {\n          action: 'start',\n          data: window.performance.now()\n        }, metric);\n        const metricName = [metric.resource, metric.event, 'start'].join(':');\n\n        this.props.storeMetric(metricName, computedMetric);\n\n        return this.sendMetric(computedMetric);\n      }\n\n      @autobind\n      sendEndMetric(metric) {\n        // Grab end timestamp\n        const end = window.performance.now();\n        // Check for starting time\n        const startName = [metric.resource, metric.event, 'start'].join(':');\n        const start = this.props.metricsStore.getIn(['items', startName, 'data']);\n\n        if (start) {\n          // construct and send end metric\n          const endMetric = Object.assign({}, {\n            action: 'end',\n            data: end\n          }, metric);\n          const sendEnd = this.sendMetric(endMetric);\n\n          // construct and send duration metric\n          const durationMetric = Object.assign({}, {\n            action: 'duration',\n            data: end - start\n          }, metric);\n          const sendDuration = this.sendMetric(durationMetric);\n\n          this.props.deleteMetric(startName);\n\n          return Promise.all([sendEnd, sendDuration]);\n        }\n\n        return Promise.resolve();\n      }\n\n      render() {\n        const {\n          sendQueue,\n          sendMetric,\n          sendElapsedTime,\n          sendStartMetric,\n          sendEndMetric\n        } = this;\n\n        const metrics = {\n          sendQueue,\n          sendMetric,\n          sendElapsedTime,\n          sendStartMetric,\n          sendEndMetric\n        };\n\n        return <BaseComponent {...this.props} metrics={metrics} />;\n      }\n    }\n\n    InjectSparkMetrics.propTypes = injectedProps;\n    InjectSparkMetrics.displayName = wrapDisplayName(BaseComponent, 'withSparkMetrics');\n\n    return connect(\n      (state) => ({\n        metricsStore: state.metricsStore,\n        sparkInstance: state.spark.get('spark'),\n        sparkState: state.spark.get('status')\n      }),\n      (dispatch) => bindActionCreators({\n        deleteMetric,\n        storeMetric,\n        addToQueue,\n        clearQueue,\n        updateMetricsStatus\n      }, dispatch)\n    )(InjectSparkMetrics);\n  };\n}\n","import {fromJS} from 'immutable';\n\nimport {\n  STORE_METRIC,\n  ADD_TO_QUEUE,\n  DELETE_METRIC,\n  CLEAR_QUEUE,\n  UPDATE_METRICS_STATUS\n} from './actions';\n\nconst initialState = fromJS({\n  items: {},\n  queue: [],\n  status: {\n    isSendingQueue: false\n  }\n});\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case STORE_METRIC:\n      return state.setIn(['items', action.payload.name], fromJS(action.payload.data));\n    case DELETE_METRIC:\n      return state.deleteIn(['items', action.payload.name]);\n    case ADD_TO_QUEUE: {\n      const newQueue = state.get('queue').push(fromJS(action.payload.data));\n\n      return state.set('queue', newQueue);\n    }\n    case CLEAR_QUEUE:\n      return state.set('queue', fromJS([]));\n    case UPDATE_METRICS_STATUS:\n      return state.mergeDeepIn(['status'], action.payload.status);\n    default:\n      return state;\n  }\n}\n","import withSparkMetrics from './withSparkMetrics';\n\nexport {default} from './reducer';\nexport {default as events} from './metrics-events';\nexport {withSparkMetrics};\n\n\nexport function injectSparkMetrics(WrappedComponent, widgetName) {\n  return withSparkMetrics(widgetName)(WrappedComponent);\n}\n"],"names":["STORE_METRIC","DELETE_METRIC","ADD_TO_QUEUE","CLEAR_QUEUE","UPDATE_METRICS_STATUS","storeMetric","name","data","type","payload","deleteMetric","addToQueue","clearQueue","updateMetricsStatus","status","events","WIDGET_LOAD","resource","event","WIDGET_UNMOUNT","NS","withSparkMetrics","widgetName","defaultFields","protocol","window","location","hostname","pathname","widgetVersion","process","env","REACT_WEBEX_VERSION","iteration","defaultTags","BaseComponent","injectedProps","sparkInstance","PropTypes","object","sparkState","metricsStore","func","InjectSparkMetrics","Component","formatMetricData","action","fields","tags","Object","assign","constructor","props","startTime","performance","now","componentWillMount","sendStartMetric","componentWillReceiveProps","nextProps","sendQueue","shouldComponentUpdate","componentWillUnmount","sendElapsedTime","canSendMetric","get","hasQueuedMetrics","count","sendMetric","metric","formattedData","internal","metrics","submitClientMetrics","e","updatedMetric","Promise","resolve","sendSavedMetric","metricName","getIn","toJS","then","isSendingQueue","all","map","computedMetric","join","sendEndMetric","end","startName","start","endMetric","sendEnd","durationMetric","sendDuration","render","autobind","propTypes","displayName","wrapDisplayName","connect","state","spark","dispatch","bindActionCreators","initialState","fromJS","items","queue","reducer","setIn","deleteIn","newQueue","push","set","mergeDeepIn","injectSparkMetrics","WrappedComponent"],"mappings":"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"}