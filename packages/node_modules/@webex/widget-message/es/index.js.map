{"version":3,"file":"index.js","sources":["../src/actions.js","../src/reducer.js","../src/selector.js","../src/enhancers/setup.js","../src/enhancers/index.js","../../../../../node_modules/style-inject/dist/style-inject.es.js","../src/messages.js","../src/events.js","../src/helpers.js","../src/container.js","../src/translations/en.js","../src/index.js"],"sourcesContent":["import {deleteActivity} from '@webex/redux-module-conversation';\n\n\nexport const UPDATE_WIDGET_STATE = 'widget-message/UPDATE_WIDGET_STATE';\nexport const SET_SCROLL_POSITION = 'widget-message/SET_SCROLL_POSITION';\nexport const RESET_WIDGET_STATE = 'widget-message/RESET_WIDGET_STATE';\n\nexport function updateWidgetState(state) {\n  return {\n    type: UPDATE_WIDGET_STATE,\n    payload: {\n      state\n    }\n  };\n}\n\nexport function setScrollPosition(scrollPosition) {\n  return {\n    type: SET_SCROLL_POSITION,\n    payload: {\n      scrollPosition\n    }\n  };\n}\n\nexport function resetWidgetState() {\n  return {\n    type: RESET_WIDGET_STATE\n  };\n}\n\nexport function showScrollToBottomButton(isVisible) {\n  return (dispatch) => {\n    dispatch(updateWidgetState({\n      showScrollToBottomButton: isVisible\n    }));\n  };\n}\n\n/**\n * Sets if the widget has been scrolled up from the bottom\n *\n * @export\n * @param {boolean} isScrolledUp\n * @returns {Thunk}\n */\nexport function setScrolledUp(isScrolledUp) {\n  return (dispatch, getState) => {\n    const {widgetMessage} = getState();\n\n    // Since we are triggering this every scroll, let's not attack\n    // our store if we don't need to\n    if (!isScrolledUp) {\n      /* eslint-disable operator-linebreak */\n      if (\n        widgetMessage.get('hasNewMessage') ||\n        widgetMessage.get('hasScrolledUp') ||\n        widgetMessage.get('showScrollToBottomButton')\n      ) {\n        dispatch(updateWidgetState({\n          hasNewMessage: false,\n          hasScrolledUp: false,\n          showScrollToBottomButton: false\n        }));\n      }\n    }\n    /* eslint-disable operator-linebreak */\n    else if (\n      !widgetMessage.get('hasScrolledUp') ||\n      !widgetMessage.get('showScrollToBottomButton')\n    ) {\n      dispatch(updateWidgetState({\n        hasScrolledUp: true,\n        showScrollToBottomButton: true\n      }));\n    }\n  };\n}\n\nexport function updateHasNewMessage(hasNew) {\n  return (dispatch) => {\n    dispatch(updateWidgetState({\n      hasNewMessage: hasNew\n    }));\n  };\n}\n\nexport function confirmDeleteActivity(activityId) {\n  return (dispatch) => {\n    dispatch(updateWidgetState({\n      deletingActivityId: activityId,\n      showAlertModal: true\n    }));\n  };\n}\n\n\nexport function hideDeleteModal() {\n  return (dispatch) => {\n    dispatch(updateWidgetState({\n      deletingActivityId: null,\n      showAlertModal: false\n    }));\n  };\n}\n\nexport function deleteActivityAndDismiss(conversation, activity, spark) {\n  return (dispatch) => {\n    dispatch(deleteActivity(conversation, activity, spark))\n      .then(() => {\n        dispatch(hideDeleteModal());\n      });\n  };\n}\n","import {fromJS} from 'immutable';\nimport {combineReducers} from 'redux';\nimport conversation from '@webex/redux-module-conversation';\nimport activity from '@webex/redux-module-activity';\nimport avatar from '@webex/redux-module-avatar';\nimport flags from '@webex/redux-module-flags';\nimport indicators from '@webex/redux-module-indicators';\nimport {reducer as notifications} from '@webex/react-container-notifications';\nimport {reducer as messageComposer} from '@webex/react-container-message-composer';\nimport presence from '@webex/redux-module-presence';\nimport share from '@webex/redux-module-share';\nimport spark from '@webex/react-redux-spark';\nimport features from '@webex/redux-module-features';\n\nimport {\n  RESET_WIDGET_STATE,\n  SET_SCROLL_POSITION,\n  UPDATE_WIDGET_STATE\n} from './actions';\n\nexport const initialState = fromJS({\n  deletingActivityId: null,\n  isListeningToActivity: false,\n  isListeningToBufferState: false,\n  isListeningToTyping: false,\n  showAlertModal: false,\n  showScrollToBottomButton: false,\n  hasNewMessage: false,\n  scrollPosition: {},\n  hasFetchedAdaptiveCardFeature: false\n});\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case RESET_WIDGET_STATE:\n      return initialState;\n\n    case UPDATE_WIDGET_STATE:\n      return state.merge(action.payload.state);\n\n    case SET_SCROLL_POSITION:\n      return state.set('scrollPosition', action.payload.scrollPosition);\n\n    default:\n      return state;\n  }\n}\n\nexport const reducers = {\n  activity,\n  avatar,\n  conversation,\n  flags,\n  indicators,\n  notifications,\n  share,\n  spark,\n  messageComposer,\n  features,\n  presence,\n  widgetMessage: reducer\n};\n\nexport default combineReducers(reducers);\n","import {createSelector} from 'reselect';\nimport {getActivitiesFromThreadAndNonThreadCollections} from '@webex/redux-module-conversation';\n\nconst getSparkInstance = (state, props) => props.sparkInstance || state.spark.get('spark');\nconst getSparkState = (state) => state.spark.get('status');\nconst getConversation = (state) => state.conversation;\nconst getParticipants = (state) => state.conversation.get('participants');\nconst getConversationThreadActivities = (state) => state.conversation.get('threadActivities');\nconst getConversationNonThreadActivities = (state) => state.conversation.get('sortNonThreadActivities');\nconst getActivities = createSelector(\n  [\n    getConversationThreadActivities,\n    getConversationNonThreadActivities\n  ],\n  getActivitiesFromThreadAndNonThreadCollections\n);\nconst getConversationOldestPublishedDate = (state) => state.conversation.get('oldestPublishedDate');\nconst getUsers = (state) => state.users;\nconst getFeatures = (state) => state.features;\n\nfunction constructSpace(space) {\n  const lastActivityTimestamp = space.get('lastReadableActivityDate');\n  const tags = space.get('tags');\n  const id = space.get('id');\n\n  return {\n    id,\n    type: tags && tags.includes('ONE_ON_ONE') ? 'direct' : 'group',\n    lastActivityTimestamp,\n    published: space.get('published'),\n    isLocked: tags && tags.includes('LOCKED')\n  };\n}\n\nfunction constructOneOnOne(space, currentUser) {\n  const thisSpace = constructSpace(space);\n  const currentUserEmail = currentUser.email;\n  const otherUsers = space.get('participants')\n    .find((p) => p.get('emailAddress') !== currentUserEmail);\n\n  if (otherUsers) {\n    thisSpace.toUser = otherUsers;\n    thisSpace.name = otherUsers.get('displayName');\n  }\n\n  return thisSpace;\n}\n\nfunction constructGroup(space) {\n  const thisSpace = constructSpace(space);\n\n  thisSpace.name = space.get('displayName');\n  const team = space.get('team');\n\n  if (team) {\n    thisSpace.teamName = team.get('displayName');\n    thisSpace.teamColor = team.get('color');\n    thisSpace.teamId = team.get('id');\n  }\n\n  return thisSpace;\n}\n\n\nexport const getSpace = createSelector(\n  [getConversation, getUsers],\n  (conversation, users) => {\n    const space = conversation;\n    const currentUser = users.getIn(['byId', users.get('currentUserId')]);\n\n    if (space.getIn(['status', 'isOneOnOne'])) {\n      return constructOneOnOne(space, currentUser);\n    }\n\n    return constructGroup(space, currentUser);\n  }\n);\n\nconst getActivitiesStatus = createSelector(\n  [getConversation],\n  (conversation) => conversation.get('status').toJS()\n);\n\nconst getMessageWidgetProps = createSelector(\n  [\n    getSparkInstance,\n    getSparkState,\n    getConversation,\n    getConversationOldestPublishedDate,\n    getParticipants,\n    getActivities,\n    getSpace,\n    getActivitiesStatus,\n    getFeatures\n  ],\n  (\n    sparkInstance, sparkState, conversation, oldestPublishedDate,\n    participants, activities, space, activitiesStatus, features\n  ) => ({\n    activities: activities.toJS(),\n    activityCount: activities.count(),\n    activitiesStatus,\n    lastActivity: activities.last(),\n    firstActivity: activities.first(),\n    oldestPublishedDate,\n    conversationId: conversation.get('id'),\n    participants: participants.toJS(),\n    space,\n    sparkInstance,\n    sparkState: sparkState.toJS(),\n    features\n  })\n);\n\nexport default getMessageWidgetProps;\n","import {compose, lifecycle} from 'recompose';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getFeature} from '@webex/redux-module-features';\nimport {connectToMercury} from '@webex/redux-module-mercury';\nimport {\n  FEATURES_DEVELOPER,\n  FEATURES_WIDGET_ADAPTIVE_CARD\n} from '@webex/react-component-utils';\n\nimport {updateWidgetState} from '../actions';\nimport getMessageWidgetProps from '../selector';\n\nfunction getFeatures(props) {\n  const {\n    sparkInstance,\n    widgetMessage\n  } = props;\n\n  const hasFetchedAdaptiveCardFeature = widgetMessage.get('hasFetchedAdaptiveCardFeature');\n\n  // Initial fetching of adaptive card feature\n  if (!hasFetchedAdaptiveCardFeature) {\n    props.updateWidgetState({\n      hasFetchedAdaptiveCardFeature: true\n    });\n\n    props.getFeature(FEATURES_DEVELOPER, FEATURES_WIDGET_ADAPTIVE_CARD, sparkInstance);\n  }\n}\n\nexport function setup(props) {\n  const {\n    sparkInstance,\n    sparkState\n  } = props;\n\n  if (sparkInstance\n    && sparkState.authenticated\n    && sparkState.registered\n    && !sparkState.hasError\n  ) {\n    getFeatures(props);\n  }\n}\n\nexport default compose(\n  connect(\n    getMessageWidgetProps,\n    (dispatch) => bindActionCreators({\n      connectToMercury,\n      getFeature,\n      updateWidgetState\n    }, dispatch)\n  ),\n  lifecycle({\n    componentWillMount() {\n      setup(this.props);\n    },\n    shouldComponentUpdate(nextProps) {\n      return nextProps !== this.props;\n    },\n    componentWillReceiveProps(nextProps) {\n      setup(nextProps, this.props);\n    }\n  })\n);\n","import setup from './setup';\n\nexport default [\n  setup\n];\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/*\n * WidgetMessage Messages\n *\n * This contains all the text for the FeaturePage component.\n */\nimport {defineMessages} from 'react-intl';\n\nexport default defineMessages({\n  newMessagesMessage: {\n    id: 'ciscospark.container.message.newMessages.message',\n    defaultMessage: 'New Messages'\n  },\n  deleteAlertTitle: {\n    id: 'ciscospark.container.message.deleteAlert.title',\n    defaultMessage: 'Delete'\n  },\n  deleteAlertBody: {\n    id: 'ciscospark.container.message.deleteAlert.body',\n    defaultMessage: 'Are you sure you want to delete this message?'\n  },\n  deleteButtonLabel: {\n    id: 'ciscospark.container.message.deleteAlert.confirmButton',\n    defaultMessage: 'Delete'\n  },\n  cancelButtonLabel: {\n    id: 'ciscospark.container.message.deleteAlert.cancelButton',\n    defaultMessage: 'Cancel'\n  },\n  messageComposerPlaceholder: {\n    id: 'ciscospark.container.message.messageComposer.placeholder',\n    defaultMessage: 'Send a message to {displayName}'\n  },\n  dropzoneCoverMessage: {\n    id: 'ciscospark.container.message.dropzone.coverMessage',\n    defaultMessage: 'Drag and drop your files here'\n  },\n  errorConversation: {\n    id: 'ciscospark.container.message.error.noConversation',\n    defaultMessage: 'Conversation Not Available'\n  },\n  scrollToBottom: {\n    id: 'ciscospark.container.message.scrollToBottom',\n    defaultMessage: 'Click to scroll to latest messages'\n  },\n  sharedCards: {\n    id: 'ciscospark.container.message.sharedCards',\n    defaultMessage: '{cardsLength, plural, =1 {Responded with a card} other {Responded with # cards}}'\n  },\n  sharedPhotos: {\n    id: 'ciscospark.container.message.sharedPhotos',\n    defaultMessage: '{imagesLength, plural, =1 {Shared a photo} other {Shared # photos}}'\n  }\n});\n","import {constructHydraId, hydraTypes} from '@webex/react-component-utils';\n\nexport const eventNames = {\n  SPACES_READ: 'rooms:read',\n  SPACES_UNREAD: 'rooms:unread',\n  MESSAGES_CREATED: 'messages:created'\n};\n\n/**\n * Constructs an event detail object for messages:created\n * @export\n * @param {Object} activity from mercury\n * @param {Object} toUser\n * @returns {Object} constructed event\n */\nexport function constructMessagesEventData(activity, toUser) {\n  const roomType = activity.target.tags.includes('ONE_ON_ONE') ? 'direct' : 'group';\n  let files, toPersonEmail, toPersonId;\n\n  if (roomType === 'direct' && toUser) {\n    toPersonEmail = toUser.emailAddress;\n    toPersonId = constructHydraId(hydraTypes.PEOPLE, toUser.id);\n  }\n\n  let mentionedPeople = activity.object.mentions;\n\n  if (mentionedPeople && mentionedPeople.items.length) {\n    mentionedPeople = mentionedPeople.items.map((people) => ({\n      id: constructHydraId(hydraTypes.PEOPLE, people.id)\n    }));\n  }\n\n  // Files need to be decrypted and converted into a usable URL\n  if (activity.object.files && activity.object.files.items.length) {\n    files = activity.object.files.items;\n  }\n\n  const personId = constructHydraId(hydraTypes.PEOPLE, activity.actor.id);\n\n  return {\n    actorId: personId,\n    actorName: activity.actor.displayName,\n    id: constructHydraId(hydraTypes.MESSAGE, activity.id),\n    roomId: constructHydraId(hydraTypes.ROOM, activity.target.id),\n    roomType: activity.target.tags.includes('ONE_ON_ONE') ? 'direct' : 'group',\n    text: activity.object.displayName,\n    html: activity.object.content,\n    files,\n    personId,\n    personEmail: activity.actor.emailAddress,\n    created: activity.published,\n    mentionedPeople,\n    toPersonId,\n    toPersonEmail\n  };\n}\n\n\n/**\n * Creates an room data object for DOM and event hooks\n *\n * @export\n * @param {Object} space\n * @param {Object} activity\n * @returns {Object}\n */\nexport function constructRoomsEventData(space, activity) {\n  return {\n    id: constructHydraId(hydraTypes.ROOM, space.id),\n    actorId: constructHydraId(hydraTypes.PEOPLE, activity.actor.id),\n    actorName: activity.actor.displayName,\n    title: space.name,\n    type: space.type,\n    isLocked: space.isLocked,\n    teamId: constructHydraId(hydraTypes.TEAM, space.teamId),\n    lastActivity: activity && activity.published || space.lastActivityTimestamp,\n    created: space.published\n  };\n}\n","/* eslint-disable import/prefer-default-export */\nimport {API_ACTIVITY_TYPE, API_ACTIVITY_VERB} from '@webex/react-component-utils';\n\nimport {\n  constructMessagesEventData,\n  constructRoomsEventData\n} from './events';\n\n\n/**\n * Processes a mercury event \"event:conversation.activity\"\n * @param {object} event\n * @param {object} eventNames\n * @param {string} currentUserId\n * @param {string} space\n * @param {object} actions\n * @param {function} actions.handleEvent\n * @param {function} actions.removeInflightActivity\n * @param {function} actions.updateHasNewMessage\n */\nexport function handleConversationActivityEvent(event, eventNames, currentUserId, space, actions) {\n  const {activity} = event.data;\n  const toUser = space.toUser && space.toUser.toJS();\n  const isSelf = activity.actor.id === currentUserId;\n\n  // Ignore activity from other conversations\n  if (activity.target && activity.target.id === space.id) {\n    // Reply activities are not currently supported\n    if (activity.type === API_ACTIVITY_TYPE.REPLY) {\n      return;\n    }\n\n    switch (activity.verb) {\n      case API_ACTIVITY_VERB.ACKNOWLEDGE:\n        if (activity.object.objectType === 'activity' && isSelf) {\n          actions.handleEvent(eventNames.SPACES_READ, constructRoomsEventData(space, activity));\n        }\n        break;\n      case API_ACTIVITY_VERB.SHARE:\n      case API_ACTIVITY_VERB.POST:\n        if (isSelf) {\n          // Remove the in flight activity that matches this\n          actions.removeInflightActivity(activity.clientTempId);\n        }\n        else {\n          actions.updateHasNewMessage(true);\n          actions.handleEvent(eventNames.SPACES_UNREAD, constructRoomsEventData(space, activity));\n        }\n        // Emit message:created event\n        actions.handleEvent(eventNames.MESSAGES_CREATED, constructMessagesEventData(activity, toUser));\n        break;\n      default: {\n        break;\n      }\n    }\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport Dropzone from 'react-dropzone';\nimport classNames from 'classnames';\nimport {debounce, has, throttle, filter} from 'lodash';\nimport {autobind} from 'core-decorators';\nimport {compose} from 'recompose';\n\nimport {checkMaxFileSize, constructFiles, API_ACTIVITY_VERB, CARD_CONTAINS_IMAGE, ACTIVITY_OBJECT_CONTENT_CATEGORY_IMAGES} from '@webex/react-component-utils';\n\nimport {fetchAvatarsForUsers} from '@webex/redux-module-avatar';\n\nimport {\n  acknowledgeActivityOnServer,\n  createConversation,\n  getConversation,\n  loadMissingActivities,\n  loadPreviousMessages,\n  resetConversation\n} from '@webex/redux-module-conversation';\n\nimport {\n  fetchFlags,\n  flagActivity,\n  removeFlagFromServer\n} from '@webex/redux-module-flags';\n\nimport {setTyping} from '@webex/redux-module-indicators';\n\nimport {\n  addFiles,\n  removeInflightActivity,\n  retryFailedActivity\n} from '@webex/redux-module-activity';\n\nimport {\n  subscribeToPresenceUpdates,\n  unsubscribeFromPresenceUpdates\n} from '@webex/redux-module-presence';\n\n\nimport ConfirmationModal from '@webex/react-component-confirmation-modal';\nimport Cover from '@webex/react-component-cover';\nimport LoadingScreen from '@webex/react-component-loading-screen';\nimport ActivityList from '@webex/react-container-activity-list';\nimport MessageComposer from '@webex/react-container-message-composer';\nimport ReadReceipts from '@webex/react-container-read-receipts';\nimport ScrollingActivity from '@webex/react-container-scrolling-activity';\nimport ErrorDisplay from '@webex/react-component-error-display';\n\nimport wrapConversationMercury from '@webex/react-hoc-conversation-mercury';\n\nimport Notifications, {createNotification} from '@webex/react-container-notifications';\n\nimport {Button, Icon} from '@momentum-ui/react';\n\nimport enhancers from './enhancers';\n\nimport {\n  confirmDeleteActivity,\n  deleteActivityAndDismiss,\n  hideDeleteModal,\n  resetWidgetState,\n  setScrolledUp,\n  setScrollPosition,\n  showScrollToBottomButton,\n  updateHasNewMessage,\n  updateWidgetState\n} from './actions';\n\nimport styles from './styles.css';\nimport messages from './messages';\n\nimport getMessageWidgetProps from './selector';\nimport {eventNames as defaultEventNames} from './events';\n\nimport {handleConversationActivityEvent} from './helpers';\n\nimport {destinationTypes} from './';\n\nconst injectedPropTypes = {\n  avatar: PropTypes.object.isRequired,\n  activity: PropTypes.object.isRequired,\n  activitiesStatus: PropTypes.shape({\n    isLoadingHistoryUp: PropTypes.bool\n  }).isRequired,\n  conversation: PropTypes.object.isRequired,\n  composerActions: PropTypes.shape({\n    attachFiles: PropTypes.bool\n  }).isRequired,\n  flags: PropTypes.object.isRequired,\n  sparkInstance: PropTypes.object,\n  widgetMessage: PropTypes.object.isRequired,\n  acknowledgeActivityOnServer: PropTypes.func.isRequired,\n  addFiles: PropTypes.func.isRequired,\n  confirmDeleteActivity: PropTypes.func.isRequired,\n  createConversation: PropTypes.func.isRequired,\n  createNotification: PropTypes.func.isRequired,\n  deleteActivityAndDismiss: PropTypes.func.isRequired,\n  fetchAvatarsForUsers: PropTypes.func.isRequired,\n  fetchFlags: PropTypes.func.isRequired,\n  flagActivity: PropTypes.func.isRequired,\n  getConversation: PropTypes.func.isRequired,\n  hideDeleteModal: PropTypes.func.isRequired,\n  loadMissingActivities: PropTypes.func.isRequired,\n  loadPreviousMessages: PropTypes.func.isRequired,\n  oldestPublishedDate: PropTypes.string.isRequired,\n  removeFlagFromServer: PropTypes.func.isRequired,\n  retryFailedActivity: PropTypes.func.isRequired,\n  removeInflightActivity: PropTypes.func.isRequired,\n  setScrollPosition: PropTypes.func.isRequired,\n  setScrolledUp: PropTypes.func.isRequired,\n  setTyping: PropTypes.func.isRequired,\n  showScrollToBottomButton: PropTypes.func.isRequired,\n  updateHasNewMessage: PropTypes.func.isRequired,\n  updateWidgetState: PropTypes.func.isRequired,\n  space: PropTypes.object.isRequired,\n  features: PropTypes.object.isRequired,\n  getFeature: PropTypes.func.isRequired,\n  participants: PropTypes.array.isRequired,\n  activities: PropTypes.object.isRequired,\n  conversationId: PropTypes.string\n};\n\nexport const ownPropTypes = {\n  destination: PropTypes.shape({\n    // Email or Hydra ID\n    id: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['email', 'spaceId', 'userId'])\n  }).isRequired,\n  hasAcknowledgementsDisabled: PropTypes.bool,\n  muteNotifications: PropTypes.bool,\n  onEvent: PropTypes.func,\n  eventNames: PropTypes.object\n};\n\nconst fetchMoreActivitiesIfNecessary = ({\n  activitiesStatus, conversation, firstActivity,\n  loadPreviousMessages: lpm, sparkInstance, setScrollPosition: ssp,\n  oldestPublishedDate\n}, activityList) => {\n  if (activityList?.isScrolledToTop() && firstActivity.verb !== 'create' && !activitiesStatus.isLoadingHistoryUp) {\n    // Store scroll position before loading messages so the window\n    // doesn't jump after they load\n    ssp({scrollTop: activityList.getScrollTop()});\n    lpm(\n      conversation.get('url'),\n      oldestPublishedDate,\n      sparkInstance\n    );\n  }\n};\n\n/**\n * MessageWidget Container\n * @extends Component\n */\nexport class MessageWidget extends Component {\n  /**\n   * Check if activity list should scroll to bottom\n   *\n   * @param {object} props\n   * @param {object} prevProps\n   * @returns {boolean}\n   */\n  static shouldScrollToBottom(props, prevProps) {\n    const {\n      activityCount\n    } = props;\n    const prevActivitiesCount = prevProps.activityCount;\n\n    if (activityCount && prevActivitiesCount === 0) {\n      // Always scroll to the bottom when activities first load\n      return true;\n    }\n\n    // Otherwise, don't scroll if we have scrolled up\n    let shouldScrollToBottom = true;\n\n    if (props.widgetMessage.get('hasScrolledUp')) {\n      shouldScrollToBottom = false;\n    }\n\n    return shouldScrollToBottom;\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleScroll = throttle(this.handleScroll, 250);\n    this.handleMouseMove = debounce(this.handleMouseMove, 500, {\n      leading: true,\n      trailing: false\n    });\n  }\n\n  componentDidMount() {\n    this.eventNames = Object.assign({}, defaultEventNames, this.props.eventNames);\n\n    // To support changing destinations, we must reset the stores when mounting\n    // so previous conversations to other destinations aren't displayed\n    this.props.resetWidgetState();\n\n    // If our widget is instantiated with all the props loaded,\n    // we can setup the conversation\n    this.establishConversation(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // This needs to fire here because props are loaded async via redux\n    this.establishConversation(nextProps, this.props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {props} = this;\n\n    return nextProps.conversation !== props.conversation\n      || nextProps.flags !== props.flags\n      || nextProps.indicators !== props.indicators\n      || nextProps.share !== props.share\n      || nextProps.user !== props.user\n      || nextProps.widgetMessage !== props.widgetMessage\n      || nextProps.activity !== props.activity\n      || nextProps.features !== props.features;\n  }\n\n  componentWillUpdate(nextProps) {\n    const {props} = this;\n\n    if (this.activityList\n      && nextProps.activityCount !== props.activityCount) {\n      this.scrollHeight = this.activityList.getScrollHeight();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      props,\n      activityList\n    } = this;\n    const {formatMessage} = this.props.intl;\n\n    fetchMoreActivitiesIfNecessary(props, activityList);\n\n    if (activityList) {\n      const {\n        activityCount,\n        firstActivity\n      } = props;\n      let objectType;\n      const prevActivitiesCount = prevProps.activityCount;\n      const previousFirstActivity = prevProps.firstActivity;\n      const lastActivityFromPrev = prevProps.lastActivity;\n      const lastActivityFromThis = props.lastActivity;\n\n      if (lastActivityFromThis) {\n        objectType = lastActivityFromThis.object ? lastActivityFromThis.object.objectType : undefined;\n      }\n\n      // If new activity comes in\n      if (lastActivityFromPrev\n        && lastActivityFromThis\n        && activityCount !== prevActivitiesCount\n        && lastActivityFromPrev.id !== lastActivityFromThis.id\n        && props.currentUser.id !== lastActivityFromThis.actor.id\n        && objectType !== 'locusSessionSummary'\n      ) {\n        // Send notification of new message\n        const avatars = props.avatar.get('items');\n        let cardsLength = 0;\n        let message;\n\n        if (lastActivityFromThis.object) {\n          message = lastActivityFromThis.object.displayName;\n\n          if (lastActivityFromThis.object.cards && lastActivityFromThis.object.cards.length > 0) {\n            cardsLength = lastActivityFromThis.object.cards.length;\n            const sharedCardsNotificationMessage = formatMessage(messages.sharedCards, {cardsLength});\n\n            if (lastActivityFromThis.verb === API_ACTIVITY_VERB.POST) {\n              message = sharedCardsNotificationMessage;\n            }\n            else if (lastActivityFromThis.verb === API_ACTIVITY_VERB.SHARE && lastActivityFromThis.object.files\n              && lastActivityFromThis.object.files.items\n              && lastActivityFromThis.object.contentCategory === ACTIVITY_OBJECT_CONTENT_CATEGORY_IMAGES) {\n              const cardImagesLength\n            = lastActivityFromThis.object.files.items.filter((item) => item.type === CARD_CONTAINS_IMAGE).length;\n              const itemsLength = lastActivityFromThis.object.files.items.length;\n              const sharedPhotosNotificationMessage\n            = formatMessage(messages.sharedPhotos, {imagesLength: itemsLength - cardImagesLength});\n\n              message\n            = cardImagesLength === itemsLength\n                  ? sharedCardsNotificationMessage\n                  : sharedPhotosNotificationMessage;\n            }\n          }\n        }\n        const details = {\n          username: lastActivityFromThis.actor.displayName,\n          message,\n          avatar: avatars.get(lastActivityFromThis.actor.id),\n          alertType: lastActivityFromThis.alertType\n        };\n\n        props.createNotification(lastActivityFromThis.id, details);\n      }\n      this.updateScroll(firstActivity, previousFirstActivity, prevProps.widgetMessage.get('scrollPosition').scrollTop);\n\n      if (MessageWidget.shouldScrollToBottom(props, prevProps)) {\n        activityList.scrollToBottom();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.unsubscribeFromPresenceUpdates(this.props.participants.map((p) => p.id), this.props.sparkInstance);\n  }\n\n  /**\n   * Processes the activities and fetches avatars for users\n   * that have not been fetched yet\n   *\n   * @param {Object} props\n   *\n   */\n  static getAvatarsFromActivityActors(props) {\n    const {\n      sparkInstance\n    } = props;\n    const participants = filter(props.activities, 'actor').map((activity) => activity.actor.id);\n\n    if (participants.length === 0) {\n      return;\n    }\n    props.fetchAvatarsForUsers(participants, sparkInstance);\n  }\n\n  /**\n   * Store activity list from child component\n   *\n   * @param {Object} ref\n   * @returns {undefined}\n   */\n  @autobind\n  getActivityList(ref) {\n    this.activityList = ref;\n  }\n\n  /**\n   * Once a conversation has been established, setup\n   * actions need to happen for app state\n   *\n   * @param {any} conversation\n   * @param {any} nextProps\n   *\n   */\n  setupConversationActions(conversation, nextProps) {\n    const {\n      flags, sparkInstance, space, widgetMessage, conversationId\n    } = nextProps;\n    const {props} = this;\n\n    if (!widgetMessage.get('isListeningToActivity')) {\n      this.listenToNewActivity(space, sparkInstance);\n    }\n    if (!widgetMessage.get('isListeningToTyping')) {\n      this.listenToTypingEvents(conversationId, sparkInstance);\n    }\n    if (flags && !flags.getIn(['status', 'hasFetched']) && !flags.getIn(['status', 'isFetching'])) {\n      nextProps.fetchFlags(sparkInstance);\n    }\n    // We only want to fetch avatars when a new activity is seen\n    const {activityCount} = nextProps;\n    const prevActivitiesCount = props.activityCount;\n\n    if (activityCount && activityCount !== prevActivitiesCount) {\n      MessageWidget.getAvatarsFromActivityActors(nextProps);\n    }\n    if (nextProps.participants) {\n      const userIds = nextProps.participants.map((p) => p.id);\n\n      this.props.subscribeToPresenceUpdates(userIds, sparkInstance);\n    }\n    if (!widgetMessage.get('isListeningToBufferState')) {\n      this.listenToBufferState(conversation.get('url'), sparkInstance);\n    }\n  }\n\n\n  /**\n   * Update scroll position when activity list changes\n   * @param {object} firstActivity\n   * @param {object} previousFirstActivity\n   * @param {number} prevScrollTop\n   */\n  updateScroll(firstActivity, previousFirstActivity, prevScrollTop) {\n    const {activityList} = this;\n\n    MessageWidget.getAvatarsFromActivityActors(this.props);\n    if (firstActivity && previousFirstActivity && firstActivity.id !== previousFirstActivity.id) {\n      activityList.setScrollTop(activityList.getScrollHeight() - this.scrollHeight + prevScrollTop);\n    }\n  }\n\n  /**\n   * Attempts to fetch and establish a conversation\n   *\n   * @param {object} props\n   * @param {object} prevProps\n   *\n   * @memberOf MessageWidget\n   *\n   */\n  establishConversation(props, prevProps) {\n    const {\n      destination,\n      sparkInstance,\n      sparkState,\n      conversation,\n      conversationId\n    } = props;\n\n    const {\n      authenticated,\n      registered\n    } = sparkState;\n\n    // Check if Spark instance and connections have been established\n    if (sparkInstance && authenticated) {\n      // Check if destination has changed\n      if (\n        destination && prevProps && prevProps.destination &&\n        (destination.id !== prevProps.destination.id || destination.type !== prevProps.destination.type)\n      ) {\n        props.resetConversation();\n        props.resetWidgetState();\n\n        return;\n      }\n\n      // Check if conversation has been retrieved\n      if (registered && !conversationId && !conversation.getIn(['status', 'isFetching'])) {\n        if (destination.type === destinationTypes.SPACEID) {\n          props.getConversation(destination.id, sparkInstance);\n        }\n        if (destination.type === destinationTypes.EMAIL || destination.type === destinationTypes.USERID) {\n          props.createConversation([destination.id], sparkInstance);\n        }\n      }\n    }\n    // Setup once we have a conversation\n    if (conversationId) {\n      this.setupConversationActions(conversation, props);\n    }\n  }\n\n  /**\n   * Setup listeners for typing events\n   *\n   * @param {String} conversationId\n   * @param {Object} sparkInstance\n   * @returns {undefined}\n   */\n  listenToTypingEvents(conversationId, sparkInstance) {\n    const {props} = this;\n\n    props.updateWidgetState({isListeningToTyping: true});\n    sparkInstance.internal.mercury.on('event:status.start_typing', (event) => {\n      if (event.data.conversationId === conversationId) {\n        props.setTyping(event.data.actor.id, true);\n      }\n    });\n\n    sparkInstance.internal.mercury.on('event:status.stop_typing', (event) => {\n      if (event.data.conversationId === conversationId) {\n        props.setTyping(event.data.actor.id, false);\n      }\n    });\n  }\n\n  /**\n   * Setup listeners for new activities\n   *\n   * @param {String} space\n   * @param {Object} sparkInstance\n   * @returns {undefined}\n   */\n  listenToNewActivity(space, sparkInstance) {\n    const {props} = this;\n    const {handleEvent} = this;\n    const {currentUser} = props;\n\n    if (currentUser) {\n      props.updateWidgetState({isListeningToActivity: true});\n      sparkInstance.internal.mercury.on('event:conversation.activity', (event) => {\n        handleConversationActivityEvent(event, this.eventNames, currentUser.id, space, {\n          handleEvent,\n          removeInflightActivity: props.removeInflightActivity,\n          updateHasNewMessage: props.updateHasNewMessage\n        });\n      });\n    }\n  }\n\n  /**\n   * Listens for mercury buffer state events and\n   * fires off actions based on them\n   * @param {string} conversationUrl\n   * @param {object} sparkInstance\n   * @returns {undefined}\n   */\n  @autobind\n  listenToBufferState(conversationUrl, sparkInstance) {\n    const {props} = this;\n\n    props.updateWidgetState({isListeningToBufferState: true});\n\n    sparkInstance.internal.mercury.on('event:mercury.buffer_state', (event) => {\n      const {\n        lastActivity\n      } = props;\n\n      if (has(event, 'data.bufferState.conversation') && event.data.bufferState.conversation === 'UNKNOWN') {\n        // Mercury does not contain enough information about the conversation, refetch\n        const sinceDate = lastActivity && lastActivity.published || null;\n\n        props.loadMissingActivities(conversationUrl, sinceDate, sparkInstance);\n      }\n    });\n  }\n\n  @autobind\n  acknowledgeLastActivity() {\n    const {\n      props\n    } = this;\n    const {\n      conversation,\n      hasAcknowledgementsDisabled,\n      lastActivity,\n      sparkInstance\n    } = props;\n\n    if (conversation.get('lastAcknowledgedActivityId') !== lastActivity.id) {\n      if (!hasAcknowledgementsDisabled) {\n        props.acknowledgeActivityOnServer(conversation, lastActivity, sparkInstance);\n      }\n    }\n  }\n\n  /**\n   * Scroll activityList to bottom\n   *\n   * @returns {undefined}\n   */\n  @autobind\n  handleScrollToBottom() {\n    this.activityList.scrollToBottom();\n  }\n\n  /**\n   * Additional actions after submitting a message\n   *\n   * @returns {undefined}\n   */\n  @autobind\n  handleMessageSubmit() {\n    this.activityList.scrollToBottom();\n  }\n\n  /**\n   * Event handler in case one isn't provided\n   * @param {string} name\n   * @param {object} data\n   */\n  @autobind\n  handleEvent(name, data) {\n    const {onEvent} = this.props;\n\n    if (typeof onEvent === 'function') {\n      this.props.onEvent(name, data);\n    }\n  }\n\n  @autobind\n  handleMouseMove() {\n    const {\n      activityList\n    } = this;\n\n    if (activityList.isScrolledToBottom()) {\n      this.acknowledgeLastActivity();\n    }\n  }\n\n  /**\n   * Flag or unflag activity by Id\n   *\n   * @param {String} activityId\n   * @returns {undefined}\n   */\n  @autobind\n  handleActivityFlag(activityId) {\n    const {props} = this;\n    const {\n      activities,\n      flags,\n      sparkInstance\n    } = props;\n    const activity = Object.values(activities).find((act) => act.id === activityId);\n\n    if (activity) {\n      const foundFlag = flags.getIn(['flags', activity.url]);\n\n      if (foundFlag && !foundFlag.get('isInFlight')) {\n        props.removeFlagFromServer(foundFlag, sparkInstance);\n      }\n      else if (!foundFlag) {\n        props.flagActivity(activity, sparkInstance);\n      }\n    }\n  }\n\n  /**\n   * Displays modal confirming activity delete\n   *\n   * @param {String} activityId\n   * @returns {undefined}\n   */\n  @autobind\n  handleActivityDelete(activityId) {\n    const {props} = this;\n\n    props.confirmDeleteActivity(activityId);\n  }\n\n  /**\n   * Does the actual deletion of the activity after confirmation modal\n   *\n   * @returns {undefined}\n   */\n  @autobind\n  handleConfirmActivityDelete() {\n    const {props} = this;\n    const {\n      activities,\n      conversation,\n      sparkInstance,\n      widgetMessage\n    } = props;\n\n    const activityId = widgetMessage.get('deletingActivityId');\n\n    const activity = Object.values(activities).find((act) => act.id === activityId);\n\n    if (activity) {\n      props.deleteActivityAndDismiss(conversation, activity, sparkInstance);\n    }\n    else {\n      props.hideDeleteModal();\n    }\n  }\n\n\n  /**\n   * Dismisses the confirmation modal\n   *\n   * @returns {undefined}\n   */\n  @autobind\n  handleCancelActivityDelete() {\n    this.props.hideDeleteModal();\n  }\n\n  @autobind\n  handleActivityRetry(activityId) {\n    const {props} = this;\n    const {\n      activity,\n      sparkInstance\n    } = this.props;\n    const failedActivity = activity.getIn(['activityFailures', activityId]);\n\n    return props.retryFailedActivity(failedActivity, sparkInstance);\n  }\n\n  /**\n   * Adds dropped file into activity store\n   *\n   * @param {array} acceptedFiles\n   * @returns {undefined}\n   */\n  @autobind\n  handleFileDrop(acceptedFiles) {\n    const {props} = this;\n    const {\n      activity,\n      conversation,\n      sparkInstance\n    } = props;\n    const files = constructFiles(acceptedFiles);\n\n    if (files.length && checkMaxFileSize(files, props.addError, props.removeError)) {\n      props.addFiles(conversation, activity, files, sparkInstance);\n    }\n  }\n\n  /**\n   * Perform actions when activity list scrolls\n   *\n   * @returns {undefined}\n   */\n  @autobind\n  handleScroll() {\n    const {\n      props,\n      activityList\n    } = this;\n\n    if (activityList.isScrolledToBottom()) {\n      props.setScrolledUp(false);\n      if (document.hasFocus()) {\n        this.acknowledgeLastActivity();\n      }\n    }\n    else {\n      props.setScrolledUp(true);\n    }\n\n    fetchMoreActivitiesIfNecessary(props, activityList);\n  }\n\n  /**\n   * Renders the conversation area of the widget\n   *\n   * @returns {object}\n   */\n  render() {\n    const {props} = this;\n    const {\n      conversation,\n      conversationId,\n      composerActions,\n      sparkInstance,\n      currentUser,\n      muteNotifications,\n      widgetMessage,\n      features\n    } = props;\n    const {formatMessage} = this.props.intl;\n\n    if (conversation && conversationId) {\n      const isLoadingHistoryUp = conversation.getIn(['status', 'isLoadingHistoryUp']);\n      const displayName = conversation.get('displayName');\n\n      return (\n        <Dropzone\n          activeClassName={styles.activeDropzone}\n          className={styles.dropzone}\n          disabled={!composerActions.attachFiles}\n          disableClick\n          disablePreview\n          onDrop={this.handleFileDrop}\n        >\n          <div className={classNames('webex-widget-message-main-area', styles.mainArea)} onMouseMove={this.handleMouseMove}>\n            <div className={classNames('webex-activity-list-wrapper', styles.activityListWrapper)}>\n              <ScrollingActivity\n                isLoadingHistoryUp={isLoadingHistoryUp}\n                onScroll={this.handleScroll}\n                ref={this.getActivityList}\n              >\n                {\n                  currentUser &&\n                  <ActivityList\n                    newMessagesMessage={formatMessage(messages.newMessagesMessage)}\n                    onActivityDelete={this.handleActivityDelete}\n                    onActivityFlag={this.handleActivityFlag}\n                    onActivityRetry={this.handleActivityRetry}\n                    features={features}\n                    sdkInstance={sparkInstance}\n                    intl={this.props.intl}\n                  />\n                }\n                <div className={classNames('webex-indicators', styles.indicators)}><ReadReceipts /></div>\n              </ScrollingActivity>\n              {\n                widgetMessage.get('showScrollToBottomButton') &&\n                <div className={classNames('webex-scroll-to-bottom', styles.scrollToBottom)}>\n                  <Button\n                    ariaLabel={formatMessage(messages.scrollToBottom)}\n                    circle\n                    color={widgetMessage.get('hasNewMessage') ? 'blue' : ''}\n                    onClick={this.handleScrollToBottom}\n                    size={32}\n                  >\n                    <Icon\n                      color={widgetMessage.get('hasNewMessage') ? 'white' : ''}\n                      name=\"icon-arrow-down_16\"\n                    />\n                  </Button>\n                </div>\n              }\n            </div>\n            <div className={classNames('webex-message-composer-wrapper', styles.messageComposerWrapper)}>\n              <MessageComposer\n                composerActions={composerActions}\n                conversation={conversation}\n                onSubmit={this.handleMessageSubmit}\n                placeholder={formatMessage(messages.messageComposerPlaceholder, {displayName})}\n                showMentions\n                sparkInstance={sparkInstance}\n              />\n            </div>\n          </div>\n          {\n            widgetMessage.get('showAlertModal') &&\n            <ConfirmationModal\n              actionButtonLabel={formatMessage(messages.deleteButtonLabel)}\n              body={formatMessage(messages.deleteAlertBody)}\n              cancelButtonLabel={formatMessage(messages.cancelButtonLabel)}\n              onClickActionButton={this.handleConfirmActivityDelete}\n              onClickCancelButton={this.handleCancelActivityDelete}\n              title={formatMessage(messages.deleteAlertTitle)}\n            />\n          }\n          <Notifications onEvent={this.handleEvent} isMuted={muteNotifications} />\n          <Cover message={formatMessage(messages.dropzoneCoverMessage)} />\n        </Dropzone>\n      );\n    }\n    if (conversation && conversation.getIn(['status', 'error'])) {\n      return (\n        <ErrorDisplay\n          secondaryTitle={conversation.getIn(['status', 'error', 'description'])}\n          title={formatMessage(messages.errorConversation)}\n        />\n      );\n    }\n\n    return <LoadingScreen />;\n  }\n}\n\nMessageWidget.propTypes = {\n  ...ownPropTypes,\n  ...injectedPropTypes\n};\n\nconst ConnectedMessageWidget = wrapConversationMercury(MessageWidget);\n\nexport default compose(\n  connect(\n    getMessageWidgetProps,\n    (dispatch) => bindActionCreators({\n      acknowledgeActivityOnServer,\n      addFiles,\n      confirmDeleteActivity,\n      createConversation,\n      createNotification,\n      deleteActivityAndDismiss,\n      fetchAvatarsForUsers,\n      fetchFlags,\n      flagActivity,\n      getConversation,\n      hideDeleteModal,\n      loadMissingActivities,\n      loadPreviousMessages,\n      removeFlagFromServer,\n      removeInflightActivity,\n      resetConversation,\n      resetWidgetState,\n      retryFailedActivity,\n      setScrollPosition,\n      setScrolledUp,\n      setTyping,\n      showScrollToBottomButton,\n      subscribeToPresenceUpdates,\n      unsubscribeFromPresenceUpdates,\n      updateHasNewMessage,\n      updateWidgetState\n    }, dispatch)\n  ),\n  ...enhancers\n)(ConnectedMessageWidget);\n","export default {\n  'ciscospark.container.message.deleteAlert.body': 'Are you sure you want to delete this message?',\n  'ciscospark.container.message.deleteAlert.title': 'Delete',\n  'ciscospark.container.message.deleteAlert.cancelButton': 'Cancel',\n  'ciscospark.container.message.messageComposer.placeholder': 'Send a message to {displayName}',\n  'ciscospark.systemMessage.conversation.youCreate': 'You created this conversation.',\n  'ciscospark.systemMessage.conversation.someoneCreate': '{name} created this conversation.',\n  'ciscospark.systemMessage.message.youDelete': 'You deleted your message.',\n  'ciscospark.systemMessage.message.someoneDelete': '{name} deleted their own message.',\n  'ciscospark.datetime.today': 'Today',\n  'ciscospark.datetime.yesterday': 'Yesterday',\n  'ciscospark.container.message.scrollToBottom': 'Click to scroll to latest messages',\n  'ciscospark.container.message.newMessages.message': 'NEW MESSAGES',\n  'ciscospark.container.message.dropzone.coverMessage': 'Drag and drop your files here',\n  'ciscospark.container.message.sharedCards': '{cardsLength, plural, =1 {Responded with a card} other {Responded with # cards}}',\n  'ciscospark.container.message.sharedPhotos': '{imagesLength, plural, =1 {Shared a photo} other {Shared # photos}}',\n  'ciscospark.container.message.sending': 'Sending...',\n  'ciscospark.container.message.sent': 'Sent',\n  'ciscospark.container.message.unableToSendYourRequest': 'Unable to send your request'\n};\n","import {compose} from 'recompose';\nimport {constructWebexEnhancer, withIntl} from '@webex/webex-widget-base';\n\nimport {reducers} from './reducer';\nimport ConnectedMessage from './container';\n\nimport messages from './translations/en';\n\nexport {reducers};\n\nexport const destinationTypes = {\n  EMAIL: 'email',\n  USERID: 'userId',\n  SPACEID: 'spaceId'\n};\n\nexport default compose(\n  constructWebexEnhancer({\n    name: 'message',\n    reducers\n  }),\n  withIntl({locale: 'en', messages})\n)(ConnectedMessage);\n"],"names":["UPDATE_WIDGET_STATE","SET_SCROLL_POSITION","RESET_WIDGET_STATE","updateWidgetState","state","type","payload","setScrollPosition","scrollPosition","resetWidgetState","showScrollToBottomButton","isVisible","dispatch","setScrolledUp","isScrolledUp","getState","widgetMessage","get","hasNewMessage","hasScrolledUp","updateHasNewMessage","hasNew","confirmDeleteActivity","activityId","deletingActivityId","showAlertModal","hideDeleteModal","deleteActivityAndDismiss","conversation","activity","spark","deleteActivity","then","initialState","fromJS","isListeningToActivity","isListeningToBufferState","isListeningToTyping","hasFetchedAdaptiveCardFeature","reducer","action","merge","set","reducers","avatar","flags","indicators","notifications","share","messageComposer","features","presence","combineReducers","getSparkInstance","props","sparkInstance","getSparkState","getConversation","getParticipants","getConversationThreadActivities","getConversationNonThreadActivities","getActivities","createSelector","getActivitiesFromThreadAndNonThreadCollections","getConversationOldestPublishedDate","getUsers","users","getFeatures","constructSpace","space","lastActivityTimestamp","tags","id","includes","published","isLocked","constructOneOnOne","currentUser","thisSpace","currentUserEmail","email","otherUsers","find","p","toUser","name","constructGroup","team","teamName","teamColor","teamId","getSpace","getIn","getActivitiesStatus","toJS","getMessageWidgetProps","sparkState","oldestPublishedDate","participants","activities","activitiesStatus","activityCount","count","lastActivity","last","firstActivity","first","conversationId","getFeature","FEATURES_DEVELOPER","FEATURES_WIDGET_ADAPTIVE_CARD","setup","authenticated","registered","hasError","compose","connect","bindActionCreators","connectToMercury","lifecycle","componentWillMount","shouldComponentUpdate","nextProps","componentWillReceiveProps","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","defineMessages","newMessagesMessage","defaultMessage","deleteAlertTitle","deleteAlertBody","deleteButtonLabel","cancelButtonLabel","messageComposerPlaceholder","dropzoneCoverMessage","errorConversation","scrollToBottom","sharedCards","sharedPhotos","eventNames","SPACES_READ","SPACES_UNREAD","MESSAGES_CREATED","constructMessagesEventData","roomType","target","files","toPersonEmail","toPersonId","emailAddress","constructHydraId","hydraTypes","PEOPLE","mentionedPeople","object","mentions","items","length","map","people","personId","actor","actorId","actorName","displayName","MESSAGE","roomId","ROOM","text","html","content","personEmail","created","constructRoomsEventData","title","TEAM","handleConversationActivityEvent","event","currentUserId","actions","data","isSelf","API_ACTIVITY_TYPE","REPLY","verb","API_ACTIVITY_VERB","ACKNOWLEDGE","objectType","handleEvent","SHARE","POST","removeInflightActivity","clientTempId","injectedPropTypes","PropTypes","isRequired","shape","isLoadingHistoryUp","bool","composerActions","attachFiles","acknowledgeActivityOnServer","func","addFiles","createConversation","createNotification","fetchAvatarsForUsers","fetchFlags","flagActivity","loadMissingActivities","loadPreviousMessages","string","removeFlagFromServer","retryFailedActivity","setTyping","array","ownPropTypes","destination","oneOf","hasAcknowledgementsDisabled","muteNotifications","onEvent","fetchMoreActivitiesIfNecessary","lpm","ssp","activityList","isScrolledToTop","scrollTop","getScrollTop","MessageWidget","Component","shouldScrollToBottom","prevProps","prevActivitiesCount","constructor","handleScroll","throttle","handleMouseMove","debounce","leading","trailing","componentDidMount","Object","assign","defaultEventNames","establishConversation","user","componentWillUpdate","scrollHeight","getScrollHeight","componentDidUpdate","formatMessage","intl","previousFirstActivity","lastActivityFromPrev","lastActivityFromThis","undefined","avatars","cardsLength","message","cards","sharedCardsNotificationMessage","messages","contentCategory","ACTIVITY_OBJECT_CONTENT_CATEGORY_IMAGES","cardImagesLength","filter","item","CARD_CONTAINS_IMAGE","itemsLength","sharedPhotosNotificationMessage","imagesLength","details","username","alertType","updateScroll","componentWillUnmount","unsubscribeFromPresenceUpdates","getAvatarsFromActivityActors","getActivityList","setupConversationActions","listenToNewActivity","listenToTypingEvents","userIds","subscribeToPresenceUpdates","listenToBufferState","prevScrollTop","setScrollTop","resetConversation","destinationTypes","SPACEID","EMAIL","USERID","internal","mercury","on","conversationUrl","has","bufferState","sinceDate","acknowledgeLastActivity","handleScrollToBottom","handleMessageSubmit","isScrolledToBottom","handleActivityFlag","values","act","foundFlag","url","handleActivityDelete","handleConfirmActivityDelete","handleCancelActivityDelete","handleActivityRetry","failedActivity","handleFileDrop","acceptedFiles","constructFiles","checkMaxFileSize","addError","removeError","hasFocus","render","styles","activeDropzone","dropzone","classNames","mainArea","activityListWrapper","messageComposerWrapper","autobind","propTypes","ConnectedMessageWidget","wrapConversationMercury","enhancers","constructWebexEnhancer","withIntl","locale","ConnectedMessage"],"mappings":"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"}