{"version":3,"file":"index.js","sources":["../src/actions.js","../src/reducer.js"],"sourcesContent":["export const ADD_ERROR = 'errors/ADD_ERROR';\nexport const REMOVE_ERROR = 'errors/REMOVE_ERROR';\nexport const RESET_ERRORS = 'errors/RESET_ERRORS';\n\n/**\n * Creates an error to track\n * @param {Object} error\n * @param {String} error.actionTitle\n * @param {String} error.id\n * @param {String} error.displayTitle\n * @param {String} error.displaySubtitle\n * @param {Function} error.onAction\n * @param {Boolean} error.temporary\n * @param {String} error.code\n * @returns {Object}\n */\nexport function addError(error) {\n  return {\n    type: ADD_ERROR,\n    payload: {\n      error\n    }\n  };\n}\n\n/**\n * Removes an error with the given id\n *\n * @export\n * @param {string} errorId\n * @returns {object}\n */\nexport function removeError(errorId) {\n  return {\n    type: REMOVE_ERROR,\n    payload: {\n      errorId\n    }\n  };\n}\n\n/**\n * Resets errors back to the initial state\n *\n * @export\n * @returns {object}\n */\nexport function resetErrors() {\n  return {\n    type: RESET_ERRORS\n  };\n}\n","import {Map, OrderedMap} from 'immutable';\n\nimport {\n  ADD_ERROR,\n  REMOVE_ERROR,\n  RESET_ERRORS\n} from './actions';\n\nexport const initialState = new Map({\n  errors: new OrderedMap(),\n  hasError: false\n});\n\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_ERROR: {\n      const {error} = action.payload;\n\n      return state.setIn(['errors', error.id], error)\n        .set('hasError', true);\n    }\n    case REMOVE_ERROR: {\n      const {errorId} = action.payload;\n      const updatedState = state.deleteIn(['errors', errorId]);\n\n      if (updatedState.get('errors').size === 0) {\n        return updatedState.set('hasError', false);\n      }\n\n      return updatedState;\n    }\n    case RESET_ERRORS: {\n      return initialState;\n    }\n    default:\n      return state;\n  }\n}\n"],"names":["ADD_ERROR","REMOVE_ERROR","RESET_ERRORS","addError","error","type","payload","removeError","errorId","resetErrors","initialState","Map","errors","OrderedMap","hasError","reducer","state","action","setIn","id","set","updatedState","deleteIn","get","size"],"mappings":";;MAAaA,SAAS,GAAG;MACZC,YAAY,GAAG;MACfC,YAAY,GAAG;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEL,SADD;AAELM,IAAAA,OAAO,EAAE;AACPF,MAAAA;AADO;AAFJ,GAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASG,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAEJ,YADD;AAELK,IAAAA,OAAO,EAAE;AACPE,MAAAA;AADO;AAFJ,GAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,WAAT,GAAuB;AAC5B,SAAO;AACLJ,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD;;MC3CYQ,YAAY,GAAG,IAAIC,GAAJ,CAAQ;AAClCC,EAAAA,MAAM,EAAE,IAAIC,UAAJ,EAD0B;AAElCC,EAAAA,QAAQ,EAAE;AAFwB,CAAR;AAMb,SAASC,OAAT,CAAiBC,KAAK,GAAGN,YAAzB,EAAuCO,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKL,SAAL;AAAgB;AACd,cAAM;AAACI,UAAAA;AAAD,YAAUa,MAAM,CAACX,OAAvB;AAEA,eAAOU,KAAK,CAACE,KAAN,CAAY,CAAC,QAAD,EAAWd,KAAK,CAACe,EAAjB,CAAZ,EAAkCf,KAAlC,EACJgB,GADI,CACA,UADA,EACY,IADZ,CAAP;AAED;;AACD,SAAKnB,YAAL;AAAmB;AACjB,cAAM;AAACO,UAAAA;AAAD,YAAYS,MAAM,CAACX,OAAzB;AACA,cAAMe,YAAY,GAAGL,KAAK,CAACM,QAAN,CAAe,CAAC,QAAD,EAAWd,OAAX,CAAf,CAArB;;AAEA,YAAIa,YAAY,CAACE,GAAb,CAAiB,QAAjB,EAA2BC,IAA3B,KAAoC,CAAxC,EAA2C;AACzC,iBAAOH,YAAY,CAACD,GAAb,CAAiB,UAAjB,EAA6B,KAA7B,CAAP;AACD;;AAED,eAAOC,YAAP;AACD;;AACD,SAAKnB,YAAL;AAAmB;AACjB,eAAOQ,YAAP;AACD;;AACD;AACE,aAAOM,KAAP;AArBJ;AAuBD;;;;;"}