import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-component-list-separator__separator__LnNlcGFy {\n  display: flex;\n  padding-top: 17px;\n  overflow: hidden;\n  font-size: 13px;\n  color: #d2d3d4;\n  white-space: nowrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.react-component-list-separator__separator__LnNlcGFy.react-component-list-separator__informative__LnNlcGFy {\n  color: #049fd9;\n  text-transform: uppercase;\n}\n\n.react-component-list-separator__separatorText__LnNlcGFy {\n  position: relative;\n  display: inline-block;\n  font: CiscoSans, 'Helvetica Neue', Arial;\n  font-weight: 200;\n  line-height: 1.5em;\n  letter-spacing: 0.015em;\n  color: #858993;\n}\n\n.react-component-list-separator__separatorText__LnNlcGFy::before,\n.react-component-list-separator__separatorText__LnNlcGFy::after {\n  position: absolute;\n  top: 50%;\n  width: 999px;\n  height: 1px;\n  background-color: #d2d3d4;\n  content: '';\n}\n\n.react-component-list-separator__separatorText__LnNlcGFy::before {\n  right: 100%;\n  margin-right: 20px;\n}\n\n.react-component-list-separator__separatorText__LnNlcGFy::after {\n  left: 100%;\n  margin-left: 20px;\n}\n\n.react-component-list-separator__separatorText__LnNlcGFy.react-component-list-separator__informative__LnNlcGFy::before,\n.react-component-list-separator__separatorText__LnNlcGFy.react-component-list-separator__informative__LnNlcGFy::after {\n  background-color: #049fd9;\n}\n";
var styles = {"separator":"react-component-list-separator__separator__LnNlcGFy","informative":"react-component-list-separator__informative__LnNlcGFy","separatorText":"react-component-list-separator__separatorText__LnNlcGFy"};
styleInject(css_248z);

const propTypes = {
  isInformative: PropTypes.bool,
  primaryText: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired
};
const defaultProps = {
  isInformative: false
};

function ListSeparator({
  isInformative,
  primaryText
}) {
  const mainStyles = ['separator', styles.separator];
  const textStyles = ['separator-text', styles.separatorText];
  const informativeClass = 'informative';

  if (isInformative) {
    mainStyles.push(informativeClass);
    mainStyles.push(styles[informativeClass]);
    textStyles.push(informativeClass);
    textStyles.push(styles[informativeClass]);
  }

  return /*#__PURE__*/React.createElement("div", {
    className: classNames(mainStyles)
  }, /*#__PURE__*/React.createElement("p", {
    className: classNames(textStyles)
  }, primaryText));
}

ListSeparator.propTypes = propTypes;
ListSeparator.defaultProps = defaultProps;

export default ListSeparator;
//# sourceMappingURL=index.js.map
