import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import Icon, { ICONS } from '@webex/react-component-icon';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-component-avatar__avatar__LmF2YXRh {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  background-size: cover;\n  border-radius: 50%;\n  align-items: center;\n}\n\n.react-component-avatar__avatarLetter__LmF2YXRh {\n  font-weight: 300;\n  line-height: 185%; /* Not 200 because CiscoSans font */\n  color: #fff;\n  text-align: center;\n  background-color: #7d7e7f;\n}\n\n.react-component-avatar__avatarColorLetter__LmF2YXRh {\n  color: #fff;\n  background-color: #fff;\n}\n\n.react-component-avatar__avatarLetter__LmF2YXRh > span {\n  flex: 1 1 auto;\n}\n\n.react-component-avatar__avatarSelf__LmF2YXRh {\n  color: #04c9ef;\n}\n";
var styles = {"avatar":"react-component-avatar__avatar__LmF2YXRh","avatarLetter":"react-component-avatar__avatarLetter__LmF2YXRh","avatarColorLetter":"react-component-avatar__avatarColorLetter__LmF2YXRh","avatarSelf":"react-component-avatar__avatarSelf__LmF2YXRh"};
styleInject(css_248z);

const propTypes = {
  baseColor: PropTypes.string,
  image: PropTypes.string,
  isSelfAvatar: PropTypes.bool,
  name: PropTypes.string
};
const defaultProps = {
  baseColor: '',
  image: '',
  isSelfAvatar: false,
  name: ''
};

function Avatar({
  baseColor,
  name,
  image,
  isSelfAvatar
}) {
  let avatarClass, avatarContents;
  let backgroundStyle = {};
  const letter = name ? name.replace(/[^0-9a-z]/gi, '').substr(0, 1).toUpperCase() : undefined;

  if (isSelfAvatar) {
    avatarContents = /*#__PURE__*/React.createElement("span", {
      className: classNames('webex-avatar-self', styles.avatarSelf)
    }, /*#__PURE__*/React.createElement(Icon, {
      color: "#04c9ef",
      type: ICONS.ICON_TYPE_MESSAGE
    }));
  } else if (image) {
    backgroundStyle = {
      backgroundImage: `url('${image}')`
    };
  } else if (baseColor) {
    backgroundStyle.backgroundColor = baseColor;
    avatarClass = [styles.avatarColorLetter, styles.avatarLetter];
    avatarContents = /*#__PURE__*/React.createElement("span", null, letter);
  } else if (name) {
    avatarClass = styles.avatarLetter;
    avatarContents = /*#__PURE__*/React.createElement("span", null, letter);
  }

  return /*#__PURE__*/React.createElement("div", {
    className: classNames('webex-avatar', styles.avatar, avatarClass),
    style: backgroundStyle
  }, avatarContents);
}

Avatar.propTypes = propTypes;
Avatar.defaultProps = defaultProps;

export default Avatar;
//# sourceMappingURL=index.js.map
