import React from 'react';
import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';
import classnames from 'classnames';
import { getAdaptiveCard, SUCCESS, FAILURE, API_ACTIVITY_VERB, CARD_CONTAINS_IMAGE, replaceIndexWithBlobURL } from '@webex/react-component-utils';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { handleAdaptiveCardSubmitAction } from '@webex/redux-module-conversation';
import { defineMessages } from 'react-intl';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$1 = "@import '~@momentum-ui/core/scss/momentum-ui-components';\n@import '~@webex/react-component-activity-text/src/styles';\n\n.react-component-adaptive-card__activity-item--adaptive-card__QGltcG9y {\n  @extend .activityText ;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  border: 1px solid #D2D5D6;\n  border-radius: 4px;\n  max-width: 432px;\n  padding: 1px;\n  ol,ul{\n    margin: 1em 1.5em !important;\n  }\n}\n.react-component-adaptive-card__ac-container__QGltcG9y {\n  .react-component-adaptive-card__ac-actionSet__QGltcG9y {\n    margin-left: 4px;\n    flex-wrap: wrap;\n  }\n  .react-component-adaptive-card__ac-input-container__QGltcG9y > div:first-child {\n    width: 100%;\n  }\n\n  .react-component-adaptive-card__ac-pushButton__QGltcG9y {\n    &.react-component-adaptive-card__style-positive__QGltcG9y {\n      &.react-component-adaptive-card__style-default__QGltcG9y {\n        @extend .md-button, .md-button--white;\n        box-shadow: none;\n        height: 28px;\n        padding-bottom: 0px;\n        padding-top: 0px;\n        padding-left: 16px;\n        padding-right: 16px;\n        color: #1B8728;\n        border: 1px solid #1B8728;\n        margin-top: 4px;\n        margin-bottom: 8px;\n        &.react-component-adaptive-card__expandable__QGltcG9y {\n          @extend .icon-arrow-down_12;\n\n          flex-direction: row-reverse;\n          &:before {\n            font-family: 'momentum-ui-icons';\n            margin: auto 0px auto 6px;\n          }\n          &.react-component-adaptive-card__expanded__QGltcG9y {\n            @extend .md-button:active;\n            color: #FFFFFF;\n            background-color: #196323;\n            @extend .icon-arrow-up_12;\n          }\n        }\n      }\n    }\n    &.react-component-adaptive-card__style-positive__QGltcG9y {\n      &.react-component-adaptive-card__style-default__QGltcG9y:hover {\n        color: #FFFFFF;\n        background-color: #1B8728;\n      }\n    }\n    &.react-component-adaptive-card__style-positive__QGltcG9y {\n      &.react-component-adaptive-card__style-default__QGltcG9y:disabled {\n        color: #929596;\n        background-color: #E6E8E8;\n        border: none;\n      }\n    }\n    &.react-component-adaptive-card__style-destructive__QGltcG9y {\n      &.react-component-adaptive-card__style-default__QGltcG9y {\n        @extend .md-button, .md-button--white;\n        box-shadow: none;\n        height: 28px;\n        padding-bottom: 0px;\n        padding-top: 0px;\n        padding-left: 16px;\n        padding-right: 16px;\n        color: #D93829;\n        border: 1px solid #D93829;\n        margin-top: 4px;\n        margin-bottom: 8px;\n        &.react-component-adaptive-card__expandable__QGltcG9y {\n          @extend .icon-arrow-down_12;\n\n          flex-direction: row-reverse;\n          &:before {\n            font-family: 'momentum-ui-icons';\n            margin: auto 0px auto 6px;\n          }\n          &.react-component-adaptive-card__expanded__QGltcG9y {\n            @extend .md-button:active;\n            color: #FFFFFF;\n            background-color: #A12C23;\n            @extend .icon-arrow-up_12;\n          }\n        }\n      }\n    }\n    &.react-component-adaptive-card__style-destructive__QGltcG9y {\n      &.react-component-adaptive-card__style-default__QGltcG9y:hover {\n        color: #FFFFFF;\n        background-color: #D93829;\n      }\n    }\n    &.react-component-adaptive-card__style-destructive__QGltcG9y {\n      &.react-component-adaptive-card__style-default__QGltcG9y:disabled {\n        color: #929596;\n        background-color: #E6E8E8;\n        border: none;\n      }\n    }\n    &.react-component-adaptive-card__style-default__QGltcG9y {\n      @extend .md-button, .md-button--white;\n      min-width:0px;\n      box-shadow: none;\n      height: 28px;\n      padding-bottom: 0px;\n      padding-top: 0px;\n      padding-left: 16px;\n      padding-right: 16px;\n      color: #007EA8;\n      border: 1px solid #007EA8;\n      margin-top: 4px;\n      margin-bottom: 8px;\n      &.react-component-adaptive-card__expandable__QGltcG9y {\n        @extend .icon-arrow-down_12;\n\n        flex-direction: row-reverse;\n        &:before {\n          font-family: 'momentum-ui-icons';\n          margin: auto 0px auto 6px;\n        }\n        &.react-component-adaptive-card__expanded__QGltcG9y {\n          @extend .md-button:active;\n          color: #FFFFFF;\n          background-color: #0A5E7D;\n          @extend .icon-arrow-up_12;\n        }\n      }\n    }\n    &.react-component-adaptive-card__style-default__QGltcG9y:hover {\n      color: #FFFFFF;\n      background-color: #007EA8;\n    }\n    &.react-component-adaptive-card__style-default__QGltcG9y:disabled {\n      color: #929596;\n      background-color: #E6E8E8;\n      border: none;\n    }\n  }\n\n  .react-component-adaptive-card__ac-textInput__QGltcG9y {\n    .react-component-adaptive-card__md-input__wrapper__QGltcG9y{\n      box-sizing: border-box;\n      display: block;\n      flex-grow: 1;\n      position: relative;\n      padding: 0;\n      .react-component-adaptive-card__md-input__after__QGltcG9y, .react-component-adaptive-card__md-input__before__QGltcG9y{\n        -webkit-box-sizing: inherit;\n        -moz-box-sizing: inherit;\n        box-sizing: inherit;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        align-items: center;\n        flex-flow: row nowrap;\n        position: absolute;\n        height: 100%;\n        top: 0;\n        width: 2.75rem\n      }\n      .react-component-adaptive-card__md-input__after__QGltcG9y{\n        right: 0;\n        left: auto;\n      }\n    }\n    .react-component-adaptive-card__md-input__QGltcG9y {\n      color: #535759;\n      background-color: #FFFFFF;\n      border: 1px solid #D2D5D6;\n    }\n    .react-component-adaptive-card__md-input__QGltcG9y:hover {\n      color: #535759;\n      background-color: #E6E8E8;\n      border: 1px solid #D2D5D6;\n    }\n    .react-component-adaptive-card__md-input__QGltcG9y:active {\n      color: #535759;\n      background-color: #D2D5D6;\n      border: 1px solid #B4B6B8;\n    }\n    .react-component-adaptive-card__md-input__QGltcG9y:disabled {\n      color: #D2D5D6;\n      background-color: #E6E8E8;\n      border: none;\n    }\n    .react-component-adaptive-card__md-input__QGltcG9y:focus {\n      color: #535759;\n      background-color: #FFFFFF;\n      border: 1px solid #1DC4F2;\n    }\n    .react-component-adaptive-card__md-input__QGltcG9y:read-only {\n      color: #171B1F;\n      background-color: #F2F4F5;\n      border: none;\n    }\n  }\n  .react-component-adaptive-card__md-select__QGltcG9y {\n    .react-component-adaptive-card__md-select__QGltcG9y > .react-component-adaptive-card__md-button--input__QGltcG9y .react-component-adaptive-card__md-select__label__QGltcG9y\n    .react-component-adaptive-card__md-button__QGltcG9y {\n      background-color: #FFFFFF;\n      color: #535759;\n      border: 1px solid #D2D5D6;\n      text-align:left;\n    }\n    .react-component-adaptive-card__md-button__QGltcG9y:hover {\n      background-color: #E6E8E8;\n      color: #535759;\n      border: 1px solid #D2D5D6;\n    }\n    .react-component-adaptive-card__md-button__QGltcG9y:active {\n      background-color: #D2D5D6;\n      color: #535759;\n      border: 1px solid #B4B6B8;\n    }\n    .react-component-adaptive-card__active__QGltcG9y {\n      background-color: #F2F4F5;\n      color: #171B1F;\n      border: 1px solid #B4B6B8;\n    }\n    .react-component-adaptive-card__md-button__QGltcG9y:disabled {\n      background-color: #E6E8E8;\n      color: #D2D5D6;\n      border: none;\n    }\n    .react-component-adaptive-card__md-button__children__QGltcG9y{\n      justify-content: left;\n    }\n    .react-component-adaptive-card__md-select__label__QGltcG9y{\n      width:100%;\n      display: flex;\n      -webkit-box-pack: justify;\n      justify-content: space-between;\n      align-content: center;\n      -webkit-box-align: center;\n      align-items: center;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n      flex-flow: row nowrap;\n      .react-component-adaptive-card__md-icon__QGltcG9y{\n        vertical-align: middle;\n      }\n    }\n    .react-component-adaptive-card__md-button__QGltcG9y {\n      background-color: #FFFFFF;\n      color: #535759;\n      border: 1px solid #D2D5D6;\n      text-align:left;\n      width:100%;\n      border-radius:4px;\n    }\n  }\n  .react-component-adaptive-card__md-list-item__QGltcG9y {\n    .react-component-adaptive-card__md-checkbox__QGltcG9y {\n      .react-component-adaptive-card__md-checkbox__label__QGltcG9y::before {\n        background-color: #E6E8E8;\n      }\n      .react-component-adaptive-card__md-checkbox__label__QGltcG9y {\n        color: #171B1F;\n      }\n    }\n  }\n  .react-component-adaptive-card__md-list-item__QGltcG9y:hover {\n    .react-component-adaptive-card__md-checkbox__label__QGltcG9y::before {\n      background-color: #D2D5D6;\n    }\n  }\n  .react-component-adaptive-card__md-list-item__QGltcG9y:active {\n    .react-component-adaptive-card__md-checkbox__label__QGltcG9y::before {\n      background-color: #B4B6B8;\n    }\n  }\n  .react-component-adaptive-card__ac-input__QGltcG9y {\n    margin-bottom: 0px;\n    .react-component-adaptive-card__md-input__QGltcG9y {\n      margin-bottom: 0px;\n      padding-right: 44px;\n    }\n    .react-component-adaptive-card__md-event-overlay__QGltcG9y {\n      position: static;\n      .react-component-adaptive-card__md-event-overlay__children__QGltcG9y {\n        position: static;\n        overflow-x: hidden;\n      }\n    }\n    button {\n      white-space: nowrap;\n      overflow: hidden;\n    }\n  }\n  .react-component-adaptive-card__ac-input-container__QGltcG9y {\n    margin-bottom: 0px;\n    .react-component-adaptive-card__ac-numberInput__QGltcG9y{\n      color: #535759;\n      background-color: #FFFFFF;\n      border: 1px solid #D2D5D6;\n      border-radius: 4px;\n      height: 36px;\n    }\n    .react-component-adaptive-card__ac-dateInput__QGltcG9y{\n      color: #535759;\n      background-color: #FFFFFF;\n      border: 1px solid #D2D5D6;\n      border-radius: 4px;\n      height: 36px;\n    }\n    .react-component-adaptive-card__ac-timeInput__QGltcG9y{\n      color: #535759;\n      background-color: #FFFFFF;\n      border: 1px solid #D2D5D6;\n      border-radius: 4px;\n      height: 36px;\n    }\n    .react-component-adaptive-card__md-input__QGltcG9y {\n      margin-bottom: 0px;\n      width:100%;\n    }\n    .react-component-adaptive-card__md-event-overlay__QGltcG9y {\n      position: static;\n      .react-component-adaptive-card__md-event-overlay__children__QGltcG9y {\n        position: static;\n      }\n    }\n    button {\n      white-space: nowrap;\n      overflow: hidden;\n    }\n  }\n  .react-component-adaptive-card__ac-image__QGltcG9y {\n    max-height: none !important;\n  }\n  .react-component-adaptive-card__ac-fact-value__QGltcG9y {\n    .react-component-adaptive-card__ac-textBlock__QGltcG9y {\n      word-wrap: anywhere !important;\n    }\n  }\n\n  .react-component-adaptive-card__ac-textBlock__QGltcG9y {\n    ol {\n      overflow: unset !important;\n    }\n  }\n}\n";
styleInject(css_248z$1);

var css_248z = ".react-component-adaptive-card__pendingStatusBox__LnBlbmRp {\n    line-height: 14px;\n  }\n  \n.react-component-adaptive-card__pendingStatusText__LnBlbmRp {\n    font-family: 'CiscoSansTT Light', 'Helvetica Neue', Arial;\n    font-size: 12px;\n    line-height: 20px;\n    letter-spacing: .3px;\n    color:#C2C2C2;\n  }\n    \n.react-component-adaptive-card__failedStatusBox__LnBlbmRp {\n    display: flex;\n    width: 300px;\n    height: 32px;\n    line-height: 32px;\n    border-radius: 4px;\n    background-color:#FFE1D9;\n    margin-top: 2px\n  }\n  \n.react-component-adaptive-card__failedErrorText__LnBlbmRp {\n    display: flex;\n    flex: 1 1 auto;\n    align-items: center;\n    font-family: 'CiscoSansTT Light', 'Helvetica Neue', Arial;\n    font-size: 12px;\n    line-height: 20px;\n    letter-spacing: .3px;\n    text-align: left;\n    color: #632926;\n    padding-left: 16px;\n  }";
var styles = {"pendingStatusBox":"react-component-adaptive-card__pendingStatusBox__LnBlbmRp","pendingStatusText":"react-component-adaptive-card__pendingStatusText__LnBlbmRp","failedStatusBox":"react-component-adaptive-card__failedStatusBox__LnBlbmRp","failedErrorText":"react-component-adaptive-card__failedErrorText__LnBlbmRp"};
styleInject(css_248z);

var messages = defineMessages({
  sending: {
    id: 'ciscospark.container.message.sending',
    defaultMessage: 'Sending...'
  },
  sent: {
    id: 'ciscospark.container.message.sent',
    defaultMessage: 'Sent'
  },
  unableToSendYourRequest: {
    id: 'ciscospark.container.message.UnabletoSendYourRequest',
    defaultMessage: 'Unable to send your request'
  }
});

class AdaptiveCard extends React.Component {
  constructor(props) {
    super(props);
    this.nodeElement = /*#__PURE__*/React.createRef();
    this.addChildNode = this.addChildNode.bind(this);
    this.handleSubmitAction = this.handleSubmitAction.bind(this);
    this.dismissStatusMessage = this.dismissStatusMessage.bind(this);
    this.setupState = this.setupState.bind(this);
    this.cards = this.props.cards;
    this.hasReplacedCard = false;
    this.parentActivityId = null;
    this.state = {
      childNodes: [],
      hasReplacedImagesInJSON: false,
      isCardActionClicked: false
    };
  }

  componentDidMount() {
    if (Object.prototype.hasOwnProperty.call(this, 'nodeElement') && Object.prototype.hasOwnProperty.call(this.nodeElement, 'current')) {
      this.nodeElement.current.appendChild(getAdaptiveCard(this.cards, this.props.displayName, this.props.sdkInstance, this.addChildNode, this.props.activityId, this.props.conversation, this.handleSubmitAction));
    }
  }

  componentDidUpdate(prevProps) {
    if (this.state.isCardActionClicked && (this.props.conversation.get('cardActionAcknowledgedState') === SUCCESS || this.props.conversation.get('cardActionAcknowledgedState') === FAILURE)) {
      this.dismissStatusMessage();
    }

    if (prevProps !== this.props) {
      if (this.props.verb === API_ACTIVITY_VERB.SHARE) {
        try {
          const decryptedURLs = this.props.items.filter(file => file.type === CARD_CONTAINS_IMAGE).map(file => {
            if (file.mimeType.includes('text/html')) {
              return '';
            }

            const thumbnail = file.mimeType === 'image/gif' ? this.props.share.getIn(['files', file.url]) : this.props.share.getIn(['files', file.image.url]);

            if (thumbnail) {
              const objectUrl = thumbnail.get('objectUrl');
              return objectUrl;
            }

            return undefined;
          });
          const cardsObject = JSON.parse(this.props.cards[0]);
          const undefinedUrls = decryptedURLs.filter(file => file === undefined);

          if (undefinedUrls.length === 0) {
            this.cards[0] = JSON.stringify(replaceIndexWithBlobURL(cardsObject, decryptedURLs));

            if (this.cards[0]) {
              this.setupState();
            }
          }
        } catch (error) {
          this.props.sdkInstance.logger.error('Unable render Adaptive Card', error.message);
        }
      }
    }
  }

  componentWillUnmount() {
    this.state.childNodes.forEach(childNode => {
      ReactDOM.unmountComponentAtNode(childNode);
    });
  }
  /**
   * set state to tohasReplacedImagesInJSON
   * @returns {void}
   */


  setupState() {
    this.setState({
      hasReplacedImagesInJSON: true
    });
  }
  /**
   * set state to maintain a list of all the DOM nodes
   * @param {object} childNode
   * @returns {void}
   */


  addChildNode(childNode) {
    this.setState(prevState => ({
      childNodes: [...prevState.childNodes, childNode]
    }));
  }
  /**
   * calls handleAdaptiveCardSubmitAction action when card action is performed
   * @param {string} url
   * @param {object} actionInput
   * @param {string} parentId
   * @param {HTMLElement} btnClicked
   * @returns {void}
   */


  handleSubmitAction(url, actionInput, parentId, btnClicked) {
    this.props.handleAdaptiveCardSubmitAction(url, actionInput, parentId, this.props.sdkInstance, btnClicked);
    this.setState({
      isCardActionClicked: true
    });
  }
  /**
   * method used to set the state variables to default state
   * @returns {void}
  */


  dismissStatusMessage() {
    setTimeout(() => {
      this.setState({
        isCardActionClicked: false
      });
    }, 2000);
  }

  render() {
    const activityItemMsgClass = classnames('activity-item--adaptive-card');
    const {
      formatMessage
    } = this.props.intl;

    if (this.state.hasReplacedImagesInJSON && !this.hasReplacedCard) {
      if (Object.prototype.hasOwnProperty.call(this, 'nodeElement') && Object.prototype.hasOwnProperty.call(this.nodeElement, 'current')) {
        this.nodeElement.current.replaceChild(getAdaptiveCard(this.cards, this.props.displayName, this.props.sdkInstance, this.addChildNode, this.props.activityId, this.props.conversation, this.handleSubmitAction), this.nodeElement.current.firstChild);
        this.hasReplacedCard = true;
      }
    }

    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
      ref: this.nodeElement,
      className: activityItemMsgClass
    }), this.state.isCardActionClicked && (this.props.conversation.get('cardActionAcknowledgedState') === FAILURE ? /*#__PURE__*/React.createElement("div", {
      className: classnames('failed-status-box', styles.failedStatusBox)
    }, /*#__PURE__*/React.createElement("span", {
      className: classnames('failed-error-text', styles.failedErrorText)
    }, formatMessage(messages.unableToSendYourRequest))) : /*#__PURE__*/React.createElement("p", {
      className: classnames('status-box', styles.pendingStatusBox)
    }, /*#__PURE__*/React.createElement("span", {
      className: classnames('status-text', styles.pendingStatusText)
    }, this.props.conversation.get('cardActionAcknowledgedState') === SUCCESS ? formatMessage(messages.sent) : formatMessage(messages.sending)))));
  }

}

const injectedPropTypes = {
  handleAdaptiveCardSubmitAction: PropTypes.func.isRequired
};
AdaptiveCard.propTypes = {
  cards: PropTypes.array,
  displayName: PropTypes.string,
  sdkInstance: PropTypes.object,
  verb: PropTypes.string,
  items: PropTypes.array,
  share: PropTypes.object,
  conversation: PropTypes.object,
  activityId: PropTypes.string,
  intl: PropTypes.object.isRequired,
  ...injectedPropTypes
};
AdaptiveCard.defaultProps = {
  cards: [],
  displayName: '',
  sdkInstance: {},
  verb: '',
  items: [],
  share: {},
  conversation: {},
  activityId: ''
};
var index = connect(state => ({
  conversation: state.conversation
}), dispatch => bindActionCreators({
  handleAdaptiveCardSubmitAction
}, dispatch))(AdaptiveCard);

export default index;
//# sourceMappingURL=index.js.map
