import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import { getFileIcon, bytesToSize } from '@webex/react-component-utils';
import ShareFile from '@webex/react-component-activity-share-file';
import { ContentItem, Button, Icon } from '@momentum-ui/react';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".react-component-activity-share-thumbnail__shareItem__LnNoYXJl {\n  position: relative;\n  display: flex;\n  height: 200px;\n  max-width: 320px;\n  margin-bottom: 10px;\n  overflow: hidden;\n  cursor: pointer;\n  border-radius: 4px;\n}\n\n.react-component-activity-share-thumbnail__meta__LnNoYXJl {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  font-size: 14px;\n  color: #fff;\n  background: rgba(52, 53, 55, 0.8);\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px;\n  visibility: hidden;\n}\n\n.react-component-activity-share-thumbnail__thumbnail__LnNoYXJl {\n  margin: auto;\n}\n\n.react-component-activity-share-thumbnail__thumbnail__LnNoYXJl > img {\n  max-width: 100%;\n}\n\n.react-component-activity-share-thumbnail__fileInfo__LnNoYXJl {\n  padding: 8px 10px;\n  overflow: hidden;\n  flex: 1 1 auto;\n}\n\n.react-component-activity-share-thumbnail__name__LnNoYXJl {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.react-component-activity-share-thumbnail__fileProps__LnNoYXJl > span {\n  display: inline-block;\n  margin-right: 5px;\n}\n\n.react-component-activity-share-thumbnail__shareItem__LnNoYXJl:hover .react-component-activity-share-thumbnail__meta__LnNoYXJl {\n  visibility: visible;\n}\n\n.react-component-activity-share-thumbnail__shareActionItem__LnNoYXJl {\n  height: 60px;\n  width: 60px;\n}\n\n.react-component-activity-share-thumbnail__shareActionItem__LnNoYXJl:hover {\n  background-color: #343537;\n}\n";
var styles = {"shareItem":"react-component-activity-share-thumbnail__shareItem__LnNoYXJl","meta":"react-component-activity-share-thumbnail__meta__LnNoYXJl","thumbnail":"react-component-activity-share-thumbnail__thumbnail__LnNoYXJl","fileInfo":"react-component-activity-share-thumbnail__fileInfo__LnNoYXJl","name":"react-component-activity-share-thumbnail__name__LnNoYXJl","fileProps":"react-component-activity-share-thumbnail__fileProps__LnNoYXJl","shareActionItem":"react-component-activity-share-thumbnail__shareActionItem__LnNoYXJl"};
styleInject(css_248z);

const propTypes = {
  actor: PropTypes.object.isRequired,
  file: PropTypes.shape({
    displayName: PropTypes.string,
    fileSize: PropTypes.number,
    image: PropTypes.object,
    mimeType: PropTypes.string,
    objectType: PropTypes.string
  }).isRequired,
  isFetching: PropTypes.bool,
  isPending: PropTypes.bool,
  objectUrl: PropTypes.string,
  onDownloadClick: PropTypes.func.isRequired,
  timestamp: PropTypes.string.isRequired,
  type: PropTypes.string
};
const defaultProps = {
  isFetching: false,
  isPending: false,
  objectUrl: '',
  type: 'chat'
};

function ActivityShareThumbnail(props) {
  const {
    actor,
    file,
    isFetching,
    isPending,
    objectUrl,
    onDownloadClick,
    timestamp,
    type
  } = props;
  const {
    displayName,
    fileSize,
    mimeType
  } = file;

  function handleDownloadClick() {
    onDownloadClick(file);
  }

  const actionNode = /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Button, {
    ariaLabel: "Download",
    style: {
      backgroundColor: 'black'
    },
    circle: true,
    onClick: handleDownloadClick,
    size: 32
  }, /*#__PURE__*/React.createElement(Icon, {
    name: "icon-arrow-tail-down_12",
    color: "white"
  })));
  const isGif = mimeType === 'image/gif';

  if (type === 'file') {
    return /*#__PURE__*/React.createElement("div", {
      className: classNames('webex-activity-share-item', styles.shareItem)
    }, /*#__PURE__*/React.createElement("div", {
      className: classNames('webex-share-thumbnail', styles.thumbnail)
    }, /*#__PURE__*/React.createElement(ContentItem, {
      actionNode: isPending ? '' : actionNode,
      content: objectUrl,
      height: file.image ? file.image.height : null,
      icon: !file.image ? `icon-${getFileIcon(file.mimeType, 72)}` : '',
      gifIcon: isGif ? 'icon icon-gif_20' : '',
      fileSize: bytesToSize(fileSize),
      loading: isFetching,
      loadingText: "Loading",
      title: displayName,
      type: type,
      subtitle: `${actor.displayName}, ${timestamp}`,
      width: file.image ? file.image.width : null
    })));
  }

  if (file.image && type === 'chat') {
    return /*#__PURE__*/React.createElement(ContentItem, {
      actionNode: isPending ? '' : actionNode,
      content: objectUrl,
      height: file.image.height,
      gifIcon: isGif ? 'icon icon-gif_20' : '',
      fileSize: bytesToSize(fileSize),
      loading: isFetching,
      loadingText: "Loading",
      title: displayName,
      type: type,
      width: file.image.width
    });
  }

  return /*#__PURE__*/React.createElement(ShareFile, {
    file: file,
    isPending: isPending,
    onDownloadClick: onDownloadClick
  });
}

ActivityShareThumbnail.propTypes = propTypes;
ActivityShareThumbnail.defaultProps = defaultProps;

export default ActivityShareThumbnail;
//# sourceMappingURL=index.js.map
