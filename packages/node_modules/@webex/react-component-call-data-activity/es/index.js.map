{"version":3,"file":"index.js","sources":["../src/messages.js","../src/helpers.js","../src/index.js"],"sourcesContent":["import {defineMessages} from 'react-intl';\n\nexport default defineMessages({\n  someoneWasUnavailable: {\n    id: 'ciscospark.callDataActivity.message.someoneWasUnavailable',\n    defaultMessage: '{name} was unavailable.'\n  },\n  youCancelledACall: {\n    id: 'ciscospark.callDataActivity.message.youCancelledACall',\n    defaultMessage: 'You cancelled a call.'\n  },\n  someoneCancelledACall: {\n    id: 'ciscospark.callDataActivity.message.someoneCancelledACall',\n    defaultMessage: '{name} cancelled a call.'\n  },\n  youHadACall: {\n    id: 'ciscospark.callDataActivity.message.youHadACall',\n    defaultMessage: 'You had a call ({duration})'\n  },\n  youMissedACall: {\n    id: 'ciscospark.callDataActivity.message.youMissedACall',\n    defaultMessage: 'You missed a call.'\n  },\n  youHadAMeeting: {\n    id: 'ciscospark.callDataActivity.message.youHadAMeeting',\n    defaultMessage: 'You had a meeting ({duration})'\n  },\n  nobodyJoinedYourMeeting: {\n    id: 'ciscospark.callDataActivity.message.nobodyJoinedYourMeeting',\n    defaultMessage: 'You started a meeting but no one was available.'\n  },\n  nobodyJoinedTheMeeting: {\n    id: 'ciscospark.callDataActivity.message.nobodyJoinedTheMeeting',\n    defaultMessage: '{name} cancelled a meeting.'\n  },\n  youMissedAMeeting: {\n    id: 'ciscospark.callDataActivity.message.youMissedAMeeting',\n    defaultMessage: 'You missed a meeting ({duration})'\n  }\n});\n","import moment from 'moment';\n\nexport function getCallDataOneOnOne({\n  everyBodyJoined,\n  iDeclined,\n  actorWasMe,\n  partner = {person: {displayName: ''}},\n  partnerDeclined\n}) {\n  let arg, status;\n\n  if (everyBodyJoined) {\n    status = 'youHadACall';\n  }\n  // One on One Call\n  else if (iDeclined) {\n    status = 'youCancelledACall';\n  }\n  else if (partnerDeclined) {\n    status = 'someoneCancelledACall';\n    arg = {name: partner.person.displayName};\n  }\n  else if (actorWasMe) {\n    status = 'someoneWasUnavailable';\n    arg = {name: partner.person.displayName};\n  }\n  else {\n    status = 'youMissedACall';\n  }\n\n  return {arg, status};\n}\n\nfunction getCallDataGroup({\n  iWasJoined,\n  noBodyJoined,\n  actorWasMe,\n  actor = {displayName: ''}\n}) {\n  let arg, status;\n\n  if (iWasJoined && !noBodyJoined) {\n    status = 'youHadAMeeting';\n  }\n  else if (noBodyJoined) {\n    if (actorWasMe) {\n      status = 'nobodyJoinedYourMeeting';\n    }\n    else {\n      status = 'nobodyJoinedTheMeeting';\n    }\n    arg = {name: actor.displayName};\n  }\n  else {\n    status = 'youMissedAMeeting';\n  }\n\n  return {arg, status};\n}\n\n\n/**\n * Parses call data from an activity\n * @param {object} callData\n * @param {object} callData.actor\n * @param {number} callData.duration\n * @param {boolean} callData.isGroupCall\n * @param {array} callData.participants\n * @param {object} currentUser\n * @returns {object}\n */\nexport function parseActivityCallData(callData, currentUser) {\n  const {\n    actor = {displayName: ''},\n    duration,\n    isGroupCall,\n    participants\n  } = callData;\n  // Call/Meeting update parsing\n  const partner = participants.find((p) => p.person.entryUUID !== currentUser.id);\n  const me = participants.find((p) => p.person.entryUUID === currentUser.id);\n\n  const iWasJoined = me && me.state === 'LEFT';\n  const iDeclined = me && me.state === 'DECLINED';\n  const partnerDeclined = partner && partner.state === 'DECLINED';\n  const everyBodyJoined = participants.every((p) => p.state === 'LEFT');\n\n  const callees = participants.filter((p) => !p.isInitiator);\n  const noBodyJoined = callees.every((p) => p.state !== 'LEFT');\n\n  const actorWasMe = actor && actor.id === currentUser.id;\n\n  const {arg, status} = isGroupCall\n    ? getCallDataGroup({\n      iWasJoined,\n      noBodyJoined,\n      actorWasMe,\n      actor\n    })\n    : getCallDataOneOnOne({\n      everyBodyJoined,\n      iDeclined,\n      actorWasMe,\n      partner,\n      partnerDeclined\n    });\n\n  // Duration\n  const humanizedDuration = moment.duration((duration || 0) * 1000).humanize();\n\n  return {\n    callInfo: {\n      duration: humanizedDuration,\n      ...arg\n    },\n    status\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport messages from './messages';\nimport {parseActivityCallData} from './helpers';\n\nconst propTypes = {\n  actor: PropTypes.shape({\n    displayName: PropTypes.string.isRequired\n  }),\n  duration: PropTypes.number.isRequired,\n  isGroupCall: PropTypes.bool.isRequired,\n  participants: PropTypes.arrayOf(\n    PropTypes.shape({\n      isInitiator: PropTypes.bool,\n      person: PropTypes.shape({\n        entryUUID: PropTypes.string\n      }),\n      state: PropTypes.string\n    })\n  ).isRequired,\n  currentUser: PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }).isRequired\n};\n\nconst defaultProps = {\n  actor: {\n    displayName: ''\n  }\n};\n\nconst CallDataActivityMessage = (props) => {\n  const {\n    actor,\n    duration,\n    isGroupCall,\n    participants,\n    currentUser\n  } = props;\n  const callData = {\n    actor,\n    duration,\n    isGroupCall,\n    participants\n  };\n  const parsedCallData = parseActivityCallData(callData, currentUser);\n\n  return parsedCallData && (\n    <FormattedMessage {...messages[parsedCallData.status]} values={{...parsedCallData.callInfo}} />\n  );\n};\n\nCallDataActivityMessage.propTypes = propTypes;\nCallDataActivityMessage.defaultProps = defaultProps;\n\nexport default CallDataActivityMessage;\n"],"names":["defineMessages","someoneWasUnavailable","id","defaultMessage","youCancelledACall","someoneCancelledACall","youHadACall","youMissedACall","youHadAMeeting","nobodyJoinedYourMeeting","nobodyJoinedTheMeeting","youMissedAMeeting","getCallDataOneOnOne","everyBodyJoined","iDeclined","actorWasMe","partner","person","displayName","partnerDeclined","arg","status","name","getCallDataGroup","iWasJoined","noBodyJoined","actor","parseActivityCallData","callData","currentUser","duration","isGroupCall","participants","find","p","entryUUID","me","state","every","callees","filter","isInitiator","humanizedDuration","moment","humanize","callInfo","propTypes","PropTypes","shape","string","isRequired","number","bool","arrayOf","defaultProps","CallDataActivityMessage","props","parsedCallData","messages"],"mappings":"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"}