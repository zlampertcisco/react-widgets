{"version":3,"file":"index.js","sources":["../src/actions.js","../src/utils.js","../src/helpers.js","../src/reducer.js"],"sourcesContent":["import {last} from 'lodash';\nimport isEmail from 'validator/lib/isEmail';\nimport {validateAndDecodeId, SUCCESS, FAILURE, PENDING} from '@webex/react-component-utils';\n\nexport const ACKNOWLEDGE_ACTIVITY = 'conversation/ACKNOWLEDGE_ACTIVITY';\nexport const ADD_ACTIVITIES_TO_CONVERSATION = 'conversation/ADD_ACTIVITIES_TO_CONVERSATION';\nexport const ADD_PARTICIPANT = 'conversation/ADD_PARTICIPANT';\nexport const ADD_PARTICIPANT_INFLIGHT = 'conversation/ADD_PARTICIPANT_INFLIGHT';\nexport const CREATE_CONVERSATION_BEGIN = 'conversation/CREATE_CONVERSATION_BEGIN';\nexport const CREATE_CONVERSATION = 'conversation/CREATE_CONVERSATION';\nexport const UPDATE_CONVERSATION_STATE = 'conversation/UPDATE_CONVERSATION_STATE';\nexport const DELETE_ACTIVITY_FROM_CONVERSATION = 'conversation/DELETE_ACTIVITY_FROM_CONVERSATION';\nexport const RECEIVE_MERCURY_COMMENT = 'conversation/RECEIVE_MERCURY_COMMENT';\nexport const RECEIVE_MERCURY_ACTIVITY = 'conversation/RECEIVE_MERCURY_ACTIVITY';\nexport const REMOVE_PARTICIPANT = 'conversation/REMOVE_PARTICIPANT';\nexport const REMOVE_PARTICIPANT_INFLIGHT = 'conversation/REMOVE_PARTICIPANT_INFLIGHT';\nexport const RESET_CONVERSATION = 'conversation/RESET_CONVERSATION';\nexport const ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION = 'adaptiveCards/ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION';\n\nfunction acknowledgeActivity(activity) {\n  return {\n    type: ACKNOWLEDGE_ACTIVITY,\n    payload: {\n      activity\n    }\n  };\n}\n\nfunction addActivitiesToConversation(activities) {\n  return {\n    type: ADD_ACTIVITIES_TO_CONVERSATION,\n    payload: {\n      activities\n    }\n  };\n}\n\nfunction addParticipantInflight(participant) {\n  return {\n    type: ADD_PARTICIPANT_INFLIGHT,\n    payload: {\n      participant\n    }\n  };\n}\n\nfunction deleteActivityFromConversation(conversation, activity) {\n  return {\n    type: DELETE_ACTIVITY_FROM_CONVERSATION,\n    payload: {\n      conversation,\n      activity\n    }\n  };\n}\n\nfunction removeParticipantInflight(participant) {\n  return {\n    type: REMOVE_PARTICIPANT_INFLIGHT,\n    payload: {\n      participant\n    }\n  };\n}\n\n/**\n * Adds a participant to conversation's participants array\n *\n * @export\n * @param {object} participant\n * @returns {object}\n */\nexport function addParticipant(participant) {\n  return {\n    type: ADD_PARTICIPANT,\n    payload: {\n      participant\n    }\n  };\n}\n\nexport function createConversationBegin() {\n  return {\n    type: CREATE_CONVERSATION_BEGIN\n  };\n}\n\nexport function receiveMercuryComment(activity) {\n  return {\n    type: RECEIVE_MERCURY_COMMENT,\n    payload: {\n      activity\n    }\n  };\n}\n\nexport function receiveMercuryActivity(activity) {\n  return {\n    type: RECEIVE_MERCURY_ACTIVITY,\n    payload: {\n      activity\n    }\n  };\n}\n\n/**\n * Removes a participant from the participants array\n *\n * @export\n * @param {object} participant\n * @returns {object}\n */\nexport function removeParticipant(participant) {\n  return {\n    type: REMOVE_PARTICIPANT,\n    payload: {\n      participant\n    }\n  };\n}\n\n/**\n * Resets the conversation store to default\n *\n * @export\n * @returns {object}\n */\nexport function resetConversation() {\n  return {\n    type: RESET_CONVERSATION\n  };\n}\n\nexport function storeConversation(conversation) {\n  return {\n    type: CREATE_CONVERSATION,\n    payload: {\n      conversation\n    }\n  };\n}\n\nexport function updateConversationState(conversationState) {\n  return {\n    type: UPDATE_CONVERSATION_STATE,\n    payload: {\n      conversationState\n    }\n  };\n}\n\n\n/**\n * Computes and updates room properties\n * @param {Object} conversation\n * @param {Object} sparkInstance\n * @returns {Object}\n */\nexport function computeRoomProperties(conversation, sparkInstance) {\n  const computedConversation = Object.assign({}, conversation);\n\n  const lockedTag = 'LOCKED';\n  const oneOnOneTag = 'ONE_ON_ONE';\n  const isLocked = conversation.tags.some((tag) => tag === lockedTag);\n  const isOneOnOne = conversation.tags.some((tag) => tag === oneOnOneTag);\n  const currentUserId = sparkInstance.internal.device.userId;\n  const currentUserParticipant = conversation.participants.items\n    .find((participant) => participant.id === currentUserId);\n  const isModerator = currentUserParticipant\n    && currentUserParticipant.roomProperties\n    && currentUserParticipant.roomProperties.isModerator;\n\n  if (isOneOnOne && !conversation.displayName) {\n    const otherUser = conversation.participants.items\n      .find((p) => p.id !== currentUserId);\n\n    if (otherUser) {\n      computedConversation.displayName = otherUser.displayName;\n    }\n  }\n  computedConversation.status = Object.assign({}, conversation.status,\n    {isLocked, isModerator, isOneOnOne});\n\n  return computedConversation;\n}\n\n\n/**\n * Acknowledges (marks as read) an activity\n * @param {object} conversation (immutable object expected)\n * @param {object} activity\n * @param {object} spark\n * @returns {function}\n */\nexport function acknowledgeActivityOnServer(conversation, activity, spark) {\n  return (dispatch) =>\n    spark.internal.conversation.acknowledge(conversation.toJS(), activity)\n      .then(() => dispatch(acknowledgeActivity(activity)));\n}\n\n/**\n * Creates/Opens a conversation with a user\n *\n * @param {Array} participants List of userIds or emails\n * @param {object} spark\n * @returns {function}\n */\nexport function createConversation(participants = [], spark) {\n  return (dispatch) => {\n    dispatch(createConversationBegin());\n\n    const mappedParticipants = participants.map((p) => {\n      if (isEmail(p)) {\n        return p;\n      }\n      const {id: uuid} = validateAndDecodeId(p);\n\n      if (uuid) {\n        return uuid;\n      }\n\n      return p;\n    });\n\n    return spark.internal.conversation.create({\n      participants: mappedParticipants\n    }, {\n      latestActivity: true,\n      activitiesLimit: 40,\n      participantAckFilter: 'all'\n    })\n      .then((conversation) =>\n        dispatch(storeConversation(\n          computeRoomProperties(conversation, spark)\n        )))\n      .catch((error) => dispatch(updateConversationState({error: error.message})));\n  };\n}\n\n/**\n * Deletes an activity from a conversation\n * @param {object} conversation (immutable object expected)\n * @param {object} activity\n * @param {object} spark\n * @returns {function}\n */\nexport function deleteActivity(conversation, activity, spark) {\n  return (dispatch) =>\n    spark.internal.conversation.delete(conversation.toJS(), activity)\n      .then(() => dispatch(deleteActivityFromConversation(conversation, activity)));\n}\n\n/**\n * Retrieves a conversation with SpaceId\n *\n * @param {string} id SpaceId\n * @param {object} spark\n * @returns {Promise}\n */\nexport function getConversation(id, spark) {\n  const room = validateAndDecodeId(id);\n\n  return (dispatch) => {\n    dispatch(createConversationBegin());\n    if (room.id) {\n      return spark.internal.conversation.get(room, {\n        latestActivity: true,\n        activitiesLimit: 40,\n        participantAckFilter: 'all',\n        includeParticipants: true\n      })\n        .then((conversation) =>\n          dispatch(storeConversation(\n            computeRoomProperties(conversation, spark)\n          )))\n        .catch((error) => dispatch(updateConversationState({error: error.message})));\n    }\n\n    return false;\n  };\n}\n\n/**\n * Fetches activities that were posted after sinceDate\n * @param {string} conversationUrl\n * @param {string} sinceDate\n * @param {object} spark\n * @returns {function}\n */\nexport function loadMissingActivities(conversationUrl, sinceDate, spark) {\n  function fetchAndMergeMissingActivities(fetchConversationUrl, fetchSinceDate) {\n    return (dispatch) => {\n      const limit = 50;\n\n      return spark.internal.conversation.listActivities({\n        lastActivityFirst: false,\n        conversationUrl: fetchConversationUrl,\n        limit,\n        fetchSinceDate\n      })\n        .then((activities) => {\n          if (activities.length) {\n            dispatch(addActivitiesToConversation(activities));\n            if (activities.length === limit) {\n            // We still have (possibly) more activities missing\n              const lastActivityDate = last(activities).published;\n\n              return fetchAndMergeMissingActivities(fetchConversationUrl, lastActivityDate, dispatch);\n            }\n          }\n\n          return Promise.resolve();\n        });\n    };\n  }\n\n  return (dispatch) => {\n    dispatch(updateConversationState({isLoadingMissing: true}));\n\n    return dispatch(fetchAndMergeMissingActivities(conversationUrl, sinceDate))\n      .then(() => dispatch(updateConversationState({isLoadingMissing: false})));\n  };\n}\n\n/**\n * Loads activities for a conversation previous to the maxDate\n *\n * @export\n * @param {string} conversationUrl\n * @param {string} maxDate\n * @param {object} spark\n * @returns {function}\n */\nexport function loadPreviousMessages(conversationUrl, maxDate, spark) {\n  return (dispatch) => {\n    dispatch(updateConversationState({isLoadingHistoryUp: true}));\n\n    return spark.internal.conversation.listActivities({\n      conversationUrl,\n      lastActivityFirst: true,\n      limit: 20,\n      maxDate: Date.parse(maxDate) || Date.now()\n    })\n      .then((activities) => {\n        dispatch(addActivitiesToConversation(activities));\n        dispatch(updateConversationState({isLoadingHistoryUp: false}));\n      })\n      .catch((error) => dispatch(updateConversationState({error: error.message})));\n  };\n}\n\n/**\n * Adds participant to the conversation on the server\n *\n * @export\n * @param {object} conversation (immutable object expected)\n * @param {object|string} participant the full participant object (js-sdk required)\n *                                    if string, must be an email address\n * @param {object} spark\n * @returns {function}\n */\nexport function addParticipantToConversation(conversation, participant, spark) {\n  return (dispatch) => {\n    let participantObject = participant;\n\n    if (typeof participant === 'string') {\n      if (isEmail(participant)) {\n        participantObject = {\n          id: participant,\n          displayName: participant,\n          name: participant,\n          emailAddress: participant\n        };\n      }\n      else {\n        const error = new Error('An email is required for string values of \\'participant\\' parameter.');\n\n        dispatch(updateConversationState({addParticipantError: error}));\n\n        return Promise.resolve();\n      }\n    }\n    dispatch(addParticipantInflight(participantObject));\n\n    return spark.internal.conversation.add(conversation.toJS(), participantObject)\n      .then(() =>\n        // Add will come as mercury event\n        dispatch(updateConversationState({addParticipantError: null})))\n      .catch((error) =>\n        dispatch(updateConversationState({addParticipantError: error})));\n  };\n}\n\n/**\n * Removes a participant from the conversation on the server\n *\n * @export\n * @param {object} conversation\n * @param {object} participant\n * @param {object} spark\n * @returns {function}\n */\nexport function removeParticipantFromConversation(conversation, participant, spark) {\n  return (dispatch) => {\n    dispatch(removeParticipantInflight(participant));\n\n    return spark.internal.conversation.leave(conversation.toJS(), participant)\n      .then(() =>\n        // Remove will come as mercury event\n        dispatch(updateConversationState({removeParticipantError: null})))\n      .catch((error) =>\n        dispatch(updateConversationState({removeParticipantError: error})));\n  };\n}\n\n/**\n * submits the adaptive card action\n *\n * @export\n * @param {string} url conversation end point to post data\n * @param {object} actionInput contians type of object and input data\n * @param {string} parentId id of the parent activity\n * @param {object} spark object used to call the funcion of conversation\n * @param {HTMLElement} btnClicked disable the clicked button\n * @returns {function}\n */\nexport function handleAdaptiveCardSubmitAction(url, actionInput, parentId, spark, btnClicked) {\n  return (dispatch) => {\n    dispatch({\n      type: ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION,\n      status: PENDING\n    });\n    /* this button is from adaptive cards library we get only when an action happens and\n     we don't have a reference to it in React */\n    // eslint-disable-next-line no-param-reassign\n    btnClicked.disabled = true;\n\n    return spark.internal.conversation.cardAction(\n      {url},\n      actionInput,\n      {id: parentId}\n    )\n      .then(() => {\n        setTimeout(() => {\n          // eslint-disable-next-line no-param-reassign\n          btnClicked.disabled = false;\n        }, 2000);\n        dispatch({\n          type: ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION,\n          status: SUCCESS\n        });\n      })\n      .catch(() => {\n        setTimeout(() => {\n          // eslint-disable-next-line no-param-reassign\n          btnClicked.disabled = false;\n        }, 2000);\n        dispatch({\n          type: ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION,\n          status: FAILURE\n        });\n      });\n  };\n}\n","import {OrderedMap} from 'immutable';\n\n/**\n * @typedef {Object} Activity\n * @typedef {String} ParentId\n */\n\n/**\n * @param {Object.<ParentId, Activity[]>} threadActivities\n *   a map of parent activity IDs to a collection of reply activities\n * @param {Activity[]} sortNonThreadActivities collection of non-reply activities\n * @returns {Activity[]} combined collection of activities\n */\n// eslint-disable-next-line import/prefer-default-export\nexport const getActivitiesFromThreadAndNonThreadCollections = (\n  threadActivities = {},\n  sortNonThreadActivities = []\n) => {\n  const finalList = [];\n  let start = 0;\n\n  for (let i = 0; i < sortNonThreadActivities.length; i += 1) {\n    if (threadActivities[sortNonThreadActivities[i].id]) {\n      // The current activity is a parent activity\n      // Grab the replies and insert them after the parent.\n\n      // This grabs all of the activities prior to the current activity\n      // that were not parent activities.\n      finalList.push(...sortNonThreadActivities.slice(start, i + 1));\n\n      // This grabs all of the replies to the current parent activity\n      finalList.push(...threadActivities[sortNonThreadActivities[i].id]);\n\n      // Set start to the next activity\n      start = i + 1;\n    }\n  }\n  finalList.push(...sortNonThreadActivities.slice(start));\n\n  return new OrderedMap(finalList.map((activity) => [activity.url, activity]));\n};\n","import {API_ACTIVITY_TYPE, API_ACTIVITY_VERB} from '@webex/react-component-utils';\n\n/**\n * Parses the giphy file object and set the url correctly\n * @param {Object} fileObject\n * @returns {Object}\n */\nfunction convertGiphyFileObject(fileObject) {\n  const normalizedFileObject = Object.assign({}, fileObject);\n\n  normalizedFileObject.image.displayName = fileObject.displayName;\n  normalizedFileObject.url = fileObject.scr.loc;\n  // Set scr to null so we don't try to decrypt content in the sdk\n  normalizedFileObject.scr = null;\n\n  return normalizedFileObject;\n}\n\n\n/**\n * Normalizes an activity received from the conversation service\n * @param {Object} a\n * @returns {Object}\n */\nexport function normalizeActivity(a) {\n  const activity = Object.assign({}, a);\n\n  if (activity.verb === 'share' && activity.object && activity.object.files && Array.isArray(activity.object.files.items)) {\n    // Apply giphy fix to file url\n    activity.object.files.items = activity.object.files.items.map((fileObject) => {\n      if (fileObject.url.includes('giphy')) {\n        return convertGiphyFileObject(fileObject);\n      }\n\n      return fileObject;\n    });\n  }\n\n  return activity;\n}\n\n/**\n * Normalizes an array of activities received from the conversation service\n * @param {Array} activities\n * @returns {Array}\n */\nexport function normalizeActivities(activities) {\n  return activities.map(normalizeActivity);\n}\n\n/**\n * Filters a raw list of activities for those we are interested in\n *\n * @param {array} activities\n * @returns {array}\n */\nexport function filterActivities(activities) {\n  return activities.filter((a) => {\n    const isUpdate = a.verb === API_ACTIVITY_VERB.UPDATE;\n    const isContent = a.object && a.object.objectType === 'content';\n    const isReply = a.type === API_ACTIVITY_TYPE.REPLY;\n    let shouldInclude = true;\n\n    // Content updates show up out of order and should not be displayed\n    if (isUpdate && isContent) {\n      shouldInclude = false;\n    }\n\n    // Threaded replies are not currently supported\n    if (isReply) {\n      shouldInclude = false;\n    }\n\n    return shouldInclude;\n  });\n}\n","/* eslint complexity: [\"error\", 14] */\nimport {fromJS, Map} from 'immutable';\n\nimport {\n  ACKNOWLEDGE_ACTIVITY,\n  ADD_ACTIVITIES_TO_CONVERSATION,\n  ADD_PARTICIPANT,\n  ADD_PARTICIPANT_INFLIGHT,\n  CREATE_CONVERSATION,\n  CREATE_CONVERSATION_BEGIN,\n  RECEIVE_MERCURY_ACTIVITY,\n  RECEIVE_MERCURY_COMMENT,\n  REMOVE_PARTICIPANT,\n  REMOVE_PARTICIPANT_INFLIGHT,\n  RESET_CONVERSATION,\n  UPDATE_CONVERSATION_STATE,\n  ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION\n} from './actions';\n\nimport {filterActivities, normalizeActivities, normalizeActivity} from './helpers';\n\nexport const initialState = fromJS({\n  sortNonThreadActivities: [],\n  threadActivities: {},\n  id: null,\n  inFlightParticipants: {\n    adding: new Map(),\n    removing: new Map()\n  },\n  lastAcknowledgedActivityId: null,\n  participants: [],\n  cardActionAcknowledgedState: '',\n  status: {\n    addParticipantError: null,\n    isFetching: false,\n    isListeningToMercury: false,\n    isLoaded: false,\n    isLoadingHistoryUp: false,\n    isLoadingMissing: false,\n    isLocked: true,\n    isModerator: false,\n    isOneOnOne: null,\n    error: null,\n    removeParticipantError: null\n  }\n});\n\nconst markDeletedActivity = ({activity: {object: {id}}, activities}) =>\n  activities.map((activityItem) => {\n    if (activityItem.id === id) {\n      return Object.assign({}, activityItem, {\n        verb: 'tombstone'\n      });\n    }\n\n    return activityItem;\n  });\n\nfunction receiveMercuryActivity(state, {payload: {activity}}) {\n  switch (activity.verb) {\n    case 'delete': {\n      // Find activity that is being deleted and change it to a tombstone\n      const sortNonThreadActivities = markDeletedActivity({\n        activity,\n        activities: state.get('sortNonThreadActivities')\n      });\n\n      const threadActivities = {};\n\n      for (const [threadId, threads] of Object.entries(state.get('threadActivities'))) {\n        threadActivities[threadId] = markDeletedActivity({\n          activity,\n          activities: threads\n        });\n      }\n\n      return state.set('sortNonThreadActivities', sortNonThreadActivities)\n        .set('threadActivities', threadActivities);\n    }\n    case 'acknowledge': {\n      // acknowledge is a read receipt. we need to update the participants who\n      // are listed in this acknowledgement\n      const participants = state.get('participants');\n      const actorId = activity.actor.id;\n\n      return state.set('participants',\n        participants.map((participant) => {\n          if (participant.get('id') === actorId) {\n            return participant\n              .setIn(['roomProperties', 'lastSeenActivityUUID'], activity.object.id)\n              .setIn(['roomProperties', 'lastSeenActivityDate'], activity.published);\n          }\n\n          return participant;\n        }));\n    }\n    default:\n      return state;\n  }\n}\n\nconst compareActivities = (first, second) => Date.parse(first.published) - Date.parse(second.published);\n\nconst findOldestPublishedDate = ({activity, published}) =>\n  ((compareActivities({published}, activity) < 0) ? published : activity.published);\n\nconst processActivities = ({\n  activities, threadActivities = {}, nonThreadActivities = [], oldestPublishedDate\n}) => {\n  let ta = threadActivities;\n  let nta = nonThreadActivities;\n\n  const dirtyThreadList = new Set();\n  let needSort = false;\n  let published = oldestPublishedDate;\n\n  for (const activity of activities) {\n    published = findOldestPublishedDate({activity, published});\n\n    // Split the activities into the correct buckets\n    const parentId = activity.parent?.id;\n\n    if (parentId) {\n      dirtyThreadList.add(parentId);\n\n      const threads = ta[parentId] ?? [];\n\n      ta = {...ta};\n      ta[parentId] = [...threads, activity];\n    }\n    else {\n      needSort = true;\n      nta = [...nta, activity];\n    }\n  }\n\n  for (const threadParent of dirtyThreadList) {\n    ta[threadParent] = ta[threadParent].sort(compareActivities);\n  }\n\n  return {\n    threadActivities: ta,\n    sortNonThreadActivities: needSort ? nta.sort(compareActivities) : nta,\n    oldestPublishedDate: published\n  };\n};\n\nconst processCreateConversation = ({action, state}) => {\n  const {\n    defaultActivityEncryptionKeyUrl,\n    avatar,\n    displayName,\n    id,\n    kmsResourceObjectUrl,\n    locusUrl,\n    participants,\n    tags,\n    published,\n    url,\n    lastReadableActivityDate,\n    teams,\n    status\n  } = action.payload.conversation;\n\n  const rawActivities = action.payload.conversation.activities.items;\n  const conversationActivities = normalizeActivities(filterActivities(rawActivities));\n\n  const {threadActivities, sortNonThreadActivities, oldestPublishedDate} = processActivities({\n    activities: conversationActivities,\n    oldestPublishedDate: state.get('oldestPublishedDate')\n  });\n\n  return state\n    .set('threadActivities', threadActivities)\n    .set('sortNonThreadActivities', sortNonThreadActivities)\n    .set('oldestPublishedDate', oldestPublishedDate)\n    .mergeDeep({\n      avatar,\n      displayName,\n      defaultActivityEncryptionKeyUrl,\n      id,\n      kmsResourceObjectUrl,\n      locusUrl,\n      url,\n      published,\n      tags,\n      lastReadableActivityDate,\n      teams,\n      status: Object.assign({}, status, {\n        error: null,\n        isFetching: false,\n        isLoaded: true\n      }),\n      participants: participants.items\n    });\n};\n\nconst addActivities = ({state, addedActivities}) => {\n  const opd = state.get('oldestPublishedDate');\n\n  const {threadActivities, sortNonThreadActivities, oldestPublishedDate} = processActivities({\n    threadActivities: state.get('threadActivities'),\n    nonThreadActivities: state.get('sortNonThreadActivities'),\n    activities: addedActivities,\n    oldestPublishedDate: opd\n  });\n\n  return state.set('threadActivities', threadActivities)\n    .set('sortNonThreadActivities', sortNonThreadActivities)\n    .set('oldestPublishedDate', oldestPublishedDate);\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case ACKNOWLEDGE_ACTIVITY: {\n      return state.set('lastAcknowledgedActivityId', action.payload.activity.id);\n    }\n    case ADD_ACTIVITIES_TO_CONVERSATION: {\n      const addedActivities = normalizeActivities(filterActivities(action.payload.activities));\n\n      return addActivities({state, addedActivities});\n    }\n\n    case ADD_PARTICIPANT: {\n      const participants = state.get('participants').push(fromJS(action.payload.participant));\n\n      return state\n        .set('participants', participants)\n        .removeIn(['inFlightParticipants', 'adding', action.payload.participant.id])\n      // In flight participants could be sideboarded and not have an id\n        .removeIn(['inFlightParticipants', 'adding', action.payload.participant.emailAddress]);\n    }\n\n    case ADD_PARTICIPANT_INFLIGHT: {\n      const {participant} = action.payload;\n\n      return state.setIn(['inFlightParticipants', 'adding', participant.id], participant);\n    }\n\n    case CREATE_CONVERSATION_BEGIN: {\n      return state.setIn(['status', 'isFetching'], true);\n    }\n\n    case CREATE_CONVERSATION: {\n      return processCreateConversation({action, state});\n    }\n\n    case RECEIVE_MERCURY_ACTIVITY: {\n      return receiveMercuryActivity(state, action);\n    }\n\n    case RECEIVE_MERCURY_COMMENT: {\n      const receivedActivity = normalizeActivity(action.payload.activity);\n\n      return addActivities({state, addedActivities: [receivedActivity]});\n    }\n\n    case REMOVE_PARTICIPANT: {\n      const participants = [];\n\n      state.get('participants').forEach((p) => {\n        if (p.get('id') !== action.payload.participant.id) {\n          participants.push(p);\n        }\n      });\n\n      return state\n        .set('participants', fromJS(participants))\n        .removeIn(['inFlightParticipants', 'removing', action.payload.participant.id]);\n    }\n\n    case REMOVE_PARTICIPANT_INFLIGHT: {\n      const {participant} = action.payload;\n\n      return state.setIn(['inFlightParticipants', 'removing', participant.id], participant);\n    }\n\n    case RESET_CONVERSATION: {\n      return initialState;\n    }\n\n    case UPDATE_CONVERSATION_STATE: {\n      return state.mergeIn(['status'], action.payload.conversationState);\n    }\n\n    case ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION: {\n      return state.set('cardActionAcknowledgedState', action.status);\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n"],"names":["ACKNOWLEDGE_ACTIVITY","ADD_ACTIVITIES_TO_CONVERSATION","ADD_PARTICIPANT","ADD_PARTICIPANT_INFLIGHT","CREATE_CONVERSATION_BEGIN","CREATE_CONVERSATION","UPDATE_CONVERSATION_STATE","DELETE_ACTIVITY_FROM_CONVERSATION","RECEIVE_MERCURY_COMMENT","RECEIVE_MERCURY_ACTIVITY","REMOVE_PARTICIPANT","REMOVE_PARTICIPANT_INFLIGHT","RESET_CONVERSATION","ACKNOWLEDGE_ADAPTIVE_CARD_SUBMIT_ACTION","acknowledgeActivity","activity","type","payload","addActivitiesToConversation","activities","addParticipantInflight","participant","deleteActivityFromConversation","conversation","removeParticipantInflight","addParticipant","createConversationBegin","receiveMercuryComment","receiveMercuryActivity","removeParticipant","resetConversation","storeConversation","updateConversationState","conversationState","computeRoomProperties","sparkInstance","computedConversation","Object","assign","lockedTag","oneOnOneTag","isLocked","tags","some","tag","isOneOnOne","currentUserId","internal","device","userId","currentUserParticipant","participants","items","find","id","isModerator","roomProperties","displayName","otherUser","p","status","acknowledgeActivityOnServer","spark","dispatch","acknowledge","toJS","then","createConversation","mappedParticipants","map","isEmail","uuid","validateAndDecodeId","create","latestActivity","activitiesLimit","participantAckFilter","catch","error","message","deleteActivity","delete","getConversation","room","get","includeParticipants","loadMissingActivities","conversationUrl","sinceDate","fetchAndMergeMissingActivities","fetchConversationUrl","fetchSinceDate","limit","listActivities","lastActivityFirst","length","lastActivityDate","last","published","Promise","resolve","isLoadingMissing","loadPreviousMessages","maxDate","isLoadingHistoryUp","Date","parse","now","addParticipantToConversation","participantObject","name","emailAddress","Error","addParticipantError","add","removeParticipantFromConversation","leave","removeParticipantError","handleAdaptiveCardSubmitAction","url","actionInput","parentId","btnClicked","PENDING","disabled","cardAction","setTimeout","SUCCESS","FAILURE","getActivitiesFromThreadAndNonThreadCollections","threadActivities","sortNonThreadActivities","finalList","start","i","push","slice","OrderedMap","convertGiphyFileObject","fileObject","normalizedFileObject","image","scr","loc","normalizeActivity","a","verb","object","files","Array","isArray","includes","normalizeActivities","filterActivities","filter","isUpdate","API_ACTIVITY_VERB","UPDATE","isContent","objectType","isReply","API_ACTIVITY_TYPE","REPLY","shouldInclude","initialState","fromJS","inFlightParticipants","adding","Map","removing","lastAcknowledgedActivityId","cardActionAcknowledgedState","isFetching","isListeningToMercury","isLoaded","markDeletedActivity","activityItem","state","threadId","threads","entries","set","actorId","actor","setIn","compareActivities","first","second","findOldestPublishedDate","processActivities","nonThreadActivities","oldestPublishedDate","ta","nta","dirtyThreadList","Set","needSort","parent","threadParent","sort","processCreateConversation","action","defaultActivityEncryptionKeyUrl","avatar","kmsResourceObjectUrl","locusUrl","lastReadableActivityDate","teams","rawActivities","conversationActivities","mergeDeep","addActivities","addedActivities","opd","reducer","removeIn","receivedActivity","forEach","mergeIn"],"mappings":"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"}