{"version":3,"file":"index.js","sources":["../src/constants.js","../src/files.js","../src/components.js","../src/date.js","../src/activity.js","../src/uuid-utils.js","../src/string-validation.js","../src/hocs.js","../src/team-colors.js","../src/badge.js","../src/mentions.js","../src/file-icons.js","../src/adaptiveCardUtil.js","../src/adaptiveCard.js","../src/RenderCardElement.js","../src/decryptImageUrl.js"],"sourcesContent":["export const API_ACTIVITY_VERB = {\n  ACKNOWLEDGE: 'acknowledge',\n  ADD: 'add',\n  ADD_MICROAPP_INSTANCE: 'addMicroappInstance',\n  ARCHIVE: 'archive',\n  ASSIGN: 'assign',\n  ASSIGN_MODERATOR: 'assignModerator',\n  CANCEL: 'cancel',\n  CREATE: 'create',\n  DECLINE: 'decline',\n  DELETE: 'delete',\n  FAVORITE: 'favorite',\n  GAP: 'gap',\n  HIDE: 'hide',\n  LEAVE: 'leave',\n  LOCK: 'lock',\n  MUTE: 'mute',\n  POST: 'post',\n  REMOVE: 'remove',\n  SCHEDULE: 'schedule',\n  SET: 'set',\n  SHARE: 'share',\n  START: 'start',\n  TAG: 'tag',\n  TERMINATE: 'terminate',\n  TOMBSTONE: 'tombstone',\n  UNARCHIVE: 'unarchive',\n  UNASSIGN: 'unassign',\n  UNASSIGN_MODERATOR: 'unassignModerator',\n  UNFAVORITE: 'unfavorite',\n  UNHIDE: 'unhide',\n  UNLOCK: 'unlock',\n  UNMUTE: 'unmute',\n  UNSET: 'unset',\n  UNTAG: 'untag',\n  UPDATE: 'update',\n  UPDATEKEY: 'updateKey'\n};\n\nexport const API_ACTIVITY_TYPE = {\n  REPLY: 'reply'\n};\n\nexport const MENTION_NOTIFICATIONS_ON = 'MENTION_NOTIFICATIONS_ON';\nexport const MENTION_NOTIFICATIONS_OFF = 'MENTION_NOTIFICATIONS_OFF';\nexport const MESSAGE_NOTIFICATIONS_ON = 'MESSAGE_NOTIFICATIONS_ON';\nexport const MESSAGE_NOTIFICATIONS_OFF = 'MESSAGE_NOTIFICATIONS_OFF';\n\nexport const NOTIFICATIONS_GLOBAL = 'NOTIFICATIONS_GLOBAL';\nexport const NOTIFICATIONS_OFF = 'NOTIFICATIONS_OFF';\nexport const NOTIFICATIONS_MENTIONS = 'NOTIFICATIONS_MENTIONS';\nexport const NOTIFICATIONS_ALL = 'NOTIFICATIONS_ALL';\nexport const EMAIL_NOTIFICATIONS_MENTIONS = 'EMAIL_NOTIFICATIONS_MENTIONS';\nexport const EMAIL_NOTIFICATIONS_ONE_TO_ONES = 'EMAIL_NOTIFICATIONS_ONE_TO_ONES';\nexport const EMAIL_NOTIFICATIONS_DIGEST_EMAILS = 'EMAIL_NOTIFICATIONS_DIGEST_EMAILS';\n\nexport const NOTIFICATIONS_BADGE_NONE = 'NOTIFICATIONS_BADGE_NONE';\nexport const NOTIFICATIONS_BADGE_UNREAD = 'NOTIFICATIONS_BADGE_UNREAD';\nexport const NOTIFICATIONS_BADGE_MENTION = 'NOTIFICATIONS_BADGE_MENTION';\nexport const NOTIFICATIONS_BADGE_MUTE = 'NOTIFICATIONS_BADGE_MUTE';\nexport const NOTIFICATIONS_BADGE_UNMUTE = 'NOTIFICATIONS_BADGE_UNMUTE';\n\nexport const FEATURES_USER = 'user';\nexport const FEATURES_GROUP_MESSAGE_NOTIFICATIONS = 'group-message-notifications';\nexport const FEATURES_MENTION_NOTIFICATIONS = 'mention-notifications';\n\nexport const SPACE_TYPE_ONE_ON_ONE = 'direct';\nexport const SPACE_TYPE_GROUP = 'group';\n\nexport const TAG_MUTED = 'MUTED';\n\nexport const CARD_ATTACHMENT_TYPE = 'AdaptiveCard';\nexport const CARD_CONTAINS_IMAGE = 'cardReference';\nexport const ACTIVITY_CARDS = 'cards';\nexport const ACTIVITY_OBJECT_CONTENT_CATEGORY_IMAGES = 'images';\nexport const ADAPTIVE_CARD_OPEN_URL_ACTION = 'Action.OpenUrl';\nexport const ADAPTIVE_CARD_SUBMIT_ACTION = 'Action.Submit';\n\nexport const FEATURES_DEVELOPER = 'developer';\nexport const FEATURES_WIDGET_ADAPTIVE_CARD = 'WIDGET_ADAPTIVE_CARD';\nexport const FEATURES_WIDGET_ADAPTIVE_CARD_OFF = 'WIDGET_ADAPTIVE_CARD_OFF';\nexport const FEATURES_WIDGET_ADAPTIVE_CARD_ON = 'WIDGET_ADAPTIVE_CARD_ON';\n\nexport const DEFAULT_VALUE_CHECK_BOX = 'Choose';\nexport const TEXT_INPUT_ELEMENT = 'Input.Text';\nexport const TOGGLE_INPUT_ELEMENT = 'Input.Toggle';\nexport const CHOICE_SET_INPUT_ELEMENT = 'Input.ChoiceSet';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const PENDING = 'PENDING';\n\n\nexport const FILE_TYPES = {\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'spreadsheet',\n  'application/pdf': 'pdf',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'presentation',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'doc',\n  'application/vnd.ms-excel': 'spreadsheet',\n  'application/octet-stream': 'binary',\n  'application/zip': 'zip'\n};\n\nexport const FILE_ATTACHMENT_MAX_SIZE = 150000000; // 150 MB threshold limit\n\nexport const ADAPTIVE_CARD_HOST_CONFIG = {\n  hostCapabilities: {\n    capabilities: null\n  },\n  choiceSetInputValueSeparator: ',',\n  supportsInteractivity: true,\n  fontFamily: 'CiscoSansTT Regular',\n  spacing: {\n    small: 4,\n    default: 12,\n    medium: 12,\n    large: 12,\n    extraLarge: 16,\n    padding: 12\n  },\n  fontSizes: {\n    small: 12,\n    default: 14,\n    medium: 16,\n    large: 20,\n    extraLarge: 24\n  },\n  fontWeights: {\n    lighter: 300,\n    default: 400,\n    bolder: 700\n  },\n  imageSizes: {\n    small: 40,\n    medium: 80,\n    large: 160\n  },\n  containerStyles: {\n    default: {\n      foregroundColors: {\n        default: {\n          default: '#171B1F',\n          subtle: '#535759'\n        },\n        dark: {\n          default: '#535759',\n          subtle: '#535759'\n        },\n        light: {\n          default: '#535759',\n          subtle: '#929596'\n        },\n        accent: {\n          default: '#007EA8',\n          subtle: '#00A0D1'\n        },\n        good: {\n          default: '#1B8728',\n          subtle: '#24AB31'\n        },\n        warning: {\n          default: '#D93829',\n          subtle: '#FF5C4A'\n        },\n        attention: {\n          default: '#C74F0E',\n          subtle: '#F26B1D'\n        }\n      },\n      backgroundColor: '#FFFFFF'\n    },\n    emphasis: {\n      foregroundColors: {\n        default: {\n          default: '#171B1F',\n          subtle: '#535759'\n        },\n        dark: {\n          default: '#171B1F',\n          subtle: '#535759'\n        },\n        light: {\n          default: '#535759',\n          subtle: '#929596'\n        },\n        accent: {\n          default: '#007EA8',\n          subtle: '#00A0D1'\n        },\n        good: {\n          default: '#1B8728',\n          subtle: '#24AB31'\n        },\n        warning: {\n          default: '#D93829',\n          subtle: '#FF5C4A'\n        },\n        attention: {\n          default: '#C74F0E',\n          subtle: '#F26B1D'\n        }\n      },\n      backgroundColor: '#F2F4F5'\n    }\n  },\n  actions: {\n    maxActions: 5,\n    buttonSpacing: 8,\n    showCard: {\n      actionMode: 'Inline',\n      inlineTopMargin: 16,\n      style: 'emphasis'\n    },\n    preExpandSingleShowCardAction: false,\n    actionsOrientation: 'Horizontal',\n    actionAlignment: 'Left'\n  },\n  adaptiveCard: {\n    allowCustomStyle: false\n  },\n  imageSet: {\n    maxImageHeight: 100\n  },\n  media: {\n    allowInlinePlayback: true\n  },\n  factSet: {\n    title: {\n      size: 'Default',\n      color: 'Default',\n      isSubtle: false,\n      weight: 'Bolder',\n      wrap: true\n    },\n    value: {\n      size: 'Default',\n      color: 'Default',\n      isSubtle: false,\n      weight: 'Default',\n      wrap: true\n    },\n    spacing: 10\n  },\n  cssClassNamePrefix: null\n};\n","import uuid from 'uuid';\n\nimport {FILE_ATTACHMENT_MAX_SIZE, FILE_TYPES} from './constants';\n\n/**\n * Converts bytes to human readable size\n * @param {Number} bytes\n * @returns {String}\n */\nexport function bytesToSize(bytes) {\n  if (!bytes || bytes === 0) {\n    return '0 Bytes';\n  }\n  const k = 1000;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  const output = (bytes / (k ** i)).toPrecision(3);\n\n  return `${output} ${sizes[i]}`;\n}\n\n/**\n * Converts a buffer object to a objectUrl and blob\n * @param {Object} buffer\n * @returns {Object}\n */\nexport function bufferToBlob(buffer) {\n  const urlCreator = window.URL || window.webkitURL;\n  const blob = new Blob([buffer], {type: buffer.type});\n  const objectUrl = urlCreator.createObjectURL(blob);\n\n  return {blob, objectUrl};\n}\n\n/**\n * Formats a file object with the appropriate fields\n * @param {Object} file\n * @returns {Object}\n */\nexport function constructFile(file) {\n  return Object.assign(file, {\n    clientTempId: uuid.v4(),\n    displayName: file.name,\n    fileSize: file.size,\n    fileSizePretty: bytesToSize(file.size),\n    mimeType: file.type\n  });\n}\n\n/**\n * Takes an array of files and formats them with appropriate fields\n * @param {Array} files\n * @returns {Array}\n */\nexport function constructFiles(files) {\n  const constructedFiles = [];\n\n  for (let i = 0; i < files.length; i += 1) {\n    constructedFiles.push(constructFile(files[i]));\n  }\n\n  return constructedFiles;\n}\n\n/**\n * Checks if file object is an image\n * @param {Object} file\n * @returns {Boolean}\n */\nexport function isImage(file) {\n  return file.type.indexOf('image') !== -1;\n}\n\n/**\n * Cleans a file object\n * @param {Object} file\n * @returns {Object}\n */\nexport function sanitize(file) {\n  return Object.assign(file, {\n    id: file.clientTempId,\n    displayName: file.displayName || null,\n    fileSize: file.fileSize || 0,\n    fileSizePretty: bytesToSize(file.fileSize)\n  });\n}\n\n/**\n * Converts a mimeType string into a human readable string\n * @param {String} mimeType\n * @returns {String}\n */\nexport function getFileType(mimeType) {\n  if (FILE_TYPES[mimeType]) {\n    return FILE_TYPES[mimeType];\n  }\n  if (mimeType) {\n    const tokens = mimeType.split('/');\n\n    if (tokens[0] === 'image') {\n      return 'image';\n    }\n    if (tokens[0] === 'text') {\n      return `${tokens[1].charAt(0).toUpperCase()}${tokens[1].slice(1)} file`;\n    }\n  }\n\n  return 'file';\n}\n\n/**\n * Checks the files in an array and determines if their file size is too large.\n *\n * @param {Array} files An array of file objects with a `size` property\n * @param {function} addError Function from the errors redux action\n * @param {function} removeError Function from the errors redux action\n * @returns {boolean0}\n */\nexport function checkMaxFileSize(files, addError, removeError) {\n  const maxSizeExceeded = files.some((file) => file.size >= FILE_ATTACHMENT_MAX_SIZE);\n\n  if (maxSizeExceeded) {\n    const errorID = 'file-attachment-threshold';\n\n    addError({\n      id: errorID,\n      actionTitle: 'Dismiss',\n      onAction: () => removeError(errorID),\n      displayTitle: 'Too big for the web!',\n      displaySubtitle: 'Only attachments smaller than 150MB are allowed',\n      temporary: true\n    });\n\n\n    return false;\n  }\n\n  return true;\n}\n","/**\n * Takes a component and provides the correct name\n * @param {String} C\n * @returns {String}\n */\nexport function getDisplayName(C) {\n  return C.displayName || C.name || 'C';\n}\n\nexport default {};\n","import moment from 'moment';\n\n/**\n * format\n * - before a week ago from now: MM/DD/YY, h:mm meridiem\n * - yesterday: Yesterday at h:mm\n * - a week ago from now: DAY h:mm meridiem\n * - today: h:mm meridiem\n *\n * @param {Object} time moment object for specific time\n * @returns {String} nicely formatted timestamp\n */\nexport function formatDate(time) {\n  const now = moment();\n  let rawTime = time || moment();\n\n  switch (typeof rawTime) {\n    case 'number':\n    case 'string':\n      rawTime = moment(rawTime);\n      break;\n    default:\n  }\n  // note endOf(day) compare to normalize now no matter how it was created\n  if (now.endOf('day').diff(rawTime, 'days') === 0) {\n    // today\n    return rawTime.format('h:mm A');\n  }\n  if (now.startOf('day').diff(rawTime) <= 86400000) {\n    // yesterday (60*60*24*1000 = 86400000)\n    return rawTime.calendar();\n  }\n  if (now.startOf('day').diff(rawTime) <= 518400000) {\n    // 6 days ago from today (60*60*24*6*1000 = 518400000)\n    return rawTime.format('dddd h:mm A');\n  }\n\n  return rawTime.format('M/D/YY, h:mm A');\n}\n\nexport default {};\n","import uuid from 'uuid';\n\nimport {base64} from '@webex/common';\nimport {escapeSync} from '@webex/helper-html';\n\nimport {isImage} from './files';\n\n/**\n * Constructs a default activity\n *\n * @export\n * @param {object} conversation\n * @param {object} activityObject\n * @param {any} actor\n * @param {boolean} [sanitize = false]\n * @returns {object}\n */\nexport function constructActivity(conversation, activityObject, actor, sanitize = false) {\n  const clientTempId = `sdk-widget-${uuid.v4()}`;\n\n  return {\n    actor: {\n      displayName: actor.name,\n      id: actor.id,\n      objectType: 'person'\n    },\n    // Needed for round trip\n    clientTempId,\n    id: clientTempId,\n    // Minimum properties needed by API\n    object: sanitize ? {\n      ...activityObject,\n      content: activityObject.content && escapeSync(activityObject.content)\n    } : activityObject,\n    target: {\n      id: conversation.id,\n      objectType: 'conversation'\n    },\n    verb: 'post',\n    published: new Date().toISOString(),\n    clientPublished: new Date().toISOString(),\n    _status: 'pending',\n    _meta: {\n      actor,\n      conversation,\n      text: activityObject\n    }\n  };\n}\n\n\n/**\n * Constructs a share activity\n *\n * @export\n * @param {object} conversation\n * @param {object} activityObject\n * @param {object} actor\n * @param {array} files\n * @param {object} shareActivity\n * @param {boolean} [sanitize = false]\n * @returns {object}\n */\n// eslint-disable-next-line max-len\nexport function constructActivityWithContent(conversation, activityObject, actor, files, shareActivity, sanitize = false) {\n  const activity = constructActivity(conversation, activityObject, actor, sanitize);\n\n  activity.object.objectType = 'content';\n  activity.verb = 'share';\n  const items = files.map((file) => {\n    const item = Object.assign({}, file, {\n      objectType: 'file',\n      url: file.clientTempId\n    });\n\n    if (isImage(file)) {\n      item.image = {\n        url: file.thumbnail\n      };\n    }\n\n    return item;\n  });\n\n  activity.object.files = {\n    items\n  };\n  // eslint-disable-reason _meta comes from SDK\n  // eslint-disable-next-line no-underscore-dangle\n  activity._meta.shareActivity = shareActivity;\n\n  return activity;\n}\n\n\n/**\n * Constructs an Event from incoming Mercury Activity\n *\n * @export\n * @param {Object} activity from Mercury\n * @returns {Object}\n */\nexport function constructActivityEventData(activity) {\n  const hydraActivity = Object.assign({}, activity);\n\n  hydraActivity.actorId = base64.encode(`ciscospark://us/PEOPLE/${activity.actor.id}`);\n  // Base64 encode uuids\n  hydraActivity.id = base64.encode(`ciscospark://us/MESSAGE/${activity.id}`);\n  hydraActivity.roomId = base64.encode(`ciscospark://us/ROOM/${activity.target.id}`);\n  hydraActivity.target = Object.assign({}, activity.target, {\n    id: base64.encode(`ciscospark://us/ROOM/${activity.target.id}`)\n  });\n\n  return hydraActivity;\n}\n","import {constructHydraId as _constructHydraId, deconstructHydraId} from '@webex/common';\n\n/**\n * Constructs a hydra id for a given uuid and type\n *\n * @export\n * @param {string} type one of PEOPLE, TEAM, ROOM\n * @param {any} id\n * @param {string} cluster\n * @returns {string}\n */\nexport function constructHydraId(type, id, cluster) {\n  return id ? _constructHydraId(type, id, cluster) : '';\n}\n\n/**\n * Deconstructs a hydra id and provides the uuid\n *\n * @export\n * @param {String} id\n * @returns {object} hydra\n * @returns {String} hydra.id\n * @returns {String} hydra.type\n * @returns {String} hydra.cluster\n */\nexport {deconstructHydraId};\n\nexport const hydraTypes = {\n  ATTACHMENT_ACTION: 'ATTACHMENT_ACTION',\n  CONTENT: 'CONTENT',\n  MEMBERSHIP: 'MEMBERSHIP',\n  MESSAGE: 'MESSAGE',\n  ORGANIZATION: 'ORGANIZATION',\n  PEOPLE: 'PEOPLE',\n  ROOM: 'ROOM',\n  TEAM: 'TEAM'\n};\n\n/**\n * Tests if a string is a UUID\n * @param {String} string\n * @returns {Boolean}\n */\nexport function isUuid(string) {\n  const uuidRegExp = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\n  return uuidRegExp.test(string);\n}\n\n\n/**\n * Takes a Conversation URL and returns the Uuid\n * @param {String} convoUrl\n * @returns {String|Boolean}\n */\nexport function getConvoIdFromUrl(convoUrl) {\n  const id = convoUrl.split('/').pop();\n\n  if (isUuid(id)) {\n    return id;\n  }\n\n  return false;\n}\n\n/**\n * @typedef {object} DeconstructedId\n * @param {string} [id] - id of the object destructed\n * @param {string} [cluster] - cluster location of the object destructed\n * @param {string} [type] - type of object destructed\n */\n/**\n * Validates a id as a UUID or a hydra encoded UUID\n * @param {String} id\n * @returns {DeconstructedId} empty object if not a valid input\n */\nexport function validateAndDecodeId(id) {\n  if (!(id && id.length)) {\n    return {};\n  }\n\n  if (isUuid(id)) {\n    return {\n      id\n    };\n  }\n\n  // Check for base 64 encoding\n  try {\n    const idParts = deconstructHydraId(id);\n\n    if (isUuid(idParts.id)) {\n      return idParts;\n    }\n  }\n  catch (e) {\n    if (e.name !== 'InvalidCharacterError') {\n      throw e;\n    }\n  }\n\n  return {};\n}\n","export function validateSipUri(uri) {\n  const re = /^(sip):(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return re.test(uri);\n}\n\nexport default {};\n","import {\n  setDisplayName,\n  wrapDisplayName\n} from 'recompose';\n\nexport function setWrappedDisplayName(name) {\n  return (BaseComponent) =>\n    setDisplayName(\n      wrapDisplayName(BaseComponent.WrappedComponent || BaseComponent, name)\n    )(BaseComponent);\n}\n\nexport default {};\n","/**\n * @param {String} hex\n * @param {Boolean} isDarkShade\n * @returns {String}\n*/\nexport function getTeamColor(hex, isDarkShade) {\n  switch (hex) {\n    // archived\n    case '#AEAEAF':\n      return hex;\n    // red\n    case '#F0AFA7':\n    case '#83605B':\n    case '#EC6959':\n    case '#F96C5E':\n    case '#AE3201':\n    case '#EB596B':\n    case '#C05E59':\n    case '#F4735E':\n    case '#FF8F84':\n    case '#E1480B':\n      return isDarkShade ? '#83605B' : '#F0AFA7';\n    // bouquet\n    case '#DABDCA':\n    case '#77676E':\n    case '#B57B94':\n    case '#BA4E9E':\n    case '#C7567A':\n    case '#B92819':\n      return isDarkShade ? '#77676E' : '#DABDCA';\n    // plum\n    case '#D7ABE1':\n    case '#765D7B':\n    case '#BA4D9F':\n    case '#E2738C':\n    case '#A15AA1':\n    case '#8164A8':\n    case '#8E5ACF':\n    case '#A359A3':\n    case '#AF56C2':\n    case '#C589C5':\n    case '#731F73':\n      return isDarkShade ? '#765D7B' : '#D7ABE1';\n    // blue\n    case '#A9C7EF':\n    case '#5C6D83':\n    case '#5390E0':\n    case '#04699A':\n    case '#3F8AA6':\n    case '#7875E1':\n    case '#0991D3':\n    case '#28A1DB':\n      return isDarkShade ? '#5C6D83' : '#A9C7EF';\n    // yellow\n    case '#F6D28D':\n    case '#87734D':\n    case '#D28C07':\n    case '#C6871F':\n    case '#C4AE50':\n    case '#F8AF26':\n      return isDarkShade ? '#87734D' : '#F6D28D';\n    // green\n    case '#B8D2A9':\n    case '#65735C':\n    case '#7BAF5D':\n    case '#27946B':\n    case '#A0AF57':\n    case '#067F67':\n      return isDarkShade ? '#65735C' : '#B8D2A9';\n    // mint\n    case '#98D5CA':\n    case '#53746E':\n    case '#33AC96':\n    case '#55C3AE':\n    case '#00B57E':\n    case '#5AAE76':\n      return isDarkShade ? '#53746E' : '#98D5CA';\n    // duck egg\n    case '#90BDC1':\n    case '#4F6769':\n    case '#217C84':\n    case '#3FAAB5':\n      return isDarkShade ? '#4F6769' : '#90BDC1';\n    // orange\n    case '#F9BB85':\n    case '#886649':\n    case '#FE8216':\n    case '#F05F20':\n    case '#E99849':\n    case '#EF824F':\n    case '#E04838':\n    case '#FF895A':\n      return isDarkShade ? '#886649' : '#F9BB85';\n    // cyan\n    case '#81CDD4':\n    case '#467074':\n    case '#039BA9':\n    case '#737885':\n      return isDarkShade ? '#467074' : '#81CDD4';\n\n    default:\n      // return cyan for unmapped colors\n      return isDarkShade ? '#467074' : '#81CDD4';\n  }\n}\n\nexport default {};\n","import * as NotificationsConstants from './constants';\n\n/*\n * Get the badge state of a conversation\n * @param  {Object} space - a space\n * @param  {boolean} [unread=false] - whether this conversation has unread activities\n * @param  {boolean} [hasMention=false] - whether this conversation has unread mentions\n * @param  {string} [globalNotificationState=NotificationsConstants.NOTIFICATIONS_ALL]\n *          - the value of global notification setting\n * @returns {string} a value that indicates what the badge of this conversation should be.\n */\nexport function getBadgeState({\n  space, unread = false, hasMention = false, globalNotificationState = NotificationsConstants.NOTIFICATIONS_ALL\n}) {\n  let badge = NotificationsConstants.NOTIFICATIONS_BADGE_NONE;\n\n  if (!space) {\n    return badge;\n  }\n\n  // One on one spaces\n  if (space.type === NotificationsConstants.SPACE_TYPE_ONE_ON_ONE) {\n    const isMuted = space.tags\n      && space.tags.includes(NotificationsConstants.MESSAGE_NOTIFICATIONS_OFF);\n\n    if (isMuted) {\n      return NotificationsConstants.NOTIFICATIONS_BADGE_MUTE;\n    }\n    if (unread) {\n      return NotificationsConstants.NOTIFICATIONS_BADGE_UNREAD;\n    }\n\n    return badge;\n  }\n\n  // Group spaces\n  const {\n    isMentionNotificationsOn,\n    isMentionNotificationsOff,\n    isMessageNotificationsOn,\n    isMessageNotificationsOff\n  } = space;\n\n  if (isMessageNotificationsOff === undefined && isMessageNotificationsOn === undefined\n    || isMentionNotificationsOff === undefined && isMentionNotificationsOn === undefined) {\n    // No change to room notifications so default to global\n    if (hasMention && globalNotificationState !== NotificationsConstants.NOTIFICATIONS_OFF) {\n      badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n    }\n    else if (unread && globalNotificationState === NotificationsConstants.NOTIFICATIONS_ALL) {\n      badge = NotificationsConstants.NOTIFICATIONS_BADGE_UNREAD;\n    }\n\n    return badge;\n  }\n\n  switch (globalNotificationState) {\n    case NotificationsConstants.NOTIFICATIONS_OFF:\n      if (!isMessageNotificationsOff && isMentionNotificationsOn) {\n        // All\n        if (hasMention) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n        }\n        else if (unread) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_UNREAD;\n        }\n        else {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_UNMUTE;\n        }\n      }\n      else if (isMessageNotificationsOff && isMentionNotificationsOn) {\n        // Mention only\n        if (hasMention) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n        }\n        else {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_UNMUTE;\n        }\n      }\n      else {\n        badge = NotificationsConstants.NOTIFICATIONS_BADGE_NONE;\n      }\n      break;\n    case NotificationsConstants.NOTIFICATIONS_ALL:\n      if (!isMessageNotificationsOff) {\n        // Global or All\n        if (hasMention) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n        }\n        else if (unread) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_UNREAD;\n        }\n        else {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_NONE;\n        }\n      }\n      else if (isMessageNotificationsOff && isMentionNotificationsOn) {\n        // Mention only\n        if (hasMention) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n        }\n        else {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MUTE;\n        }\n      }\n      else {\n        // Off\n        badge = NotificationsConstants.NOTIFICATIONS_BADGE_MUTE;\n      }\n      break;\n    case NotificationsConstants.NOTIFICATIONS_MENTIONS:\n      if (isMessageNotificationsOff === isMentionNotificationsOn) {\n        // Global or Mention only\n        if (hasMention) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n        }\n        else {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_NONE;\n        }\n      }\n      else if (!isMessageNotificationsOff && isMentionNotificationsOn) {\n        // All\n        if (hasMention) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n        }\n        else if (unread) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_UNREAD;\n        }\n        else {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_UNMUTE;\n        }\n      }\n      else if (isMessageNotificationsOff && isMentionNotificationsOn) {\n        // Mention only\n        if (hasMention) {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_MENTION;\n        }\n        else {\n          badge = NotificationsConstants.NOTIFICATIONS_BADGE_NONE;\n        }\n      }\n      else if (isMessageNotificationsOff && !isMentionNotificationsOn) {\n        // Off\n        badge = NotificationsConstants.NOTIFICATIONS_BADGE_MUTE;\n      }\n      break;\n    default:\n      break;\n  }\n\n  return badge;\n}\n\n/*\n * Get Global Notification State\n * @param  {Object} features - map of features\n * @returns {string} a value that indicates the global notification type that is based on global notification features\n */\nexport function getGlobalNotificationState(features) {\n  let globalNotificationState = NotificationsConstants.NOTIFICATIONS_OFF;\n  const items = features.get('items');\n\n  if (features && items && items.size > 0) {\n    const groupMessageNotifications = items.get(NotificationsConstants.FEATURES_GROUP_MESSAGE_NOTIFICATIONS);\n    const mentionNotifications = items.get(NotificationsConstants.FEATURES_MENTION_NOTIFICATIONS);\n\n    if (groupMessageNotifications) {\n      globalNotificationState = NotificationsConstants.NOTIFICATIONS_ALL;\n    }\n    else if (mentionNotifications) {\n      globalNotificationState = NotificationsConstants.NOTIFICATIONS_MENTIONS;\n    }\n  }\n\n  return globalNotificationState;\n}\n","/*\n * Check for mentions\n * @param  {Object} currentUser - current user\n * @param  {Object} space - a space\n * @returns {boolean} a value that indicates whether this space has mentions of targeted user/all or not\n */\nexport function hasMentions(currentUser, space) {\n  const {latestActivity} = space;\n\n  if (latestActivity) {\n    const mentions = latestActivity.object && space.latestActivity.object.mentions;\n    const {id} = currentUser;\n\n    // @User mentions\n    const userMentions = mentions && mentions.items && mentions.items.find((item) => item.id === id);\n\n    // @All mentions\n    const allMentions = mentions && mentions.items && mentions.items.length === 0;\n\n    if (userMentions || allMentions) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default hasMentions;\n","const iconTypes = {\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'file-spreadsheet',\n  'application/vnd.ms-excel': 'file-spreadsheet',\n  'application/xls': 'file-spreadsheet',\n  'application/excel': 'file-spreadsheet',\n  'application/pdf': 'pdf',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'file-graph',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'file-text',\n  'application/msword': 'file-text',\n  'application/octet-stream': 'document',\n  'application/zip': 'file-zip',\n  'application/x-zip-compressed': 'file-zip',\n  'multipart/x-zip': 'file-zip'\n};\n\n/**\n * @param {String} mimeType\n * @param {Integer} size\n * @returns {String}\n*/\nexport function getFileIcon(mimeType, size) {\n  if (!mimeType) {\n    return `document_${size}`;\n  }\n\n  if (iconTypes[mimeType]) {\n    return `${iconTypes[mimeType]}_${size}`;\n  }\n\n  const tokens = mimeType.split('/');\n\n  if (tokens[0] === 'image') {\n    return `file-image_${size}`;\n  }\n\n  if (tokens[0] === 'video') {\n    return `file-video_${size}`;\n  }\n\n  if (tokens[0] === 'audio') {\n    return `file-audio_${size}`;\n  }\n  if (tokens[0] === 'text') {\n    return `file-text_${size}`;\n  }\n\n  return `document_${size}`;\n}\n\nexport default {};\n","import * as AdaptiveCard from 'adaptivecards';\nimport MDTextInput from '@webex/react-component-md-text-input';\nimport MDToggleInput from '@webex/react-component-md-toggle-input';\nimport MDChoiceSetInput from '@webex/react-component-md-choiceset-input';\nimport {createMessageObject} from '@webex/redux-module-activity';\n\nimport {\n  CARD_ATTACHMENT_TYPE,\n  TEXT_INPUT_ELEMENT,\n  TOGGLE_INPUT_ELEMENT,\n  CHOICE_SET_INPUT_ELEMENT,\n  ADAPTIVE_CARD_HOST_CONFIG,\n  ADAPTIVE_CARD_OPEN_URL_ACTION,\n  ADAPTIVE_CARD_SUBMIT_ACTION\n} from './constants';\n\nconst BaseHostConfig = new AdaptiveCard.HostConfig(ADAPTIVE_CARD_HOST_CONFIG);\n\n/* eslint no-param-reassign: 2 */\n/**\n * It used to handle markdown\n * esLint is disabled for param-reassign because based on this documentation https://github.com/microsoft/AdaptiveCards/blob/master/source/nodejs/adaptivecards/README.md#supporting-markdown\n * need to modify the result object only\n * @param {string} text\n * @param {object} result\n * @returns {object}\n */\nAdaptiveCard.AdaptiveCard.onProcessMarkdown = function processMarkdown(text, result = {}) {\n  try {\n    const markedString = createMessageObject(text).content;\n\n    result.outputHtml = markedString !== null ? markedString : text;\n    result.didProcess = true;\n  }\n  catch (err) {\n    result.didProcess = false;\n  }\n\n  return result;\n};\n\n/**\n * It used to call momentum ui compoennts and returns patched adaptive card\n * @param {object} addChildNode\n * @returns {object}\n */\nexport function getPatchedAdaptiveCard(addChildNode = null) {\n  AdaptiveCard.GlobalRegistry.elements.register(TEXT_INPUT_ELEMENT, () => new MDTextInput(addChildNode));\n  AdaptiveCard.GlobalRegistry.elements.register(\n    TOGGLE_INPUT_ELEMENT, () => new MDToggleInput(addChildNode)\n  );\n  AdaptiveCard.GlobalRegistry.elements.register(\n    CHOICE_SET_INPUT_ELEMENT,\n    () => new MDChoiceSetInput(addChildNode)\n  );\n\n  return AdaptiveCard;\n}\n\n/**\n * It will return the json object by taking the input string\n * @param {string} card\n * @param {object} sdkInstance\n * @returns {object}\n */\nexport function getCardConfig(card, sdkInstance) {\n  try {\n    return JSON.parse(card);\n  }\n  catch (err) {\n    sdkInstance.logger.error('Failed to parse Adaptive Card', err);\n  }\n\n  return null;\n}\n\n/**\n * It will return the rendered adaptive card when message contains card\n * else returns display name\n * @param {array} cards\n * @param {string} displayName\n * @param {object} sdkInstance\n * @param {object} addChildNode\n * @param {string} parentActivity\n * @param {object} convo\n * @param {Function} handleSubmitAction\n * @returns {object}\n */\n\nexport function getAdaptiveCard(\n  cards,\n  displayName,\n  sdkInstance,\n  addChildNode = null,\n  parentActivity,\n  convo,\n  handleSubmitAction\n) {\n  // Parse the card for rendering\n  try {\n    const cardConfig = getCardConfig(cards[0], sdkInstance);\n    const PatchedAdaptiveCard = getPatchedAdaptiveCard(addChildNode);\n    const adaptiveCard = new PatchedAdaptiveCard.AdaptiveCard();\n\n    adaptiveCard.onExecuteAction = (action) => {\n      switch (action.getJsonTypeName()) {\n        case ADAPTIVE_CARD_OPEN_URL_ACTION:\n          window.open(action.url);\n          break;\n        case ADAPTIVE_CARD_SUBMIT_ACTION: {\n          // get the rendered element in parent object for select action\n          const btnClicked = action.renderedElement ? action.renderedElement : action.parent.renderedElement;\n\n          const actionInput = {\n            objectType: 'submit',\n            inputs: action.data\n          };\n\n          handleSubmitAction(convo.get('url'), actionInput, parentActivity, btnClicked);\n        }\n          break;\n        default:\n          sdkInstance.logger.error(`Adaptive card ${action.getJsonTypeName()} is not supported yet`);\n      }\n    };\n\n    adaptiveCard.parse(cardConfig);\n    adaptiveCard.hostConfig = BaseHostConfig;\n\n    return adaptiveCard.render();\n  }\n  catch (err) {\n    sdkInstance.logger.error('Failed to parse Adaptive Card', err);\n  }\n\n  return displayName;\n}\n\n/**\n * It will return the boolean value for adaptive card exists or not\n * @param {array} cards\n * @param {object} sdkInstance\n * @returns {boolean}\n */\nexport function hasAdaptiveCard(cards, sdkInstance) {\n  if (Array.isArray(cards) && cards.length > 0) {\n    const cardConfig = getCardConfig(cards[0], sdkInstance);\n\n    return cardConfig !== null && cardConfig.type === CARD_ATTACHMENT_TYPE;\n  }\n\n  return false;\n}\n","import {FEATURES_WIDGET_ADAPTIVE_CARD, FEATURES_WIDGET_ADAPTIVE_CARD_OFF, FEATURES_WIDGET_ADAPTIVE_CARD_ON} from './constants';\n// eslint-disable-next-line import/prefer-default-export\nexport function getAdaptiveCardFeatureState(features) {\n  let adaptiveCardFeatureState = FEATURES_WIDGET_ADAPTIVE_CARD_OFF;\n\n  if (features !== undefined && features !== null) {\n    const items = features.get('items');\n\n    if (features && items && items.size > 0) {\n      const adaptiveCardFeatures = items.get(FEATURES_WIDGET_ADAPTIVE_CARD);\n\n      if (adaptiveCardFeatures) {\n        adaptiveCardFeatureState = FEATURES_WIDGET_ADAPTIVE_CARD_ON;\n      }\n    }\n  }\n\n  return adaptiveCardFeatureState;\n}\n","import ReactDOM from 'react-dom';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function renderCardElement(jsx, container, addChildNode) {\n  ReactDOM.render(jsx, container);\n  if (addChildNode && typeof addChildNode === 'function') {\n    addChildNode(container);\n  }\n}\n","const urlTypes = ['url', 'backgroundImage', 'iconUrl'];\n\n/**\n * replaces the index with the uri in cards\n * @param {Object} cardsActivity\n * @param {Array} decryptedURLs\n * @returns {Object}\n */\nexport function replaceIndexWithBlobURL(cardsActivity, decryptedURLs) {\n  const activityObject = JSON.parse(JSON.stringify(cardsActivity));\n\n  if (activityObject) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const property in activityObject) {\n      if (Object.prototype.hasOwnProperty.call(activityObject, property)) {\n        const index = urlTypes.indexOf(property);\n        const key = urlTypes[index];\n\n        if (urlTypes.includes(property) && property === key && !Number.isNaN(Number(activityObject[key]))) {\n          activityObject[key] = decryptedURLs[Number(activityObject[key])];\n        }\n        else if (typeof activityObject[property] === 'object') {\n          activityObject[property] = replaceIndexWithBlobURL(activityObject[property], decryptedURLs);\n        }\n      }\n    }\n  }\n\n  return activityObject;\n}\n\nexport default replaceIndexWithBlobURL;\n"],"names":["API_ACTIVITY_VERB","ACKNOWLEDGE","ADD","ADD_MICROAPP_INSTANCE","ARCHIVE","ASSIGN","ASSIGN_MODERATOR","CANCEL","CREATE","DECLINE","DELETE","FAVORITE","GAP","HIDE","LEAVE","LOCK","MUTE","POST","REMOVE","SCHEDULE","SET","SHARE","START","TAG","TERMINATE","TOMBSTONE","UNARCHIVE","UNASSIGN","UNASSIGN_MODERATOR","UNFAVORITE","UNHIDE","UNLOCK","UNMUTE","UNSET","UNTAG","UPDATE","UPDATEKEY","API_ACTIVITY_TYPE","REPLY","MENTION_NOTIFICATIONS_ON","MENTION_NOTIFICATIONS_OFF","MESSAGE_NOTIFICATIONS_ON","MESSAGE_NOTIFICATIONS_OFF","NOTIFICATIONS_GLOBAL","NOTIFICATIONS_OFF","NOTIFICATIONS_MENTIONS","NOTIFICATIONS_ALL","EMAIL_NOTIFICATIONS_MENTIONS","EMAIL_NOTIFICATIONS_ONE_TO_ONES","EMAIL_NOTIFICATIONS_DIGEST_EMAILS","NOTIFICATIONS_BADGE_NONE","NOTIFICATIONS_BADGE_UNREAD","NOTIFICATIONS_BADGE_MENTION","NOTIFICATIONS_BADGE_MUTE","NOTIFICATIONS_BADGE_UNMUTE","FEATURES_USER","FEATURES_GROUP_MESSAGE_NOTIFICATIONS","FEATURES_MENTION_NOTIFICATIONS","SPACE_TYPE_ONE_ON_ONE","SPACE_TYPE_GROUP","TAG_MUTED","CARD_ATTACHMENT_TYPE","CARD_CONTAINS_IMAGE","ACTIVITY_CARDS","ACTIVITY_OBJECT_CONTENT_CATEGORY_IMAGES","ADAPTIVE_CARD_OPEN_URL_ACTION","ADAPTIVE_CARD_SUBMIT_ACTION","FEATURES_DEVELOPER","FEATURES_WIDGET_ADAPTIVE_CARD","FEATURES_WIDGET_ADAPTIVE_CARD_OFF","FEATURES_WIDGET_ADAPTIVE_CARD_ON","DEFAULT_VALUE_CHECK_BOX","TEXT_INPUT_ELEMENT","TOGGLE_INPUT_ELEMENT","CHOICE_SET_INPUT_ELEMENT","SUCCESS","FAILURE","PENDING","FILE_TYPES","FILE_ATTACHMENT_MAX_SIZE","ADAPTIVE_CARD_HOST_CONFIG","hostCapabilities","capabilities","choiceSetInputValueSeparator","supportsInteractivity","fontFamily","spacing","small","default","medium","large","extraLarge","padding","fontSizes","fontWeights","lighter","bolder","imageSizes","containerStyles","foregroundColors","subtle","dark","light","accent","good","warning","attention","backgroundColor","emphasis","actions","maxActions","buttonSpacing","showCard","actionMode","inlineTopMargin","style","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","adaptiveCard","allowCustomStyle","imageSet","maxImageHeight","media","allowInlinePlayback","factSet","title","size","color","isSubtle","weight","wrap","value","cssClassNamePrefix","bytesToSize","bytes","k","sizes","i","Math","floor","log","output","toPrecision","bufferToBlob","buffer","urlCreator","window","URL","webkitURL","blob","Blob","type","objectUrl","createObjectURL","constructFile","file","Object","assign","clientTempId","uuid","v4","displayName","name","fileSize","fileSizePretty","mimeType","constructFiles","files","constructedFiles","length","push","isImage","indexOf","sanitize","id","getFileType","tokens","split","charAt","toUpperCase","slice","checkMaxFileSize","addError","removeError","maxSizeExceeded","some","errorID","actionTitle","onAction","displayTitle","displaySubtitle","temporary","getDisplayName","C","formatDate","time","now","moment","rawTime","endOf","diff","format","startOf","calendar","constructActivity","conversation","activityObject","actor","objectType","object","content","escapeSync","target","verb","published","Date","toISOString","clientPublished","_status","_meta","text","constructActivityWithContent","shareActivity","activity","items","map","item","url","image","thumbnail","constructActivityEventData","hydraActivity","actorId","base64","encode","roomId","constructHydraId","cluster","_constructHydraId","hydraTypes","ATTACHMENT_ACTION","CONTENT","MEMBERSHIP","MESSAGE","ORGANIZATION","PEOPLE","ROOM","TEAM","isUuid","string","uuidRegExp","test","getConvoIdFromUrl","convoUrl","pop","validateAndDecodeId","idParts","deconstructHydraId","e","validateSipUri","uri","re","setWrappedDisplayName","BaseComponent","setDisplayName","wrapDisplayName","WrappedComponent","getTeamColor","hex","isDarkShade","getBadgeState","space","unread","hasMention","globalNotificationState","NotificationsConstants","badge","isMuted","tags","includes","isMentionNotificationsOn","isMentionNotificationsOff","isMessageNotificationsOn","isMessageNotificationsOff","undefined","getGlobalNotificationState","features","get","groupMessageNotifications","mentionNotifications","hasMentions","currentUser","latestActivity","mentions","userMentions","find","allMentions","iconTypes","getFileIcon","BaseHostConfig","AdaptiveCard","HostConfig","onProcessMarkdown","processMarkdown","result","markedString","createMessageObject","outputHtml","didProcess","err","getPatchedAdaptiveCard","addChildNode","GlobalRegistry","elements","register","MDTextInput","MDToggleInput","MDChoiceSetInput","getCardConfig","card","sdkInstance","JSON","parse","logger","error","getAdaptiveCard","cards","parentActivity","convo","handleSubmitAction","cardConfig","PatchedAdaptiveCard","onExecuteAction","action","getJsonTypeName","open","btnClicked","renderedElement","parent","actionInput","inputs","data","hostConfig","render","hasAdaptiveCard","Array","isArray","getAdaptiveCardFeatureState","adaptiveCardFeatureState","adaptiveCardFeatures","renderCardElement","jsx","container","ReactDOM","urlTypes","replaceIndexWithBlobURL","cardsActivity","decryptedURLs","stringify","property","prototype","hasOwnProperty","call","index","key","Number","isNaN"],"mappings":"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"}